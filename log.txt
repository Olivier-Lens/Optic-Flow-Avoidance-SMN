***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(0.0000) * weight[1,1](0.1000) => 0.0000
activation[2] = self(0.0000) * weight[2,2](0.1000) => 0.0000
activation[3] = self(0.0000) * weight[3,3](0.1000) => 0.0000
activation[4] = self(0.0000) * weight[4,4](0.1000) => 0.0000
activation[5] = self(0.0000) * weight[5,5](0.1000) => 0.0000
activation[6] = self(0.0000) * weight[6,6](0.1000) => 0.0000
activation[7] = self(0.0000) * weight[7,7](0.1000) => 0.0000
activation[8] = self(0.0000) * weight[8,8](0.1000) => 0.0000
activation[9] = self(0.0000) * weight[9,9](0.1000) => 0.0000
activation[10] = self(0.0000) * weight[10,10](0.1000) => 0.0000
  b. Update inputs from other neurons
activation[1] = self(0.0000) + network_input[1]=32.0000 => 32.0000
activation[2] = self(0.0000) + network_input[2]=32.0000 => 32.0000
activation[3] = self(0.0000) + output[1](0.0000) * 1.0000 => 0.0000
activation[3] = self(0.0000) + output[7](0.0000) * -0.5000 => 0.0000
activation[3] = self(0.0000) + output[8](0.0000) * -0.5000 => 0.0000
activation[4] = self(0.0000) + output[1](0.0000) * 0.5000 => 0.0000
activation[4] = self(0.0000) + output[2](0.0000) * 0.5000 => 0.0000
activation[4] = self(0.0000) + output[6](0.0000) * -0.5000 => 0.0000
activation[4] = self(0.0000) + output[8](0.0000) * -0.5000 => 0.0000
activation[5] = self(0.0000) + output[2](0.0000) * 1.0000 => 0.0000
activation[5] = self(0.0000) + output[6](0.0000) * -0.5000 => 0.0000
activation[5] = self(0.0000) + output[7](0.0000) * -0.5000 => 0.0000
activation[6] = self(0.0000) + output[3](0.0000) * 1.0000 => 0.0000
activation[7] = self(0.0000) + output[4](0.0000) * 1.0000 => 0.0000
activation[8] = self(0.0000) + output[5](0.0000) * 1.0000 => 0.0000
activation[9] = self(0.0000) + output[3](0.0000) * 0.7500 => 0.0000
activation[9] = self(0.0000) + output[4](0.0000) * 0.2500 => 0.0000
activation[10] = self(0.0000) + output[4](0.0000) * 0.2500 => 0.0000
activation[10] = self(0.0000) + output[5](0.0000) * 0.7500 => 0.0000
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(32.0000) > threshold(0.0000)? ==> 32.0000
neuronOutput[2]: activation(32.0000) > threshold(0.0000)? ==> 32.0000
neuronOutput[3]: activation(0.0000) > threshold(0.0000)? ==> 0.0000
neuronOutput[4]: activation(0.0000) > threshold(0.0000)? ==> 0.0000
neuronOutput[5]: activation(0.0000) > threshold(0.0000)? ==> 0.0000
neuronOutput[6]: activation(0.0000) > threshold(0.0000)? ==> 0.0000
neuronOutput[7]: activation(0.0000) > threshold(0.0000)? ==> 0.0000
neuronOutput[8]: activation(0.0000) > threshold(0.0000)? ==> 0.0000
neuronOutput[9]: activation(0.0000) > threshold(0.0000)? ==> 0.0000
neuronOutput[10]: activation(0.0000) > threshold(0.0000)? ==> 0.0000
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](0.0000)
networkOutput[2] := neuronOutput[10](0.0000)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(32.0000) * weight[1,1](0.1000) => 3.2000
activation[2] = self(32.0000) * weight[2,2](0.1000) => 3.2000
activation[3] = self(0.0000) * weight[3,3](0.1000) => 0.0000
activation[4] = self(0.0000) * weight[4,4](0.1000) => 0.0000
activation[5] = self(0.0000) * weight[5,5](0.1000) => 0.0000
activation[6] = self(0.0000) * weight[6,6](0.1000) => 0.0000
activation[7] = self(0.0000) * weight[7,7](0.1000) => 0.0000
activation[8] = self(0.0000) * weight[8,8](0.1000) => 0.0000
activation[9] = self(0.0000) * weight[9,9](0.1000) => 0.0000
activation[10] = self(0.0000) * weight[10,10](0.1000) => 0.0000
  b. Update inputs from other neurons
activation[1] = self(3.2000) + network_input[1]=32.0000 => 35.2000
activation[2] = self(3.2000) + network_input[2]=32.0000 => 35.2000
activation[3] = self(0.0000) + output[1](32.0000) * 1.0000 => 32.0000
activation[3] = self(32.0000) + output[7](0.0000) * -0.5000 => 32.0000
activation[3] = self(32.0000) + output[8](0.0000) * -0.5000 => 32.0000
activation[4] = self(0.0000) + output[1](32.0000) * 0.5000 => 16.0000
activation[4] = self(16.0000) + output[2](32.0000) * 0.5000 => 32.0000
activation[4] = self(32.0000) + output[6](0.0000) * -0.5000 => 32.0000
activation[4] = self(32.0000) + output[8](0.0000) * -0.5000 => 32.0000
activation[5] = self(0.0000) + output[2](32.0000) * 1.0000 => 32.0000
activation[5] = self(32.0000) + output[6](0.0000) * -0.5000 => 32.0000
activation[5] = self(32.0000) + output[7](0.0000) * -0.5000 => 32.0000
activation[6] = self(0.0000) + output[3](0.0000) * 1.0000 => 0.0000
activation[7] = self(0.0000) + output[4](0.0000) * 1.0000 => 0.0000
activation[8] = self(0.0000) + output[5](0.0000) * 1.0000 => 0.0000
activation[9] = self(0.0000) + output[3](0.0000) * 0.7500 => 0.0000
activation[9] = self(0.0000) + output[4](0.0000) * 0.2500 => 0.0000
activation[10] = self(0.0000) + output[4](0.0000) * 0.2500 => 0.0000
activation[10] = self(0.0000) + output[5](0.0000) * 0.7500 => 0.0000
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.2000) > threshold(0.0000)? ==> 35.2000
neuronOutput[2]: activation(35.2000) > threshold(0.0000)? ==> 35.2000
neuronOutput[3]: activation(32.0000) > threshold(0.0000)? ==> 32.0000
neuronOutput[4]: activation(32.0000) > threshold(0.0000)? ==> 32.0000
neuronOutput[5]: activation(32.0000) > threshold(0.0000)? ==> 32.0000
neuronOutput[6]: activation(0.0000) > threshold(0.0000)? ==> 0.0000
neuronOutput[7]: activation(0.0000) > threshold(0.0000)? ==> 0.0000
neuronOutput[8]: activation(0.0000) > threshold(0.0000)? ==> 0.0000
neuronOutput[9]: activation(0.0000) > threshold(0.0000)? ==> 0.0000
neuronOutput[10]: activation(0.0000) > threshold(0.0000)? ==> 0.0000
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](0.0000)
networkOutput[2] := neuronOutput[10](0.0000)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.2000) * weight[1,1](0.1000) => 3.5200
activation[2] = self(35.2000) * weight[2,2](0.1000) => 3.5200
activation[3] = self(32.0000) * weight[3,3](0.1000) => 3.2000
activation[4] = self(32.0000) * weight[4,4](0.1000) => 3.2000
activation[5] = self(32.0000) * weight[5,5](0.1000) => 3.2000
activation[6] = self(0.0000) * weight[6,6](0.1000) => 0.0000
activation[7] = self(0.0000) * weight[7,7](0.1000) => 0.0000
activation[8] = self(0.0000) * weight[8,8](0.1000) => 0.0000
activation[9] = self(0.0000) * weight[9,9](0.1000) => 0.0000
activation[10] = self(0.0000) * weight[10,10](0.1000) => 0.0000
  b. Update inputs from other neurons
activation[1] = self(3.5200) + network_input[1]=32.0000 => 35.5200
activation[2] = self(3.5200) + network_input[2]=32.0000 => 35.5200
activation[3] = self(3.2000) + output[1](35.2000) * 1.0000 => 38.4000
activation[3] = self(38.4000) + output[7](0.0000) * -0.5000 => 38.4000
activation[3] = self(38.4000) + output[8](0.0000) * -0.5000 => 38.4000
activation[4] = self(3.2000) + output[1](35.2000) * 0.5000 => 20.8000
activation[4] = self(20.8000) + output[2](35.2000) * 0.5000 => 38.4000
activation[4] = self(38.4000) + output[6](0.0000) * -0.5000 => 38.4000
activation[4] = self(38.4000) + output[8](0.0000) * -0.5000 => 38.4000
activation[5] = self(3.2000) + output[2](35.2000) * 1.0000 => 38.4000
activation[5] = self(38.4000) + output[6](0.0000) * -0.5000 => 38.4000
activation[5] = self(38.4000) + output[7](0.0000) * -0.5000 => 38.4000
activation[6] = self(0.0000) + output[3](32.0000) * 1.0000 => 32.0000
activation[7] = self(0.0000) + output[4](32.0000) * 1.0000 => 32.0000
activation[8] = self(0.0000) + output[5](32.0000) * 1.0000 => 32.0000
activation[9] = self(0.0000) + output[3](32.0000) * 0.7500 => 24.0000
activation[9] = self(24.0000) + output[4](32.0000) * 0.2500 => 32.0000
activation[10] = self(0.0000) + output[4](32.0000) * 0.2500 => 8.0000
activation[10] = self(8.0000) + output[5](32.0000) * 0.7500 => 32.0000
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5200) > threshold(0.0000)? ==> 35.5200
neuronOutput[2]: activation(35.5200) > threshold(0.0000)? ==> 35.5200
neuronOutput[3]: activation(38.4000) > threshold(0.0000)? ==> 38.4000
neuronOutput[4]: activation(38.4000) > threshold(0.0000)? ==> 38.4000
neuronOutput[5]: activation(38.4000) > threshold(0.0000)? ==> 38.4000
neuronOutput[6]: activation(32.0000) > threshold(0.0000)? ==> 32.0000
neuronOutput[7]: activation(32.0000) > threshold(0.0000)? ==> 32.0000
neuronOutput[8]: activation(32.0000) > threshold(0.0000)? ==> 32.0000
neuronOutput[9]: activation(32.0000) > threshold(0.0000)? ==> 32.0000
neuronOutput[10]: activation(32.0000) > threshold(0.0000)? ==> 32.0000
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](32.0000)
networkOutput[2] := neuronOutput[10](32.0000)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5200) * weight[1,1](0.1000) => 3.5520
activation[2] = self(35.5200) * weight[2,2](0.1000) => 3.5520
activation[3] = self(38.4000) * weight[3,3](0.1000) => 3.8400
activation[4] = self(38.4000) * weight[4,4](0.1000) => 3.8400
activation[5] = self(38.4000) * weight[5,5](0.1000) => 3.8400
activation[6] = self(32.0000) * weight[6,6](0.1000) => 3.2000
activation[7] = self(32.0000) * weight[7,7](0.1000) => 3.2000
activation[8] = self(32.0000) * weight[8,8](0.1000) => 3.2000
activation[9] = self(32.0000) * weight[9,9](0.1000) => 3.2000
activation[10] = self(32.0000) * weight[10,10](0.1000) => 3.2000
  b. Update inputs from other neurons
activation[1] = self(3.5520) + network_input[1]=32.0000 => 35.5520
activation[2] = self(3.5520) + network_input[2]=32.0000 => 35.5520
activation[3] = self(3.8400) + output[1](35.5200) * 1.0000 => 39.3600
activation[3] = self(39.3600) + output[7](32.0000) * -0.5000 => 23.3600
activation[3] = self(23.3600) + output[8](32.0000) * -0.5000 => 7.3600
activation[4] = self(3.8400) + output[1](35.5200) * 0.5000 => 21.6000
activation[4] = self(21.6000) + output[2](35.5200) * 0.5000 => 39.3600
activation[4] = self(39.3600) + output[6](32.0000) * -0.5000 => 23.3600
activation[4] = self(23.3600) + output[8](32.0000) * -0.5000 => 7.3600
activation[5] = self(3.8400) + output[2](35.5200) * 1.0000 => 39.3600
activation[5] = self(39.3600) + output[6](32.0000) * -0.5000 => 23.3600
activation[5] = self(23.3600) + output[7](32.0000) * -0.5000 => 7.3600
activation[6] = self(3.2000) + output[3](38.4000) * 1.0000 => 41.6000
activation[7] = self(3.2000) + output[4](38.4000) * 1.0000 => 41.6000
activation[8] = self(3.2000) + output[5](38.4000) * 1.0000 => 41.6000
activation[9] = self(3.2000) + output[3](38.4000) * 0.7500 => 32.0000
activation[9] = self(32.0000) + output[4](38.4000) * 0.2500 => 41.6000
activation[10] = self(3.2000) + output[4](38.4000) * 0.2500 => 12.8000
activation[10] = self(12.8000) + output[5](38.4000) * 0.7500 => 41.6000
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5520) > threshold(0.0000)? ==> 35.5520
neuronOutput[2]: activation(35.5520) > threshold(0.0000)? ==> 35.5520
neuronOutput[3]: activation(7.3600) > threshold(0.0000)? ==> 7.3600
neuronOutput[4]: activation(7.3600) > threshold(0.0000)? ==> 7.3600
neuronOutput[5]: activation(7.3600) > threshold(0.0000)? ==> 7.3600
neuronOutput[6]: activation(41.6000) > threshold(0.0000)? ==> 41.6000
neuronOutput[7]: activation(41.6000) > threshold(0.0000)? ==> 41.6000
neuronOutput[8]: activation(41.6000) > threshold(0.0000)? ==> 41.6000
neuronOutput[9]: activation(41.6000) > threshold(0.0000)? ==> 41.6000
neuronOutput[10]: activation(41.6000) > threshold(0.0000)? ==> 41.6000
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](41.6000)
networkOutput[2] := neuronOutput[10](41.6000)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5520) * weight[1,1](0.1000) => 3.5552
activation[2] = self(35.5520) * weight[2,2](0.1000) => 3.5552
activation[3] = self(7.3600) * weight[3,3](0.1000) => 0.7360
activation[4] = self(7.3600) * weight[4,4](0.1000) => 0.7360
activation[5] = self(7.3600) * weight[5,5](0.1000) => 0.7360
activation[6] = self(41.6000) * weight[6,6](0.1000) => 4.1600
activation[7] = self(41.6000) * weight[7,7](0.1000) => 4.1600
activation[8] = self(41.6000) * weight[8,8](0.1000) => 4.1600
activation[9] = self(41.6000) * weight[9,9](0.1000) => 4.1600
activation[10] = self(41.6000) * weight[10,10](0.1000) => 4.1600
  b. Update inputs from other neurons
activation[1] = self(3.5552) + network_input[1]=32.0000 => 35.5552
activation[2] = self(3.5552) + network_input[2]=32.0000 => 35.5552
activation[3] = self(0.7360) + output[1](35.5520) * 1.0000 => 36.2880
activation[3] = self(36.2880) + output[7](41.6000) * -0.5000 => 15.4880
activation[3] = self(15.4880) + output[8](41.6000) * -0.5000 => -5.3120
activation[4] = self(0.7360) + output[1](35.5520) * 0.5000 => 18.5120
activation[4] = self(18.5120) + output[2](35.5520) * 0.5000 => 36.2880
activation[4] = self(36.2880) + output[6](41.6000) * -0.5000 => 15.4880
activation[4] = self(15.4880) + output[8](41.6000) * -0.5000 => -5.3120
activation[5] = self(0.7360) + output[2](35.5520) * 1.0000 => 36.2880
activation[5] = self(36.2880) + output[6](41.6000) * -0.5000 => 15.4880
activation[5] = self(15.4880) + output[7](41.6000) * -0.5000 => -5.3120
activation[6] = self(4.1600) + output[3](7.3600) * 1.0000 => 11.5200
activation[7] = self(4.1600) + output[4](7.3600) * 1.0000 => 11.5200
activation[8] = self(4.1600) + output[5](7.3600) * 1.0000 => 11.5200
activation[9] = self(4.1600) + output[3](7.3600) * 0.7500 => 9.6800
activation[9] = self(9.6800) + output[4](7.3600) * 0.2500 => 11.5200
activation[10] = self(4.1600) + output[4](7.3600) * 0.2500 => 6.0000
activation[10] = self(6.0000) + output[5](7.3600) * 0.7500 => 11.5200
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5552) > threshold(0.0000)? ==> 35.5552
neuronOutput[2]: activation(35.5552) > threshold(0.0000)? ==> 35.5552
neuronOutput[3]: activation(-5.3120) > threshold(0.0000)? ==> 0.0000
neuronOutput[4]: activation(-5.3120) > threshold(0.0000)? ==> 0.0000
neuronOutput[5]: activation(-5.3120) > threshold(0.0000)? ==> 0.0000
neuronOutput[6]: activation(11.5200) > threshold(0.0000)? ==> 11.5200
neuronOutput[7]: activation(11.5200) > threshold(0.0000)? ==> 11.5200
neuronOutput[8]: activation(11.5200) > threshold(0.0000)? ==> 11.5200
neuronOutput[9]: activation(11.5200) > threshold(0.0000)? ==> 11.5200
neuronOutput[10]: activation(11.5200) > threshold(0.0000)? ==> 11.5200
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](11.5200)
networkOutput[2] := neuronOutput[10](11.5200)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5552) * weight[1,1](0.1000) => 3.5555
activation[2] = self(35.5552) * weight[2,2](0.1000) => 3.5555
activation[3] = self(-5.3120) * weight[3,3](0.1000) => -0.5312
activation[4] = self(-5.3120) * weight[4,4](0.1000) => -0.5312
activation[5] = self(-5.3120) * weight[5,5](0.1000) => -0.5312
activation[6] = self(11.5200) * weight[6,6](0.1000) => 1.1520
activation[7] = self(11.5200) * weight[7,7](0.1000) => 1.1520
activation[8] = self(11.5200) * weight[8,8](0.1000) => 1.1520
activation[9] = self(11.5200) * weight[9,9](0.1000) => 1.1520
activation[10] = self(11.5200) * weight[10,10](0.1000) => 1.1520
  b. Update inputs from other neurons
activation[1] = self(3.5555) + network_input[1]=32.0000 => 35.5555
activation[2] = self(3.5555) + network_input[2]=32.0000 => 35.5555
activation[3] = self(-0.5312) + output[1](35.5552) * 1.0000 => 35.0240
activation[3] = self(35.0240) + output[7](11.5200) * -0.5000 => 29.2640
activation[3] = self(29.2640) + output[8](11.5200) * -0.5000 => 23.5040
activation[4] = self(-0.5312) + output[1](35.5552) * 0.5000 => 17.2464
activation[4] = self(17.2464) + output[2](35.5552) * 0.5000 => 35.0240
activation[4] = self(35.0240) + output[6](11.5200) * -0.5000 => 29.2640
activation[4] = self(29.2640) + output[8](11.5200) * -0.5000 => 23.5040
activation[5] = self(-0.5312) + output[2](35.5552) * 1.0000 => 35.0240
activation[5] = self(35.0240) + output[6](11.5200) * -0.5000 => 29.2640
activation[5] = self(29.2640) + output[7](11.5200) * -0.5000 => 23.5040
activation[6] = self(1.1520) + output[3](0.0000) * 1.0000 => 1.1520
activation[7] = self(1.1520) + output[4](0.0000) * 1.0000 => 1.1520
activation[8] = self(1.1520) + output[5](0.0000) * 1.0000 => 1.1520
activation[9] = self(1.1520) + output[3](0.0000) * 0.7500 => 1.1520
activation[9] = self(1.1520) + output[4](0.0000) * 0.2500 => 1.1520
activation[10] = self(1.1520) + output[4](0.0000) * 0.2500 => 1.1520
activation[10] = self(1.1520) + output[5](0.0000) * 0.7500 => 1.1520
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5555) > threshold(0.0000)? ==> 35.5555
neuronOutput[2]: activation(35.5555) > threshold(0.0000)? ==> 35.5555
neuronOutput[3]: activation(23.5040) > threshold(0.0000)? ==> 23.5040
neuronOutput[4]: activation(23.5040) > threshold(0.0000)? ==> 23.5040
neuronOutput[5]: activation(23.5040) > threshold(0.0000)? ==> 23.5040
neuronOutput[6]: activation(1.1520) > threshold(0.0000)? ==> 1.1520
neuronOutput[7]: activation(1.1520) > threshold(0.0000)? ==> 1.1520
neuronOutput[8]: activation(1.1520) > threshold(0.0000)? ==> 1.1520
neuronOutput[9]: activation(1.1520) > threshold(0.0000)? ==> 1.1520
neuronOutput[10]: activation(1.1520) > threshold(0.0000)? ==> 1.1520
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](1.1520)
networkOutput[2] := neuronOutput[10](1.1520)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5555) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5555) * weight[2,2](0.1000) => 3.5556
activation[3] = self(23.5040) * weight[3,3](0.1000) => 2.3504
activation[4] = self(23.5040) * weight[4,4](0.1000) => 2.3504
activation[5] = self(23.5040) * weight[5,5](0.1000) => 2.3504
activation[6] = self(1.1520) * weight[6,6](0.1000) => 0.1152
activation[7] = self(1.1520) * weight[7,7](0.1000) => 0.1152
activation[8] = self(1.1520) * weight[8,8](0.1000) => 0.1152
activation[9] = self(1.1520) * weight[9,9](0.1000) => 0.1152
activation[10] = self(1.1520) * weight[10,10](0.1000) => 0.1152
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(2.3504) + output[1](35.5555) * 1.0000 => 37.9059
activation[3] = self(37.9059) + output[7](1.1520) * -0.5000 => 37.3299
activation[3] = self(37.3299) + output[8](1.1520) * -0.5000 => 36.7539
activation[4] = self(2.3504) + output[1](35.5555) * 0.5000 => 20.1282
activation[4] = self(20.1282) + output[2](35.5555) * 0.5000 => 37.9059
activation[4] = self(37.9059) + output[6](1.1520) * -0.5000 => 37.3299
activation[4] = self(37.3299) + output[8](1.1520) * -0.5000 => 36.7539
activation[5] = self(2.3504) + output[2](35.5555) * 1.0000 => 37.9059
activation[5] = self(37.9059) + output[6](1.1520) * -0.5000 => 37.3299
activation[5] = self(37.3299) + output[7](1.1520) * -0.5000 => 36.7539
activation[6] = self(0.1152) + output[3](23.5040) * 1.0000 => 23.6192
activation[7] = self(0.1152) + output[4](23.5040) * 1.0000 => 23.6192
activation[8] = self(0.1152) + output[5](23.5040) * 1.0000 => 23.6192
activation[9] = self(0.1152) + output[3](23.5040) * 0.7500 => 17.7432
activation[9] = self(17.7432) + output[4](23.5040) * 0.2500 => 23.6192
activation[10] = self(0.1152) + output[4](23.5040) * 0.2500 => 5.9912
activation[10] = self(5.9912) + output[5](23.5040) * 0.7500 => 23.6192
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(36.7539) > threshold(0.0000)? ==> 36.7539
neuronOutput[4]: activation(36.7539) > threshold(0.0000)? ==> 36.7539
neuronOutput[5]: activation(36.7539) > threshold(0.0000)? ==> 36.7539
neuronOutput[6]: activation(23.6192) > threshold(0.0000)? ==> 23.6192
neuronOutput[7]: activation(23.6192) > threshold(0.0000)? ==> 23.6192
neuronOutput[8]: activation(23.6192) > threshold(0.0000)? ==> 23.6192
neuronOutput[9]: activation(23.6192) > threshold(0.0000)? ==> 23.6192
neuronOutput[10]: activation(23.6192) > threshold(0.0000)? ==> 23.6192
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](23.6192)
networkOutput[2] := neuronOutput[10](23.6192)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(36.7539) * weight[3,3](0.1000) => 3.6754
activation[4] = self(36.7539) * weight[4,4](0.1000) => 3.6754
activation[5] = self(36.7539) * weight[5,5](0.1000) => 3.6754
activation[6] = self(23.6192) * weight[6,6](0.1000) => 2.3619
activation[7] = self(23.6192) * weight[7,7](0.1000) => 2.3619
activation[8] = self(23.6192) * weight[8,8](0.1000) => 2.3619
activation[9] = self(23.6192) * weight[9,9](0.1000) => 2.3619
activation[10] = self(23.6192) * weight[10,10](0.1000) => 2.3619
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(3.6754) + output[1](35.5556) * 1.0000 => 39.2310
activation[3] = self(39.2310) + output[7](23.6192) * -0.5000 => 27.4214
activation[3] = self(27.4214) + output[8](23.6192) * -0.5000 => 15.6117
activation[4] = self(3.6754) + output[1](35.5556) * 0.5000 => 21.4532
activation[4] = self(21.4532) + output[2](35.5556) * 0.5000 => 39.2310
activation[4] = self(39.2310) + output[6](23.6192) * -0.5000 => 27.4214
activation[4] = self(27.4214) + output[8](23.6192) * -0.5000 => 15.6117
activation[5] = self(3.6754) + output[2](35.5556) * 1.0000 => 39.2310
activation[5] = self(39.2310) + output[6](23.6192) * -0.5000 => 27.4214
activation[5] = self(27.4214) + output[7](23.6192) * -0.5000 => 15.6117
activation[6] = self(2.3619) + output[3](36.7539) * 1.0000 => 39.1158
activation[7] = self(2.3619) + output[4](36.7539) * 1.0000 => 39.1158
activation[8] = self(2.3619) + output[5](36.7539) * 1.0000 => 39.1158
activation[9] = self(2.3619) + output[3](36.7539) * 0.7500 => 29.9274
activation[9] = self(29.9274) + output[4](36.7539) * 0.2500 => 39.1158
activation[10] = self(2.3619) + output[4](36.7539) * 0.2500 => 11.5504
activation[10] = self(11.5504) + output[5](36.7539) * 0.7500 => 39.1158
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(15.6117) > threshold(0.0000)? ==> 15.6117
neuronOutput[4]: activation(15.6117) > threshold(0.0000)? ==> 15.6117
neuronOutput[5]: activation(15.6117) > threshold(0.0000)? ==> 15.6117
neuronOutput[6]: activation(39.1158) > threshold(0.0000)? ==> 39.1158
neuronOutput[7]: activation(39.1158) > threshold(0.0000)? ==> 39.1158
neuronOutput[8]: activation(39.1158) > threshold(0.0000)? ==> 39.1158
neuronOutput[9]: activation(39.1158) > threshold(0.0000)? ==> 39.1158
neuronOutput[10]: activation(39.1158) > threshold(0.0000)? ==> 39.1158
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](39.1158)
networkOutput[2] := neuronOutput[10](39.1158)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(15.6117) * weight[3,3](0.1000) => 1.5612
activation[4] = self(15.6117) * weight[4,4](0.1000) => 1.5612
activation[5] = self(15.6117) * weight[5,5](0.1000) => 1.5612
activation[6] = self(39.1158) * weight[6,6](0.1000) => 3.9116
activation[7] = self(39.1158) * weight[7,7](0.1000) => 3.9116
activation[8] = self(39.1158) * weight[8,8](0.1000) => 3.9116
activation[9] = self(39.1158) * weight[9,9](0.1000) => 3.9116
activation[10] = self(39.1158) * weight[10,10](0.1000) => 3.9116
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(1.5612) + output[1](35.5556) * 1.0000 => 37.1167
activation[3] = self(37.1167) + output[7](39.1158) * -0.5000 => 17.5588
activation[3] = self(17.5588) + output[8](39.1158) * -0.5000 => -1.9991
activation[4] = self(1.5612) + output[1](35.5556) * 0.5000 => 19.3390
activation[4] = self(19.3390) + output[2](35.5556) * 0.5000 => 37.1167
activation[4] = self(37.1167) + output[6](39.1158) * -0.5000 => 17.5588
activation[4] = self(17.5588) + output[8](39.1158) * -0.5000 => -1.9991
activation[5] = self(1.5612) + output[2](35.5556) * 1.0000 => 37.1167
activation[5] = self(37.1167) + output[6](39.1158) * -0.5000 => 17.5588
activation[5] = self(17.5588) + output[7](39.1158) * -0.5000 => -1.9991
activation[6] = self(3.9116) + output[3](15.6117) * 1.0000 => 19.5233
activation[7] = self(3.9116) + output[4](15.6117) * 1.0000 => 19.5233
activation[8] = self(3.9116) + output[5](15.6117) * 1.0000 => 19.5233
activation[9] = self(3.9116) + output[3](15.6117) * 0.7500 => 15.6204
activation[9] = self(15.6204) + output[4](15.6117) * 0.2500 => 19.5233
activation[10] = self(3.9116) + output[4](15.6117) * 0.2500 => 7.8145
activation[10] = self(7.8145) + output[5](15.6117) * 0.7500 => 19.5233
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(-1.9991) > threshold(0.0000)? ==> 0.0000
neuronOutput[4]: activation(-1.9991) > threshold(0.0000)? ==> 0.0000
neuronOutput[5]: activation(-1.9991) > threshold(0.0000)? ==> 0.0000
neuronOutput[6]: activation(19.5233) > threshold(0.0000)? ==> 19.5233
neuronOutput[7]: activation(19.5233) > threshold(0.0000)? ==> 19.5233
neuronOutput[8]: activation(19.5233) > threshold(0.0000)? ==> 19.5233
neuronOutput[9]: activation(19.5233) > threshold(0.0000)? ==> 19.5233
neuronOutput[10]: activation(19.5233) > threshold(0.0000)? ==> 19.5233
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](19.5233)
networkOutput[2] := neuronOutput[10](19.5233)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(-1.9991) * weight[3,3](0.1000) => -0.1999
activation[4] = self(-1.9991) * weight[4,4](0.1000) => -0.1999
activation[5] = self(-1.9991) * weight[5,5](0.1000) => -0.1999
activation[6] = self(19.5233) * weight[6,6](0.1000) => 1.9523
activation[7] = self(19.5233) * weight[7,7](0.1000) => 1.9523
activation[8] = self(19.5233) * weight[8,8](0.1000) => 1.9523
activation[9] = self(19.5233) * weight[9,9](0.1000) => 1.9523
activation[10] = self(19.5233) * weight[10,10](0.1000) => 1.9523
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(-0.1999) + output[1](35.5556) * 1.0000 => 35.3557
activation[3] = self(35.3557) + output[7](19.5233) * -0.5000 => 25.5940
activation[3] = self(25.5940) + output[8](19.5233) * -0.5000 => 15.8323
activation[4] = self(-0.1999) + output[1](35.5556) * 0.5000 => 17.5779
activation[4] = self(17.5779) + output[2](35.5556) * 0.5000 => 35.3557
activation[4] = self(35.3557) + output[6](19.5233) * -0.5000 => 25.5940
activation[4] = self(25.5940) + output[8](19.5233) * -0.5000 => 15.8323
activation[5] = self(-0.1999) + output[2](35.5556) * 1.0000 => 35.3557
activation[5] = self(35.3557) + output[6](19.5233) * -0.5000 => 25.5940
activation[5] = self(25.5940) + output[7](19.5233) * -0.5000 => 15.8323
activation[6] = self(1.9523) + output[3](0.0000) * 1.0000 => 1.9523
activation[7] = self(1.9523) + output[4](0.0000) * 1.0000 => 1.9523
activation[8] = self(1.9523) + output[5](0.0000) * 1.0000 => 1.9523
activation[9] = self(1.9523) + output[3](0.0000) * 0.7500 => 1.9523
activation[9] = self(1.9523) + output[4](0.0000) * 0.2500 => 1.9523
activation[10] = self(1.9523) + output[4](0.0000) * 0.2500 => 1.9523
activation[10] = self(1.9523) + output[5](0.0000) * 0.7500 => 1.9523
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(15.8323) > threshold(0.0000)? ==> 15.8323
neuronOutput[4]: activation(15.8323) > threshold(0.0000)? ==> 15.8323
neuronOutput[5]: activation(15.8323) > threshold(0.0000)? ==> 15.8323
neuronOutput[6]: activation(1.9523) > threshold(0.0000)? ==> 1.9523
neuronOutput[7]: activation(1.9523) > threshold(0.0000)? ==> 1.9523
neuronOutput[8]: activation(1.9523) > threshold(0.0000)? ==> 1.9523
neuronOutput[9]: activation(1.9523) > threshold(0.0000)? ==> 1.9523
neuronOutput[10]: activation(1.9523) > threshold(0.0000)? ==> 1.9523
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](1.9523)
networkOutput[2] := neuronOutput[10](1.9523)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(15.8323) * weight[3,3](0.1000) => 1.5832
activation[4] = self(15.8323) * weight[4,4](0.1000) => 1.5832
activation[5] = self(15.8323) * weight[5,5](0.1000) => 1.5832
activation[6] = self(1.9523) * weight[6,6](0.1000) => 0.1952
activation[7] = self(1.9523) * weight[7,7](0.1000) => 0.1952
activation[8] = self(1.9523) * weight[8,8](0.1000) => 0.1952
activation[9] = self(1.9523) * weight[9,9](0.1000) => 0.1952
activation[10] = self(1.9523) * weight[10,10](0.1000) => 0.1952
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(1.5832) + output[1](35.5556) * 1.0000 => 37.1388
activation[3] = self(37.1388) + output[7](1.9523) * -0.5000 => 36.1626
activation[3] = self(36.1626) + output[8](1.9523) * -0.5000 => 35.1865
activation[4] = self(1.5832) + output[1](35.5556) * 0.5000 => 19.3610
activation[4] = self(19.3610) + output[2](35.5556) * 0.5000 => 37.1388
activation[4] = self(37.1388) + output[6](1.9523) * -0.5000 => 36.1626
activation[4] = self(36.1626) + output[8](1.9523) * -0.5000 => 35.1865
activation[5] = self(1.5832) + output[2](35.5556) * 1.0000 => 37.1388
activation[5] = self(37.1388) + output[6](1.9523) * -0.5000 => 36.1626
activation[5] = self(36.1626) + output[7](1.9523) * -0.5000 => 35.1865
activation[6] = self(0.1952) + output[3](15.8323) * 1.0000 => 16.0276
activation[7] = self(0.1952) + output[4](15.8323) * 1.0000 => 16.0276
activation[8] = self(0.1952) + output[5](15.8323) * 1.0000 => 16.0276
activation[9] = self(0.1952) + output[3](15.8323) * 0.7500 => 12.0695
activation[9] = self(12.0695) + output[4](15.8323) * 0.2500 => 16.0276
activation[10] = self(0.1952) + output[4](15.8323) * 0.2500 => 4.1533
activation[10] = self(4.1533) + output[5](15.8323) * 0.7500 => 16.0276
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(35.1865) > threshold(0.0000)? ==> 35.1865
neuronOutput[4]: activation(35.1865) > threshold(0.0000)? ==> 35.1865
neuronOutput[5]: activation(35.1865) > threshold(0.0000)? ==> 35.1865
neuronOutput[6]: activation(16.0276) > threshold(0.0000)? ==> 16.0276
neuronOutput[7]: activation(16.0276) > threshold(0.0000)? ==> 16.0276
neuronOutput[8]: activation(16.0276) > threshold(0.0000)? ==> 16.0276
neuronOutput[9]: activation(16.0276) > threshold(0.0000)? ==> 16.0276
neuronOutput[10]: activation(16.0276) > threshold(0.0000)? ==> 16.0276
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](16.0276)
networkOutput[2] := neuronOutput[10](16.0276)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(35.1865) * weight[3,3](0.1000) => 3.5186
activation[4] = self(35.1865) * weight[4,4](0.1000) => 3.5186
activation[5] = self(35.1865) * weight[5,5](0.1000) => 3.5186
activation[6] = self(16.0276) * weight[6,6](0.1000) => 1.6028
activation[7] = self(16.0276) * weight[7,7](0.1000) => 1.6028
activation[8] = self(16.0276) * weight[8,8](0.1000) => 1.6028
activation[9] = self(16.0276) * weight[9,9](0.1000) => 1.6028
activation[10] = self(16.0276) * weight[10,10](0.1000) => 1.6028
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(3.5186) + output[1](35.5556) * 1.0000 => 39.0742
activation[3] = self(39.0742) + output[7](16.0276) * -0.5000 => 31.0604
activation[3] = self(31.0604) + output[8](16.0276) * -0.5000 => 23.0467
activation[4] = self(3.5186) + output[1](35.5556) * 0.5000 => 21.2964
activation[4] = self(21.2964) + output[2](35.5556) * 0.5000 => 39.0742
activation[4] = self(39.0742) + output[6](16.0276) * -0.5000 => 31.0604
activation[4] = self(31.0604) + output[8](16.0276) * -0.5000 => 23.0467
activation[5] = self(3.5186) + output[2](35.5556) * 1.0000 => 39.0742
activation[5] = self(39.0742) + output[6](16.0276) * -0.5000 => 31.0604
activation[5] = self(31.0604) + output[7](16.0276) * -0.5000 => 23.0467
activation[6] = self(1.6028) + output[3](35.1865) * 1.0000 => 36.7892
activation[7] = self(1.6028) + output[4](35.1865) * 1.0000 => 36.7892
activation[8] = self(1.6028) + output[5](35.1865) * 1.0000 => 36.7892
activation[9] = self(1.6028) + output[3](35.1865) * 0.7500 => 27.9926
activation[9] = self(27.9926) + output[4](35.1865) * 0.2500 => 36.7892
activation[10] = self(1.6028) + output[4](35.1865) * 0.2500 => 10.3994
activation[10] = self(10.3994) + output[5](35.1865) * 0.7500 => 36.7892
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(23.0467) > threshold(0.0000)? ==> 23.0467
neuronOutput[4]: activation(23.0467) > threshold(0.0000)? ==> 23.0467
neuronOutput[5]: activation(23.0467) > threshold(0.0000)? ==> 23.0467
neuronOutput[6]: activation(36.7892) > threshold(0.0000)? ==> 36.7892
neuronOutput[7]: activation(36.7892) > threshold(0.0000)? ==> 36.7892
neuronOutput[8]: activation(36.7892) > threshold(0.0000)? ==> 36.7892
neuronOutput[9]: activation(36.7892) > threshold(0.0000)? ==> 36.7892
neuronOutput[10]: activation(36.7892) > threshold(0.0000)? ==> 36.7892
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](36.7892)
networkOutput[2] := neuronOutput[10](36.7892)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(23.0467) * weight[3,3](0.1000) => 2.3047
activation[4] = self(23.0467) * weight[4,4](0.1000) => 2.3047
activation[5] = self(23.0467) * weight[5,5](0.1000) => 2.3047
activation[6] = self(36.7892) * weight[6,6](0.1000) => 3.6789
activation[7] = self(36.7892) * weight[7,7](0.1000) => 3.6789
activation[8] = self(36.7892) * weight[8,8](0.1000) => 3.6789
activation[9] = self(36.7892) * weight[9,9](0.1000) => 3.6789
activation[10] = self(36.7892) * weight[10,10](0.1000) => 3.6789
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(2.3047) + output[1](35.5556) * 1.0000 => 37.8602
activation[3] = self(37.8602) + output[7](36.7892) * -0.5000 => 19.4656
activation[3] = self(19.4656) + output[8](36.7892) * -0.5000 => 1.0710
activation[4] = self(2.3047) + output[1](35.5556) * 0.5000 => 20.0824
activation[4] = self(20.0824) + output[2](35.5556) * 0.5000 => 37.8602
activation[4] = self(37.8602) + output[6](36.7892) * -0.5000 => 19.4656
activation[4] = self(19.4656) + output[8](36.7892) * -0.5000 => 1.0710
activation[5] = self(2.3047) + output[2](35.5556) * 1.0000 => 37.8602
activation[5] = self(37.8602) + output[6](36.7892) * -0.5000 => 19.4656
activation[5] = self(19.4656) + output[7](36.7892) * -0.5000 => 1.0710
activation[6] = self(3.6789) + output[3](23.0467) * 1.0000 => 26.7256
activation[7] = self(3.6789) + output[4](23.0467) * 1.0000 => 26.7256
activation[8] = self(3.6789) + output[5](23.0467) * 1.0000 => 26.7256
activation[9] = self(3.6789) + output[3](23.0467) * 0.7500 => 20.9639
activation[9] = self(20.9639) + output[4](23.0467) * 0.2500 => 26.7256
activation[10] = self(3.6789) + output[4](23.0467) * 0.2500 => 9.4406
activation[10] = self(9.4406) + output[5](23.0467) * 0.7500 => 26.7256
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(1.0710) > threshold(0.0000)? ==> 1.0710
neuronOutput[4]: activation(1.0710) > threshold(0.0000)? ==> 1.0710
neuronOutput[5]: activation(1.0710) > threshold(0.0000)? ==> 1.0710
neuronOutput[6]: activation(26.7256) > threshold(0.0000)? ==> 26.7256
neuronOutput[7]: activation(26.7256) > threshold(0.0000)? ==> 26.7256
neuronOutput[8]: activation(26.7256) > threshold(0.0000)? ==> 26.7256
neuronOutput[9]: activation(26.7256) > threshold(0.0000)? ==> 26.7256
neuronOutput[10]: activation(26.7256) > threshold(0.0000)? ==> 26.7256
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](26.7256)
networkOutput[2] := neuronOutput[10](26.7256)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(1.0710) * weight[3,3](0.1000) => 0.1071
activation[4] = self(1.0710) * weight[4,4](0.1000) => 0.1071
activation[5] = self(1.0710) * weight[5,5](0.1000) => 0.1071
activation[6] = self(26.7256) * weight[6,6](0.1000) => 2.6726
activation[7] = self(26.7256) * weight[7,7](0.1000) => 2.6726
activation[8] = self(26.7256) * weight[8,8](0.1000) => 2.6726
activation[9] = self(26.7256) * weight[9,9](0.1000) => 2.6726
activation[10] = self(26.7256) * weight[10,10](0.1000) => 2.6726
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(0.1071) + output[1](35.5556) * 1.0000 => 35.6627
activation[3] = self(35.6627) + output[7](26.7256) * -0.5000 => 22.2999
activation[3] = self(22.2999) + output[8](26.7256) * -0.5000 => 8.9371
activation[4] = self(0.1071) + output[1](35.5556) * 0.5000 => 17.8849
activation[4] = self(17.8849) + output[2](35.5556) * 0.5000 => 35.6627
activation[4] = self(35.6627) + output[6](26.7256) * -0.5000 => 22.2999
activation[4] = self(22.2999) + output[8](26.7256) * -0.5000 => 8.9371
activation[5] = self(0.1071) + output[2](35.5556) * 1.0000 => 35.6627
activation[5] = self(35.6627) + output[6](26.7256) * -0.5000 => 22.2999
activation[5] = self(22.2999) + output[7](26.7256) * -0.5000 => 8.9371
activation[6] = self(2.6726) + output[3](1.0710) * 1.0000 => 3.7436
activation[7] = self(2.6726) + output[4](1.0710) * 1.0000 => 3.7436
activation[8] = self(2.6726) + output[5](1.0710) * 1.0000 => 3.7436
activation[9] = self(2.6726) + output[3](1.0710) * 0.7500 => 3.4758
activation[9] = self(3.4758) + output[4](1.0710) * 0.2500 => 3.7436
activation[10] = self(2.6726) + output[4](1.0710) * 0.2500 => 2.9403
activation[10] = self(2.9403) + output[5](1.0710) * 0.7500 => 3.7436
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(8.9371) > threshold(0.0000)? ==> 8.9371
neuronOutput[4]: activation(8.9371) > threshold(0.0000)? ==> 8.9371
neuronOutput[5]: activation(8.9371) > threshold(0.0000)? ==> 8.9371
neuronOutput[6]: activation(3.7436) > threshold(0.0000)? ==> 3.7436
neuronOutput[7]: activation(3.7436) > threshold(0.0000)? ==> 3.7436
neuronOutput[8]: activation(3.7436) > threshold(0.0000)? ==> 3.7436
neuronOutput[9]: activation(3.7436) > threshold(0.0000)? ==> 3.7436
neuronOutput[10]: activation(3.7436) > threshold(0.0000)? ==> 3.7436
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](3.7436)
networkOutput[2] := neuronOutput[10](3.7436)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(8.9371) * weight[3,3](0.1000) => 0.8937
activation[4] = self(8.9371) * weight[4,4](0.1000) => 0.8937
activation[5] = self(8.9371) * weight[5,5](0.1000) => 0.8937
activation[6] = self(3.7436) * weight[6,6](0.1000) => 0.3744
activation[7] = self(3.7436) * weight[7,7](0.1000) => 0.3744
activation[8] = self(3.7436) * weight[8,8](0.1000) => 0.3744
activation[9] = self(3.7436) * weight[9,9](0.1000) => 0.3744
activation[10] = self(3.7436) * weight[10,10](0.1000) => 0.3744
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(0.8937) + output[1](35.5556) * 1.0000 => 36.4493
activation[3] = self(36.4493) + output[7](3.7436) * -0.5000 => 34.5775
activation[3] = self(34.5775) + output[8](3.7436) * -0.5000 => 32.7057
activation[4] = self(0.8937) + output[1](35.5556) * 0.5000 => 18.6715
activation[4] = self(18.6715) + output[2](35.5556) * 0.5000 => 36.4493
activation[4] = self(36.4493) + output[6](3.7436) * -0.5000 => 34.5775
activation[4] = self(34.5775) + output[8](3.7436) * -0.5000 => 32.7057
activation[5] = self(0.8937) + output[2](35.5556) * 1.0000 => 36.4493
activation[5] = self(36.4493) + output[6](3.7436) * -0.5000 => 34.5775
activation[5] = self(34.5775) + output[7](3.7436) * -0.5000 => 32.7057
activation[6] = self(0.3744) + output[3](8.9371) * 1.0000 => 9.3114
activation[7] = self(0.3744) + output[4](8.9371) * 1.0000 => 9.3114
activation[8] = self(0.3744) + output[5](8.9371) * 1.0000 => 9.3114
activation[9] = self(0.3744) + output[3](8.9371) * 0.7500 => 7.0772
activation[9] = self(7.0772) + output[4](8.9371) * 0.2500 => 9.3114
activation[10] = self(0.3744) + output[4](8.9371) * 0.2500 => 2.6086
activation[10] = self(2.6086) + output[5](8.9371) * 0.7500 => 9.3114
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(32.7057) > threshold(0.0000)? ==> 32.7057
neuronOutput[4]: activation(32.7057) > threshold(0.0000)? ==> 32.7057
neuronOutput[5]: activation(32.7057) > threshold(0.0000)? ==> 32.7057
neuronOutput[6]: activation(9.3114) > threshold(0.0000)? ==> 9.3114
neuronOutput[7]: activation(9.3114) > threshold(0.0000)? ==> 9.3114
neuronOutput[8]: activation(9.3114) > threshold(0.0000)? ==> 9.3114
neuronOutput[9]: activation(9.3114) > threshold(0.0000)? ==> 9.3114
neuronOutput[10]: activation(9.3114) > threshold(0.0000)? ==> 9.3114
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](9.3114)
networkOutput[2] := neuronOutput[10](9.3114)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(32.7057) * weight[3,3](0.1000) => 3.2706
activation[4] = self(32.7057) * weight[4,4](0.1000) => 3.2706
activation[5] = self(32.7057) * weight[5,5](0.1000) => 3.2706
activation[6] = self(9.3114) * weight[6,6](0.1000) => 0.9311
activation[7] = self(9.3114) * weight[7,7](0.1000) => 0.9311
activation[8] = self(9.3114) * weight[8,8](0.1000) => 0.9311
activation[9] = self(9.3114) * weight[9,9](0.1000) => 0.9311
activation[10] = self(9.3114) * weight[10,10](0.1000) => 0.9311
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(3.2706) + output[1](35.5556) * 1.0000 => 38.8261
activation[3] = self(38.8261) + output[7](9.3114) * -0.5000 => 34.1704
activation[3] = self(34.1704) + output[8](9.3114) * -0.5000 => 29.5147
activation[4] = self(3.2706) + output[1](35.5556) * 0.5000 => 21.0484
activation[4] = self(21.0484) + output[2](35.5556) * 0.5000 => 38.8261
activation[4] = self(38.8261) + output[6](9.3114) * -0.5000 => 34.1704
activation[4] = self(34.1704) + output[8](9.3114) * -0.5000 => 29.5147
activation[5] = self(3.2706) + output[2](35.5556) * 1.0000 => 38.8261
activation[5] = self(38.8261) + output[6](9.3114) * -0.5000 => 34.1704
activation[5] = self(34.1704) + output[7](9.3114) * -0.5000 => 29.5147
activation[6] = self(0.9311) + output[3](32.7057) * 1.0000 => 33.6368
activation[7] = self(0.9311) + output[4](32.7057) * 1.0000 => 33.6368
activation[8] = self(0.9311) + output[5](32.7057) * 1.0000 => 33.6368
activation[9] = self(0.9311) + output[3](32.7057) * 0.7500 => 25.4604
activation[9] = self(25.4604) + output[4](32.7057) * 0.2500 => 33.6368
activation[10] = self(0.9311) + output[4](32.7057) * 0.2500 => 9.1076
activation[10] = self(9.1076) + output[5](32.7057) * 0.7500 => 33.6368
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(29.5147) > threshold(0.0000)? ==> 29.5147
neuronOutput[4]: activation(29.5147) > threshold(0.0000)? ==> 29.5147
neuronOutput[5]: activation(29.5147) > threshold(0.0000)? ==> 29.5147
neuronOutput[6]: activation(33.6368) > threshold(0.0000)? ==> 33.6368
neuronOutput[7]: activation(33.6368) > threshold(0.0000)? ==> 33.6368
neuronOutput[8]: activation(33.6368) > threshold(0.0000)? ==> 33.6368
neuronOutput[9]: activation(33.6368) > threshold(0.0000)? ==> 33.6368
neuronOutput[10]: activation(33.6368) > threshold(0.0000)? ==> 33.6368
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](33.6368)
networkOutput[2] := neuronOutput[10](33.6368)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(29.5147) * weight[3,3](0.1000) => 2.9515
activation[4] = self(29.5147) * weight[4,4](0.1000) => 2.9515
activation[5] = self(29.5147) * weight[5,5](0.1000) => 2.9515
activation[6] = self(33.6368) * weight[6,6](0.1000) => 3.3637
activation[7] = self(33.6368) * weight[7,7](0.1000) => 3.3637
activation[8] = self(33.6368) * weight[8,8](0.1000) => 3.3637
activation[9] = self(33.6368) * weight[9,9](0.1000) => 3.3637
activation[10] = self(33.6368) * weight[10,10](0.1000) => 3.3637
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(2.9515) + output[1](35.5556) * 1.0000 => 38.5070
activation[3] = self(38.5070) + output[7](33.6368) * -0.5000 => 21.6886
activation[3] = self(21.6886) + output[8](33.6368) * -0.5000 => 4.8702
activation[4] = self(2.9515) + output[1](35.5556) * 0.5000 => 20.7293
activation[4] = self(20.7293) + output[2](35.5556) * 0.5000 => 38.5070
activation[4] = self(38.5070) + output[6](33.6368) * -0.5000 => 21.6886
activation[4] = self(21.6886) + output[8](33.6368) * -0.5000 => 4.8702
activation[5] = self(2.9515) + output[2](35.5556) * 1.0000 => 38.5070
activation[5] = self(38.5070) + output[6](33.6368) * -0.5000 => 21.6886
activation[5] = self(21.6886) + output[7](33.6368) * -0.5000 => 4.8702
activation[6] = self(3.3637) + output[3](29.5147) * 1.0000 => 32.8784
activation[7] = self(3.3637) + output[4](29.5147) * 1.0000 => 32.8784
activation[8] = self(3.3637) + output[5](29.5147) * 1.0000 => 32.8784
activation[9] = self(3.3637) + output[3](29.5147) * 0.7500 => 25.4997
activation[9] = self(25.4997) + output[4](29.5147) * 0.2500 => 32.8784
activation[10] = self(3.3637) + output[4](29.5147) * 0.2500 => 10.7424
activation[10] = self(10.7424) + output[5](29.5147) * 0.7500 => 32.8784
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(4.8702) > threshold(0.0000)? ==> 4.8702
neuronOutput[4]: activation(4.8702) > threshold(0.0000)? ==> 4.8702
neuronOutput[5]: activation(4.8702) > threshold(0.0000)? ==> 4.8702
neuronOutput[6]: activation(32.8784) > threshold(0.0000)? ==> 32.8784
neuronOutput[7]: activation(32.8784) > threshold(0.0000)? ==> 32.8784
neuronOutput[8]: activation(32.8784) > threshold(0.0000)? ==> 32.8784
neuronOutput[9]: activation(32.8784) > threshold(0.0000)? ==> 32.8784
neuronOutput[10]: activation(32.8784) > threshold(0.0000)? ==> 32.8784
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](32.8784)
networkOutput[2] := neuronOutput[10](32.8784)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(4.8702) * weight[3,3](0.1000) => 0.4870
activation[4] = self(4.8702) * weight[4,4](0.1000) => 0.4870
activation[5] = self(4.8702) * weight[5,5](0.1000) => 0.4870
activation[6] = self(32.8784) * weight[6,6](0.1000) => 3.2878
activation[7] = self(32.8784) * weight[7,7](0.1000) => 3.2878
activation[8] = self(32.8784) * weight[8,8](0.1000) => 3.2878
activation[9] = self(32.8784) * weight[9,9](0.1000) => 3.2878
activation[10] = self(32.8784) * weight[10,10](0.1000) => 3.2878
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(0.4870) + output[1](35.5556) * 1.0000 => 36.0426
activation[3] = self(36.0426) + output[7](32.8784) * -0.5000 => 19.6034
activation[3] = self(19.6034) + output[8](32.8784) * -0.5000 => 3.1642
activation[4] = self(0.4870) + output[1](35.5556) * 0.5000 => 18.2648
activation[4] = self(18.2648) + output[2](35.5556) * 0.5000 => 36.0426
activation[4] = self(36.0426) + output[6](32.8784) * -0.5000 => 19.6034
activation[4] = self(19.6034) + output[8](32.8784) * -0.5000 => 3.1642
activation[5] = self(0.4870) + output[2](35.5556) * 1.0000 => 36.0426
activation[5] = self(36.0426) + output[6](32.8784) * -0.5000 => 19.6034
activation[5] = self(19.6034) + output[7](32.8784) * -0.5000 => 3.1642
activation[6] = self(3.2878) + output[3](4.8702) * 1.0000 => 8.1580
activation[7] = self(3.2878) + output[4](4.8702) * 1.0000 => 8.1580
activation[8] = self(3.2878) + output[5](4.8702) * 1.0000 => 8.1580
activation[9] = self(3.2878) + output[3](4.8702) * 0.7500 => 6.9405
activation[9] = self(6.9405) + output[4](4.8702) * 0.2500 => 8.1580
activation[10] = self(3.2878) + output[4](4.8702) * 0.2500 => 4.5054
activation[10] = self(4.5054) + output[5](4.8702) * 0.7500 => 8.1580
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(3.1642) > threshold(0.0000)? ==> 3.1642
neuronOutput[4]: activation(3.1642) > threshold(0.0000)? ==> 3.1642
neuronOutput[5]: activation(3.1642) > threshold(0.0000)? ==> 3.1642
neuronOutput[6]: activation(8.1580) > threshold(0.0000)? ==> 8.1580
neuronOutput[7]: activation(8.1580) > threshold(0.0000)? ==> 8.1580
neuronOutput[8]: activation(8.1580) > threshold(0.0000)? ==> 8.1580
neuronOutput[9]: activation(8.1580) > threshold(0.0000)? ==> 8.1580
neuronOutput[10]: activation(8.1580) > threshold(0.0000)? ==> 8.1580
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](8.1580)
networkOutput[2] := neuronOutput[10](8.1580)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(3.1642) * weight[3,3](0.1000) => 0.3164
activation[4] = self(3.1642) * weight[4,4](0.1000) => 0.3164
activation[5] = self(3.1642) * weight[5,5](0.1000) => 0.3164
activation[6] = self(8.1580) * weight[6,6](0.1000) => 0.8158
activation[7] = self(8.1580) * weight[7,7](0.1000) => 0.8158
activation[8] = self(8.1580) * weight[8,8](0.1000) => 0.8158
activation[9] = self(8.1580) * weight[9,9](0.1000) => 0.8158
activation[10] = self(8.1580) * weight[10,10](0.1000) => 0.8158
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(0.3164) + output[1](35.5556) * 1.0000 => 35.8720
activation[3] = self(35.8720) + output[7](8.1580) * -0.5000 => 31.7930
activation[3] = self(31.7930) + output[8](8.1580) * -0.5000 => 27.7140
activation[4] = self(0.3164) + output[1](35.5556) * 0.5000 => 18.0942
activation[4] = self(18.0942) + output[2](35.5556) * 0.5000 => 35.8720
activation[4] = self(35.8720) + output[6](8.1580) * -0.5000 => 31.7930
activation[4] = self(31.7930) + output[8](8.1580) * -0.5000 => 27.7140
activation[5] = self(0.3164) + output[2](35.5556) * 1.0000 => 35.8720
activation[5] = self(35.8720) + output[6](8.1580) * -0.5000 => 31.7930
activation[5] = self(31.7930) + output[7](8.1580) * -0.5000 => 27.7140
activation[6] = self(0.8158) + output[3](3.1642) * 1.0000 => 3.9800
activation[7] = self(0.8158) + output[4](3.1642) * 1.0000 => 3.9800
activation[8] = self(0.8158) + output[5](3.1642) * 1.0000 => 3.9800
activation[9] = self(0.8158) + output[3](3.1642) * 0.7500 => 3.1890
activation[9] = self(3.1890) + output[4](3.1642) * 0.2500 => 3.9800
activation[10] = self(0.8158) + output[4](3.1642) * 0.2500 => 1.6069
activation[10] = self(1.6069) + output[5](3.1642) * 0.7500 => 3.9800
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(27.7140) > threshold(0.0000)? ==> 27.7140
neuronOutput[4]: activation(27.7140) > threshold(0.0000)? ==> 27.7140
neuronOutput[5]: activation(27.7140) > threshold(0.0000)? ==> 27.7140
neuronOutput[6]: activation(3.9800) > threshold(0.0000)? ==> 3.9800
neuronOutput[7]: activation(3.9800) > threshold(0.0000)? ==> 3.9800
neuronOutput[8]: activation(3.9800) > threshold(0.0000)? ==> 3.9800
neuronOutput[9]: activation(3.9800) > threshold(0.0000)? ==> 3.9800
neuronOutput[10]: activation(3.9800) > threshold(0.0000)? ==> 3.9800
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](3.9800)
networkOutput[2] := neuronOutput[10](3.9800)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(27.7140) * weight[3,3](0.1000) => 2.7714
activation[4] = self(27.7140) * weight[4,4](0.1000) => 2.7714
activation[5] = self(27.7140) * weight[5,5](0.1000) => 2.7714
activation[6] = self(3.9800) * weight[6,6](0.1000) => 0.3980
activation[7] = self(3.9800) * weight[7,7](0.1000) => 0.3980
activation[8] = self(3.9800) * weight[8,8](0.1000) => 0.3980
activation[9] = self(3.9800) * weight[9,9](0.1000) => 0.3980
activation[10] = self(3.9800) * weight[10,10](0.1000) => 0.3980
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(2.7714) + output[1](35.5556) * 1.0000 => 38.3270
activation[3] = self(38.3270) + output[7](3.9800) * -0.5000 => 36.3370
activation[3] = self(36.3370) + output[8](3.9800) * -0.5000 => 34.3470
activation[4] = self(2.7714) + output[1](35.5556) * 0.5000 => 20.5492
activation[4] = self(20.5492) + output[2](35.5556) * 0.5000 => 38.3270
activation[4] = self(38.3270) + output[6](3.9800) * -0.5000 => 36.3370
activation[4] = self(36.3370) + output[8](3.9800) * -0.5000 => 34.3470
activation[5] = self(2.7714) + output[2](35.5556) * 1.0000 => 38.3270
activation[5] = self(38.3270) + output[6](3.9800) * -0.5000 => 36.3370
activation[5] = self(36.3370) + output[7](3.9800) * -0.5000 => 34.3470
activation[6] = self(0.3980) + output[3](27.7140) * 1.0000 => 28.1120
activation[7] = self(0.3980) + output[4](27.7140) * 1.0000 => 28.1120
activation[8] = self(0.3980) + output[5](27.7140) * 1.0000 => 28.1120
activation[9] = self(0.3980) + output[3](27.7140) * 0.7500 => 21.1835
activation[9] = self(21.1835) + output[4](27.7140) * 0.2500 => 28.1120
activation[10] = self(0.3980) + output[4](27.7140) * 0.2500 => 7.3265
activation[10] = self(7.3265) + output[5](27.7140) * 0.7500 => 28.1120
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(34.3470) > threshold(0.0000)? ==> 34.3470
neuronOutput[4]: activation(34.3470) > threshold(0.0000)? ==> 34.3470
neuronOutput[5]: activation(34.3470) > threshold(0.0000)? ==> 34.3470
neuronOutput[6]: activation(28.1120) > threshold(0.0000)? ==> 28.1120
neuronOutput[7]: activation(28.1120) > threshold(0.0000)? ==> 28.1120
neuronOutput[8]: activation(28.1120) > threshold(0.0000)? ==> 28.1120
neuronOutput[9]: activation(28.1120) > threshold(0.0000)? ==> 28.1120
neuronOutput[10]: activation(28.1120) > threshold(0.0000)? ==> 28.1120
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](28.1120)
networkOutput[2] := neuronOutput[10](28.1120)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(34.3470) * weight[3,3](0.1000) => 3.4347
activation[4] = self(34.3470) * weight[4,4](0.1000) => 3.4347
activation[5] = self(34.3470) * weight[5,5](0.1000) => 3.4347
activation[6] = self(28.1120) * weight[6,6](0.1000) => 2.8112
activation[7] = self(28.1120) * weight[7,7](0.1000) => 2.8112
activation[8] = self(28.1120) * weight[8,8](0.1000) => 2.8112
activation[9] = self(28.1120) * weight[9,9](0.1000) => 2.8112
activation[10] = self(28.1120) * weight[10,10](0.1000) => 2.8112
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(3.4347) + output[1](35.5556) * 1.0000 => 38.9903
activation[3] = self(38.9903) + output[7](28.1120) * -0.5000 => 24.9343
activation[3] = self(24.9343) + output[8](28.1120) * -0.5000 => 10.8783
activation[4] = self(3.4347) + output[1](35.5556) * 0.5000 => 21.2125
activation[4] = self(21.2125) + output[2](35.5556) * 0.5000 => 38.9903
activation[4] = self(38.9903) + output[6](28.1120) * -0.5000 => 24.9343
activation[4] = self(24.9343) + output[8](28.1120) * -0.5000 => 10.8783
activation[5] = self(3.4347) + output[2](35.5556) * 1.0000 => 38.9903
activation[5] = self(38.9903) + output[6](28.1120) * -0.5000 => 24.9343
activation[5] = self(24.9343) + output[7](28.1120) * -0.5000 => 10.8783
activation[6] = self(2.8112) + output[3](34.3470) * 1.0000 => 37.1581
activation[7] = self(2.8112) + output[4](34.3470) * 1.0000 => 37.1581
activation[8] = self(2.8112) + output[5](34.3470) * 1.0000 => 37.1581
activation[9] = self(2.8112) + output[3](34.3470) * 0.7500 => 28.5714
activation[9] = self(28.5714) + output[4](34.3470) * 0.2500 => 37.1581
activation[10] = self(2.8112) + output[4](34.3470) * 0.2500 => 11.3979
activation[10] = self(11.3979) + output[5](34.3470) * 0.7500 => 37.1581
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(10.8783) > threshold(0.0000)? ==> 10.8783
neuronOutput[4]: activation(10.8783) > threshold(0.0000)? ==> 10.8783
neuronOutput[5]: activation(10.8783) > threshold(0.0000)? ==> 10.8783
neuronOutput[6]: activation(37.1581) > threshold(0.0000)? ==> 37.1581
neuronOutput[7]: activation(37.1581) > threshold(0.0000)? ==> 37.1581
neuronOutput[8]: activation(37.1581) > threshold(0.0000)? ==> 37.1581
neuronOutput[9]: activation(37.1581) > threshold(0.0000)? ==> 37.1581
neuronOutput[10]: activation(37.1581) > threshold(0.0000)? ==> 37.1581
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](37.1581)
networkOutput[2] := neuronOutput[10](37.1581)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(10.8783) * weight[3,3](0.1000) => 1.0878
activation[4] = self(10.8783) * weight[4,4](0.1000) => 1.0878
activation[5] = self(10.8783) * weight[5,5](0.1000) => 1.0878
activation[6] = self(37.1581) * weight[6,6](0.1000) => 3.7158
activation[7] = self(37.1581) * weight[7,7](0.1000) => 3.7158
activation[8] = self(37.1581) * weight[8,8](0.1000) => 3.7158
activation[9] = self(37.1581) * weight[9,9](0.1000) => 3.7158
activation[10] = self(37.1581) * weight[10,10](0.1000) => 3.7158
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(1.0878) + output[1](35.5556) * 1.0000 => 36.6434
activation[3] = self(36.6434) + output[7](37.1581) * -0.5000 => 18.0643
activation[3] = self(18.0643) + output[8](37.1581) * -0.5000 => -0.5148
activation[4] = self(1.0878) + output[1](35.5556) * 0.5000 => 18.8656
activation[4] = self(18.8656) + output[2](35.5556) * 0.5000 => 36.6434
activation[4] = self(36.6434) + output[6](37.1581) * -0.5000 => 18.0643
activation[4] = self(18.0643) + output[8](37.1581) * -0.5000 => -0.5148
activation[5] = self(1.0878) + output[2](35.5556) * 1.0000 => 36.6434
activation[5] = self(36.6434) + output[6](37.1581) * -0.5000 => 18.0643
activation[5] = self(18.0643) + output[7](37.1581) * -0.5000 => -0.5148
activation[6] = self(3.7158) + output[3](10.8783) * 1.0000 => 14.5941
activation[7] = self(3.7158) + output[4](10.8783) * 1.0000 => 14.5941
activation[8] = self(3.7158) + output[5](10.8783) * 1.0000 => 14.5941
activation[9] = self(3.7158) + output[3](10.8783) * 0.7500 => 11.8745
activation[9] = self(11.8745) + output[4](10.8783) * 0.2500 => 14.5941
activation[10] = self(3.7158) + output[4](10.8783) * 0.2500 => 6.4354
activation[10] = self(6.4354) + output[5](10.8783) * 0.7500 => 14.5941
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(-0.5148) > threshold(0.0000)? ==> 0.0000
neuronOutput[4]: activation(-0.5148) > threshold(0.0000)? ==> 0.0000
neuronOutput[5]: activation(-0.5148) > threshold(0.0000)? ==> 0.0000
neuronOutput[6]: activation(14.5941) > threshold(0.0000)? ==> 14.5941
neuronOutput[7]: activation(14.5941) > threshold(0.0000)? ==> 14.5941
neuronOutput[8]: activation(14.5941) > threshold(0.0000)? ==> 14.5941
neuronOutput[9]: activation(14.5941) > threshold(0.0000)? ==> 14.5941
neuronOutput[10]: activation(14.5941) > threshold(0.0000)? ==> 14.5941
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](14.5941)
networkOutput[2] := neuronOutput[10](14.5941)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(-0.5148) * weight[3,3](0.1000) => -0.0515
activation[4] = self(-0.5148) * weight[4,4](0.1000) => -0.0515
activation[5] = self(-0.5148) * weight[5,5](0.1000) => -0.0515
activation[6] = self(14.5941) * weight[6,6](0.1000) => 1.4594
activation[7] = self(14.5941) * weight[7,7](0.1000) => 1.4594
activation[8] = self(14.5941) * weight[8,8](0.1000) => 1.4594
activation[9] = self(14.5941) * weight[9,9](0.1000) => 1.4594
activation[10] = self(14.5941) * weight[10,10](0.1000) => 1.4594
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(-0.0515) + output[1](35.5556) * 1.0000 => 35.5041
activation[3] = self(35.5041) + output[7](14.5941) * -0.5000 => 28.2070
activation[3] = self(28.2070) + output[8](14.5941) * -0.5000 => 20.9100
activation[4] = self(-0.0515) + output[1](35.5556) * 0.5000 => 17.7263
activation[4] = self(17.7263) + output[2](35.5556) * 0.5000 => 35.5041
activation[4] = self(35.5041) + output[6](14.5941) * -0.5000 => 28.2070
activation[4] = self(28.2070) + output[8](14.5941) * -0.5000 => 20.9100
activation[5] = self(-0.0515) + output[2](35.5556) * 1.0000 => 35.5041
activation[5] = self(35.5041) + output[6](14.5941) * -0.5000 => 28.2070
activation[5] = self(28.2070) + output[7](14.5941) * -0.5000 => 20.9100
activation[6] = self(1.4594) + output[3](0.0000) * 1.0000 => 1.4594
activation[7] = self(1.4594) + output[4](0.0000) * 1.0000 => 1.4594
activation[8] = self(1.4594) + output[5](0.0000) * 1.0000 => 1.4594
activation[9] = self(1.4594) + output[3](0.0000) * 0.7500 => 1.4594
activation[9] = self(1.4594) + output[4](0.0000) * 0.2500 => 1.4594
activation[10] = self(1.4594) + output[4](0.0000) * 0.2500 => 1.4594
activation[10] = self(1.4594) + output[5](0.0000) * 0.7500 => 1.4594
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(20.9100) > threshold(0.0000)? ==> 20.9100
neuronOutput[4]: activation(20.9100) > threshold(0.0000)? ==> 20.9100
neuronOutput[5]: activation(20.9100) > threshold(0.0000)? ==> 20.9100
neuronOutput[6]: activation(1.4594) > threshold(0.0000)? ==> 1.4594
neuronOutput[7]: activation(1.4594) > threshold(0.0000)? ==> 1.4594
neuronOutput[8]: activation(1.4594) > threshold(0.0000)? ==> 1.4594
neuronOutput[9]: activation(1.4594) > threshold(0.0000)? ==> 1.4594
neuronOutput[10]: activation(1.4594) > threshold(0.0000)? ==> 1.4594
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](1.4594)
networkOutput[2] := neuronOutput[10](1.4594)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(20.9100) * weight[3,3](0.1000) => 2.0910
activation[4] = self(20.9100) * weight[4,4](0.1000) => 2.0910
activation[5] = self(20.9100) * weight[5,5](0.1000) => 2.0910
activation[6] = self(1.4594) * weight[6,6](0.1000) => 0.1459
activation[7] = self(1.4594) * weight[7,7](0.1000) => 0.1459
activation[8] = self(1.4594) * weight[8,8](0.1000) => 0.1459
activation[9] = self(1.4594) * weight[9,9](0.1000) => 0.1459
activation[10] = self(1.4594) * weight[10,10](0.1000) => 0.1459
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(2.0910) + output[1](35.5556) * 1.0000 => 37.6466
activation[3] = self(37.6466) + output[7](1.4594) * -0.5000 => 36.9169
activation[3] = self(36.9169) + output[8](1.4594) * -0.5000 => 36.1872
activation[4] = self(2.0910) + output[1](35.5556) * 0.5000 => 19.8688
activation[4] = self(19.8688) + output[2](35.5556) * 0.5000 => 37.6466
activation[4] = self(37.6466) + output[6](1.4594) * -0.5000 => 36.9169
activation[4] = self(36.9169) + output[8](1.4594) * -0.5000 => 36.1872
activation[5] = self(2.0910) + output[2](35.5556) * 1.0000 => 37.6466
activation[5] = self(37.6466) + output[6](1.4594) * -0.5000 => 36.9169
activation[5] = self(36.9169) + output[7](1.4594) * -0.5000 => 36.1872
activation[6] = self(0.1459) + output[3](20.9100) * 1.0000 => 21.0559
activation[7] = self(0.1459) + output[4](20.9100) * 1.0000 => 21.0559
activation[8] = self(0.1459) + output[5](20.9100) * 1.0000 => 21.0559
activation[9] = self(0.1459) + output[3](20.9100) * 0.7500 => 15.8284
activation[9] = self(15.8284) + output[4](20.9100) * 0.2500 => 21.0559
activation[10] = self(0.1459) + output[4](20.9100) * 0.2500 => 5.3734
activation[10] = self(5.3734) + output[5](20.9100) * 0.7500 => 21.0559
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(36.1872) > threshold(0.0000)? ==> 36.1872
neuronOutput[4]: activation(36.1872) > threshold(0.0000)? ==> 36.1872
neuronOutput[5]: activation(36.1872) > threshold(0.0000)? ==> 36.1872
neuronOutput[6]: activation(21.0559) > threshold(0.0000)? ==> 21.0559
neuronOutput[7]: activation(21.0559) > threshold(0.0000)? ==> 21.0559
neuronOutput[8]: activation(21.0559) > threshold(0.0000)? ==> 21.0559
neuronOutput[9]: activation(21.0559) > threshold(0.0000)? ==> 21.0559
neuronOutput[10]: activation(21.0559) > threshold(0.0000)? ==> 21.0559
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](21.0559)
networkOutput[2] := neuronOutput[10](21.0559)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(36.1872) * weight[3,3](0.1000) => 3.6187
activation[4] = self(36.1872) * weight[4,4](0.1000) => 3.6187
activation[5] = self(36.1872) * weight[5,5](0.1000) => 3.6187
activation[6] = self(21.0559) * weight[6,6](0.1000) => 2.1056
activation[7] = self(21.0559) * weight[7,7](0.1000) => 2.1056
activation[8] = self(21.0559) * weight[8,8](0.1000) => 2.1056
activation[9] = self(21.0559) * weight[9,9](0.1000) => 2.1056
activation[10] = self(21.0559) * weight[10,10](0.1000) => 2.1056
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(3.6187) + output[1](35.5556) * 1.0000 => 39.1743
activation[3] = self(39.1743) + output[7](21.0559) * -0.5000 => 28.6463
activation[3] = self(28.6463) + output[8](21.0559) * -0.5000 => 18.1184
activation[4] = self(3.6187) + output[1](35.5556) * 0.5000 => 21.3965
activation[4] = self(21.3965) + output[2](35.5556) * 0.5000 => 39.1743
activation[4] = self(39.1743) + output[6](21.0559) * -0.5000 => 28.6463
activation[4] = self(28.6463) + output[8](21.0559) * -0.5000 => 18.1184
activation[5] = self(3.6187) + output[2](35.5556) * 1.0000 => 39.1743
activation[5] = self(39.1743) + output[6](21.0559) * -0.5000 => 28.6463
activation[5] = self(28.6463) + output[7](21.0559) * -0.5000 => 18.1184
activation[6] = self(2.1056) + output[3](36.1872) * 1.0000 => 38.2927
activation[7] = self(2.1056) + output[4](36.1872) * 1.0000 => 38.2927
activation[8] = self(2.1056) + output[5](36.1872) * 1.0000 => 38.2927
activation[9] = self(2.1056) + output[3](36.1872) * 0.7500 => 29.2460
activation[9] = self(29.2460) + output[4](36.1872) * 0.2500 => 38.2927
activation[10] = self(2.1056) + output[4](36.1872) * 0.2500 => 11.1524
activation[10] = self(11.1524) + output[5](36.1872) * 0.7500 => 38.2927
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(18.1184) > threshold(0.0000)? ==> 18.1184
neuronOutput[4]: activation(18.1184) > threshold(0.0000)? ==> 18.1184
neuronOutput[5]: activation(18.1184) > threshold(0.0000)? ==> 18.1184
neuronOutput[6]: activation(38.2927) > threshold(0.0000)? ==> 38.2927
neuronOutput[7]: activation(38.2927) > threshold(0.0000)? ==> 38.2927
neuronOutput[8]: activation(38.2927) > threshold(0.0000)? ==> 38.2927
neuronOutput[9]: activation(38.2927) > threshold(0.0000)? ==> 38.2927
neuronOutput[10]: activation(38.2927) > threshold(0.0000)? ==> 38.2927
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](38.2927)
networkOutput[2] := neuronOutput[10](38.2927)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(18.1184) * weight[3,3](0.1000) => 1.8118
activation[4] = self(18.1184) * weight[4,4](0.1000) => 1.8118
activation[5] = self(18.1184) * weight[5,5](0.1000) => 1.8118
activation[6] = self(38.2927) * weight[6,6](0.1000) => 3.8293
activation[7] = self(38.2927) * weight[7,7](0.1000) => 3.8293
activation[8] = self(38.2927) * weight[8,8](0.1000) => 3.8293
activation[9] = self(38.2927) * weight[9,9](0.1000) => 3.8293
activation[10] = self(38.2927) * weight[10,10](0.1000) => 3.8293
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(1.8118) + output[1](35.5556) * 1.0000 => 37.3674
activation[3] = self(37.3674) + output[7](38.2927) * -0.5000 => 18.2210
activation[3] = self(18.2210) + output[8](38.2927) * -0.5000 => -0.9253
activation[4] = self(1.8118) + output[1](35.5556) * 0.5000 => 19.5896
activation[4] = self(19.5896) + output[2](35.5556) * 0.5000 => 37.3674
activation[4] = self(37.3674) + output[6](38.2927) * -0.5000 => 18.2210
activation[4] = self(18.2210) + output[8](38.2927) * -0.5000 => -0.9253
activation[5] = self(1.8118) + output[2](35.5556) * 1.0000 => 37.3674
activation[5] = self(37.3674) + output[6](38.2927) * -0.5000 => 18.2210
activation[5] = self(18.2210) + output[7](38.2927) * -0.5000 => -0.9253
activation[6] = self(3.8293) + output[3](18.1184) * 1.0000 => 21.9476
activation[7] = self(3.8293) + output[4](18.1184) * 1.0000 => 21.9476
activation[8] = self(3.8293) + output[5](18.1184) * 1.0000 => 21.9476
activation[9] = self(3.8293) + output[3](18.1184) * 0.7500 => 17.4180
activation[9] = self(17.4180) + output[4](18.1184) * 0.2500 => 21.9476
activation[10] = self(3.8293) + output[4](18.1184) * 0.2500 => 8.3589
activation[10] = self(8.3589) + output[5](18.1184) * 0.7500 => 21.9476
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(-0.9253) > threshold(0.0000)? ==> 0.0000
neuronOutput[4]: activation(-0.9253) > threshold(0.0000)? ==> 0.0000
neuronOutput[5]: activation(-0.9253) > threshold(0.0000)? ==> 0.0000
neuronOutput[6]: activation(21.9476) > threshold(0.0000)? ==> 21.9476
neuronOutput[7]: activation(21.9476) > threshold(0.0000)? ==> 21.9476
neuronOutput[8]: activation(21.9476) > threshold(0.0000)? ==> 21.9476
neuronOutput[9]: activation(21.9476) > threshold(0.0000)? ==> 21.9476
neuronOutput[10]: activation(21.9476) > threshold(0.0000)? ==> 21.9476
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](21.9476)
networkOutput[2] := neuronOutput[10](21.9476)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(-0.9253) * weight[3,3](0.1000) => -0.0925
activation[4] = self(-0.9253) * weight[4,4](0.1000) => -0.0925
activation[5] = self(-0.9253) * weight[5,5](0.1000) => -0.0925
activation[6] = self(21.9476) * weight[6,6](0.1000) => 2.1948
activation[7] = self(21.9476) * weight[7,7](0.1000) => 2.1948
activation[8] = self(21.9476) * weight[8,8](0.1000) => 2.1948
activation[9] = self(21.9476) * weight[9,9](0.1000) => 2.1948
activation[10] = self(21.9476) * weight[10,10](0.1000) => 2.1948
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(-0.0925) + output[1](35.5556) * 1.0000 => 35.4630
activation[3] = self(35.4630) + output[7](21.9476) * -0.5000 => 24.4892
activation[3] = self(24.4892) + output[8](21.9476) * -0.5000 => 13.5154
activation[4] = self(-0.0925) + output[1](35.5556) * 0.5000 => 17.6852
activation[4] = self(17.6852) + output[2](35.5556) * 0.5000 => 35.4630
activation[4] = self(35.4630) + output[6](21.9476) * -0.5000 => 24.4892
activation[4] = self(24.4892) + output[8](21.9476) * -0.5000 => 13.5154
activation[5] = self(-0.0925) + output[2](35.5556) * 1.0000 => 35.4630
activation[5] = self(35.4630) + output[6](21.9476) * -0.5000 => 24.4892
activation[5] = self(24.4892) + output[7](21.9476) * -0.5000 => 13.5154
activation[6] = self(2.1948) + output[3](0.0000) * 1.0000 => 2.1948
activation[7] = self(2.1948) + output[4](0.0000) * 1.0000 => 2.1948
activation[8] = self(2.1948) + output[5](0.0000) * 1.0000 => 2.1948
activation[9] = self(2.1948) + output[3](0.0000) * 0.7500 => 2.1948
activation[9] = self(2.1948) + output[4](0.0000) * 0.2500 => 2.1948
activation[10] = self(2.1948) + output[4](0.0000) * 0.2500 => 2.1948
activation[10] = self(2.1948) + output[5](0.0000) * 0.7500 => 2.1948
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(13.5154) > threshold(0.0000)? ==> 13.5154
neuronOutput[4]: activation(13.5154) > threshold(0.0000)? ==> 13.5154
neuronOutput[5]: activation(13.5154) > threshold(0.0000)? ==> 13.5154
neuronOutput[6]: activation(2.1948) > threshold(0.0000)? ==> 2.1948
neuronOutput[7]: activation(2.1948) > threshold(0.0000)? ==> 2.1948
neuronOutput[8]: activation(2.1948) > threshold(0.0000)? ==> 2.1948
neuronOutput[9]: activation(2.1948) > threshold(0.0000)? ==> 2.1948
neuronOutput[10]: activation(2.1948) > threshold(0.0000)? ==> 2.1948
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](2.1948)
networkOutput[2] := neuronOutput[10](2.1948)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(13.5154) * weight[3,3](0.1000) => 1.3515
activation[4] = self(13.5154) * weight[4,4](0.1000) => 1.3515
activation[5] = self(13.5154) * weight[5,5](0.1000) => 1.3515
activation[6] = self(2.1948) * weight[6,6](0.1000) => 0.2195
activation[7] = self(2.1948) * weight[7,7](0.1000) => 0.2195
activation[8] = self(2.1948) * weight[8,8](0.1000) => 0.2195
activation[9] = self(2.1948) * weight[9,9](0.1000) => 0.2195
activation[10] = self(2.1948) * weight[10,10](0.1000) => 0.2195
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(1.3515) + output[1](35.5556) * 1.0000 => 36.9071
activation[3] = self(36.9071) + output[7](2.1948) * -0.5000 => 35.8097
activation[3] = self(35.8097) + output[8](2.1948) * -0.5000 => 34.7123
activation[4] = self(1.3515) + output[1](35.5556) * 0.5000 => 19.1293
activation[4] = self(19.1293) + output[2](35.5556) * 0.5000 => 36.9071
activation[4] = self(36.9071) + output[6](2.1948) * -0.5000 => 35.8097
activation[4] = self(35.8097) + output[8](2.1948) * -0.5000 => 34.7123
activation[5] = self(1.3515) + output[2](35.5556) * 1.0000 => 36.9071
activation[5] = self(36.9071) + output[6](2.1948) * -0.5000 => 35.8097
activation[5] = self(35.8097) + output[7](2.1948) * -0.5000 => 34.7123
activation[6] = self(0.2195) + output[3](13.5154) * 1.0000 => 13.7349
activation[7] = self(0.2195) + output[4](13.5154) * 1.0000 => 13.7349
activation[8] = self(0.2195) + output[5](13.5154) * 1.0000 => 13.7349
activation[9] = self(0.2195) + output[3](13.5154) * 0.7500 => 10.3560
activation[9] = self(10.3560) + output[4](13.5154) * 0.2500 => 13.7349
activation[10] = self(0.2195) + output[4](13.5154) * 0.2500 => 3.5983
activation[10] = self(3.5983) + output[5](13.5154) * 0.7500 => 13.7349
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(34.7123) > threshold(0.0000)? ==> 34.7123
neuronOutput[4]: activation(34.7123) > threshold(0.0000)? ==> 34.7123
neuronOutput[5]: activation(34.7123) > threshold(0.0000)? ==> 34.7123
neuronOutput[6]: activation(13.7349) > threshold(0.0000)? ==> 13.7349
neuronOutput[7]: activation(13.7349) > threshold(0.0000)? ==> 13.7349
neuronOutput[8]: activation(13.7349) > threshold(0.0000)? ==> 13.7349
neuronOutput[9]: activation(13.7349) > threshold(0.0000)? ==> 13.7349
neuronOutput[10]: activation(13.7349) > threshold(0.0000)? ==> 13.7349
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](13.7349)
networkOutput[2] := neuronOutput[10](13.7349)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(34.7123) * weight[3,3](0.1000) => 3.4712
activation[4] = self(34.7123) * weight[4,4](0.1000) => 3.4712
activation[5] = self(34.7123) * weight[5,5](0.1000) => 3.4712
activation[6] = self(13.7349) * weight[6,6](0.1000) => 1.3735
activation[7] = self(13.7349) * weight[7,7](0.1000) => 1.3735
activation[8] = self(13.7349) * weight[8,8](0.1000) => 1.3735
activation[9] = self(13.7349) * weight[9,9](0.1000) => 1.3735
activation[10] = self(13.7349) * weight[10,10](0.1000) => 1.3735
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(3.4712) + output[1](35.5556) * 1.0000 => 39.0268
activation[3] = self(39.0268) + output[7](13.7349) * -0.5000 => 32.1594
activation[3] = self(32.1594) + output[8](13.7349) * -0.5000 => 25.2919
activation[4] = self(3.4712) + output[1](35.5556) * 0.5000 => 21.2490
activation[4] = self(21.2490) + output[2](35.5556) * 0.5000 => 39.0268
activation[4] = self(39.0268) + output[6](13.7349) * -0.5000 => 32.1594
activation[4] = self(32.1594) + output[8](13.7349) * -0.5000 => 25.2919
activation[5] = self(3.4712) + output[2](35.5556) * 1.0000 => 39.0268
activation[5] = self(39.0268) + output[6](13.7349) * -0.5000 => 32.1594
activation[5] = self(32.1594) + output[7](13.7349) * -0.5000 => 25.2919
activation[6] = self(1.3735) + output[3](34.7123) * 1.0000 => 36.0858
activation[7] = self(1.3735) + output[4](34.7123) * 1.0000 => 36.0858
activation[8] = self(1.3735) + output[5](34.7123) * 1.0000 => 36.0858
activation[9] = self(1.3735) + output[3](34.7123) * 0.7500 => 27.4077
activation[9] = self(27.4077) + output[4](34.7123) * 0.2500 => 36.0858
activation[10] = self(1.3735) + output[4](34.7123) * 0.2500 => 10.0516
activation[10] = self(10.0516) + output[5](34.7123) * 0.7500 => 36.0858
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(25.2919) > threshold(0.0000)? ==> 25.2919
neuronOutput[4]: activation(25.2919) > threshold(0.0000)? ==> 25.2919
neuronOutput[5]: activation(25.2919) > threshold(0.0000)? ==> 25.2919
neuronOutput[6]: activation(36.0858) > threshold(0.0000)? ==> 36.0858
neuronOutput[7]: activation(36.0858) > threshold(0.0000)? ==> 36.0858
neuronOutput[8]: activation(36.0858) > threshold(0.0000)? ==> 36.0858
neuronOutput[9]: activation(36.0858) > threshold(0.0000)? ==> 36.0858
neuronOutput[10]: activation(36.0858) > threshold(0.0000)? ==> 36.0858
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](36.0858)
networkOutput[2] := neuronOutput[10](36.0858)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(25.2919) * weight[3,3](0.1000) => 2.5292
activation[4] = self(25.2919) * weight[4,4](0.1000) => 2.5292
activation[5] = self(25.2919) * weight[5,5](0.1000) => 2.5292
activation[6] = self(36.0858) * weight[6,6](0.1000) => 3.6086
activation[7] = self(36.0858) * weight[7,7](0.1000) => 3.6086
activation[8] = self(36.0858) * weight[8,8](0.1000) => 3.6086
activation[9] = self(36.0858) * weight[9,9](0.1000) => 3.6086
activation[10] = self(36.0858) * weight[10,10](0.1000) => 3.6086
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(2.5292) + output[1](35.5556) * 1.0000 => 38.0848
activation[3] = self(38.0848) + output[7](36.0858) * -0.5000 => 20.0418
activation[3] = self(20.0418) + output[8](36.0858) * -0.5000 => 1.9989
activation[4] = self(2.5292) + output[1](35.5556) * 0.5000 => 20.3070
activation[4] = self(20.3070) + output[2](35.5556) * 0.5000 => 38.0848
activation[4] = self(38.0848) + output[6](36.0858) * -0.5000 => 20.0418
activation[4] = self(20.0418) + output[8](36.0858) * -0.5000 => 1.9989
activation[5] = self(2.5292) + output[2](35.5556) * 1.0000 => 38.0848
activation[5] = self(38.0848) + output[6](36.0858) * -0.5000 => 20.0418
activation[5] = self(20.0418) + output[7](36.0858) * -0.5000 => 1.9989
activation[6] = self(3.6086) + output[3](25.2919) * 1.0000 => 28.9005
activation[7] = self(3.6086) + output[4](25.2919) * 1.0000 => 28.9005
activation[8] = self(3.6086) + output[5](25.2919) * 1.0000 => 28.9005
activation[9] = self(3.6086) + output[3](25.2919) * 0.7500 => 22.5775
activation[9] = self(22.5775) + output[4](25.2919) * 0.2500 => 28.9005
activation[10] = self(3.6086) + output[4](25.2919) * 0.2500 => 9.9316
activation[10] = self(9.9316) + output[5](25.2919) * 0.7500 => 28.9005
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(1.9989) > threshold(0.0000)? ==> 1.9989
neuronOutput[4]: activation(1.9989) > threshold(0.0000)? ==> 1.9989
neuronOutput[5]: activation(1.9989) > threshold(0.0000)? ==> 1.9989
neuronOutput[6]: activation(28.9005) > threshold(0.0000)? ==> 28.9005
neuronOutput[7]: activation(28.9005) > threshold(0.0000)? ==> 28.9005
neuronOutput[8]: activation(28.9005) > threshold(0.0000)? ==> 28.9005
neuronOutput[9]: activation(28.9005) > threshold(0.0000)? ==> 28.9005
neuronOutput[10]: activation(28.9005) > threshold(0.0000)? ==> 28.9005
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](28.9005)
networkOutput[2] := neuronOutput[10](28.9005)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(1.9989) * weight[3,3](0.1000) => 0.1999
activation[4] = self(1.9989) * weight[4,4](0.1000) => 0.1999
activation[5] = self(1.9989) * weight[5,5](0.1000) => 0.1999
activation[6] = self(28.9005) * weight[6,6](0.1000) => 2.8901
activation[7] = self(28.9005) * weight[7,7](0.1000) => 2.8901
activation[8] = self(28.9005) * weight[8,8](0.1000) => 2.8901
activation[9] = self(28.9005) * weight[9,9](0.1000) => 2.8901
activation[10] = self(28.9005) * weight[10,10](0.1000) => 2.8901
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(0.1999) + output[1](35.5556) * 1.0000 => 35.7555
activation[3] = self(35.7555) + output[7](28.9005) * -0.5000 => 21.3052
activation[3] = self(21.3052) + output[8](28.9005) * -0.5000 => 6.8549
activation[4] = self(0.1999) + output[1](35.5556) * 0.5000 => 17.9777
activation[4] = self(17.9777) + output[2](35.5556) * 0.5000 => 35.7555
activation[4] = self(35.7555) + output[6](28.9005) * -0.5000 => 21.3052
activation[4] = self(21.3052) + output[8](28.9005) * -0.5000 => 6.8549
activation[5] = self(0.1999) + output[2](35.5556) * 1.0000 => 35.7555
activation[5] = self(35.7555) + output[6](28.9005) * -0.5000 => 21.3052
activation[5] = self(21.3052) + output[7](28.9005) * -0.5000 => 6.8549
activation[6] = self(2.8901) + output[3](1.9989) * 1.0000 => 4.8890
activation[7] = self(2.8901) + output[4](1.9989) * 1.0000 => 4.8890
activation[8] = self(2.8901) + output[5](1.9989) * 1.0000 => 4.8890
activation[9] = self(2.8901) + output[3](1.9989) * 0.7500 => 4.3892
activation[9] = self(4.3892) + output[4](1.9989) * 0.2500 => 4.8890
activation[10] = self(2.8901) + output[4](1.9989) * 0.2500 => 3.3898
activation[10] = self(3.3898) + output[5](1.9989) * 0.7500 => 4.8890
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(6.8549) > threshold(0.0000)? ==> 6.8549
neuronOutput[4]: activation(6.8549) > threshold(0.0000)? ==> 6.8549
neuronOutput[5]: activation(6.8549) > threshold(0.0000)? ==> 6.8549
neuronOutput[6]: activation(4.8890) > threshold(0.0000)? ==> 4.8890
neuronOutput[7]: activation(4.8890) > threshold(0.0000)? ==> 4.8890
neuronOutput[8]: activation(4.8890) > threshold(0.0000)? ==> 4.8890
neuronOutput[9]: activation(4.8890) > threshold(0.0000)? ==> 4.8890
neuronOutput[10]: activation(4.8890) > threshold(0.0000)? ==> 4.8890
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](4.8890)
networkOutput[2] := neuronOutput[10](4.8890)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(6.8549) * weight[3,3](0.1000) => 0.6855
activation[4] = self(6.8549) * weight[4,4](0.1000) => 0.6855
activation[5] = self(6.8549) * weight[5,5](0.1000) => 0.6855
activation[6] = self(4.8890) * weight[6,6](0.1000) => 0.4889
activation[7] = self(4.8890) * weight[7,7](0.1000) => 0.4889
activation[8] = self(4.8890) * weight[8,8](0.1000) => 0.4889
activation[9] = self(4.8890) * weight[9,9](0.1000) => 0.4889
activation[10] = self(4.8890) * weight[10,10](0.1000) => 0.4889
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(0.6855) + output[1](35.5556) * 1.0000 => 36.2411
activation[3] = self(36.2411) + output[7](4.8890) * -0.5000 => 33.7966
activation[3] = self(33.7966) + output[8](4.8890) * -0.5000 => 31.3521
activation[4] = self(0.6855) + output[1](35.5556) * 0.5000 => 18.4633
activation[4] = self(18.4633) + output[2](35.5556) * 0.5000 => 36.2411
activation[4] = self(36.2411) + output[6](4.8890) * -0.5000 => 33.7966
activation[4] = self(33.7966) + output[8](4.8890) * -0.5000 => 31.3521
activation[5] = self(0.6855) + output[2](35.5556) * 1.0000 => 36.2411
activation[5] = self(36.2411) + output[6](4.8890) * -0.5000 => 33.7966
activation[5] = self(33.7966) + output[7](4.8890) * -0.5000 => 31.3521
activation[6] = self(0.4889) + output[3](6.8549) * 1.0000 => 7.3438
activation[7] = self(0.4889) + output[4](6.8549) * 1.0000 => 7.3438
activation[8] = self(0.4889) + output[5](6.8549) * 1.0000 => 7.3438
activation[9] = self(0.4889) + output[3](6.8549) * 0.7500 => 5.6301
activation[9] = self(5.6301) + output[4](6.8549) * 0.2500 => 7.3438
activation[10] = self(0.4889) + output[4](6.8549) * 0.2500 => 2.2026
activation[10] = self(2.2026) + output[5](6.8549) * 0.7500 => 7.3438
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(31.3521) > threshold(0.0000)? ==> 31.3521
neuronOutput[4]: activation(31.3521) > threshold(0.0000)? ==> 31.3521
neuronOutput[5]: activation(31.3521) > threshold(0.0000)? ==> 31.3521
neuronOutput[6]: activation(7.3438) > threshold(0.0000)? ==> 7.3438
neuronOutput[7]: activation(7.3438) > threshold(0.0000)? ==> 7.3438
neuronOutput[8]: activation(7.3438) > threshold(0.0000)? ==> 7.3438
neuronOutput[9]: activation(7.3438) > threshold(0.0000)? ==> 7.3438
neuronOutput[10]: activation(7.3438) > threshold(0.0000)? ==> 7.3438
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](7.3438)
networkOutput[2] := neuronOutput[10](7.3438)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(31.3521) * weight[3,3](0.1000) => 3.1352
activation[4] = self(31.3521) * weight[4,4](0.1000) => 3.1352
activation[5] = self(31.3521) * weight[5,5](0.1000) => 3.1352
activation[6] = self(7.3438) * weight[6,6](0.1000) => 0.7344
activation[7] = self(7.3438) * weight[7,7](0.1000) => 0.7344
activation[8] = self(7.3438) * weight[8,8](0.1000) => 0.7344
activation[9] = self(7.3438) * weight[9,9](0.1000) => 0.7344
activation[10] = self(7.3438) * weight[10,10](0.1000) => 0.7344
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(3.1352) + output[1](35.5556) * 1.0000 => 38.6908
activation[3] = self(38.6908) + output[7](7.3438) * -0.5000 => 35.0188
activation[3] = self(35.0188) + output[8](7.3438) * -0.5000 => 31.3469
activation[4] = self(3.1352) + output[1](35.5556) * 0.5000 => 20.9130
activation[4] = self(20.9130) + output[2](35.5556) * 0.5000 => 38.6908
activation[4] = self(38.6908) + output[6](7.3438) * -0.5000 => 35.0188
activation[4] = self(35.0188) + output[8](7.3438) * -0.5000 => 31.3469
activation[5] = self(3.1352) + output[2](35.5556) * 1.0000 => 38.6908
activation[5] = self(38.6908) + output[6](7.3438) * -0.5000 => 35.0188
activation[5] = self(35.0188) + output[7](7.3438) * -0.5000 => 31.3469
activation[6] = self(0.7344) + output[3](31.3521) * 1.0000 => 32.0865
activation[7] = self(0.7344) + output[4](31.3521) * 1.0000 => 32.0865
activation[8] = self(0.7344) + output[5](31.3521) * 1.0000 => 32.0865
activation[9] = self(0.7344) + output[3](31.3521) * 0.7500 => 24.2484
activation[9] = self(24.2484) + output[4](31.3521) * 0.2500 => 32.0865
activation[10] = self(0.7344) + output[4](31.3521) * 0.2500 => 8.5724
activation[10] = self(8.5724) + output[5](31.3521) * 0.7500 => 32.0865
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(31.3469) > threshold(0.0000)? ==> 31.3469
neuronOutput[4]: activation(31.3469) > threshold(0.0000)? ==> 31.3469
neuronOutput[5]: activation(31.3469) > threshold(0.0000)? ==> 31.3469
neuronOutput[6]: activation(32.0865) > threshold(0.0000)? ==> 32.0865
neuronOutput[7]: activation(32.0865) > threshold(0.0000)? ==> 32.0865
neuronOutput[8]: activation(32.0865) > threshold(0.0000)? ==> 32.0865
neuronOutput[9]: activation(32.0865) > threshold(0.0000)? ==> 32.0865
neuronOutput[10]: activation(32.0865) > threshold(0.0000)? ==> 32.0865
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](32.0865)
networkOutput[2] := neuronOutput[10](32.0865)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(31.3469) * weight[3,3](0.1000) => 3.1347
activation[4] = self(31.3469) * weight[4,4](0.1000) => 3.1347
activation[5] = self(31.3469) * weight[5,5](0.1000) => 3.1347
activation[6] = self(32.0865) * weight[6,6](0.1000) => 3.2086
activation[7] = self(32.0865) * weight[7,7](0.1000) => 3.2086
activation[8] = self(32.0865) * weight[8,8](0.1000) => 3.2086
activation[9] = self(32.0865) * weight[9,9](0.1000) => 3.2086
activation[10] = self(32.0865) * weight[10,10](0.1000) => 3.2086
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(3.1347) + output[1](35.5556) * 1.0000 => 38.6903
activation[3] = self(38.6903) + output[7](32.0865) * -0.5000 => 22.6470
activation[3] = self(22.6470) + output[8](32.0865) * -0.5000 => 6.6038
activation[4] = self(3.1347) + output[1](35.5556) * 0.5000 => 20.9125
activation[4] = self(20.9125) + output[2](35.5556) * 0.5000 => 38.6903
activation[4] = self(38.6903) + output[6](32.0865) * -0.5000 => 22.6470
activation[4] = self(22.6470) + output[8](32.0865) * -0.5000 => 6.6038
activation[5] = self(3.1347) + output[2](35.5556) * 1.0000 => 38.6903
activation[5] = self(38.6903) + output[6](32.0865) * -0.5000 => 22.6470
activation[5] = self(22.6470) + output[7](32.0865) * -0.5000 => 6.6038
activation[6] = self(3.2086) + output[3](31.3469) * 1.0000 => 34.5556
activation[7] = self(3.2086) + output[4](31.3469) * 1.0000 => 34.5556
activation[8] = self(3.2086) + output[5](31.3469) * 1.0000 => 34.5556
activation[9] = self(3.2086) + output[3](31.3469) * 0.7500 => 26.7188
activation[9] = self(26.7188) + output[4](31.3469) * 0.2500 => 34.5556
activation[10] = self(3.2086) + output[4](31.3469) * 0.2500 => 11.0454
activation[10] = self(11.0454) + output[5](31.3469) * 0.7500 => 34.5556
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(6.6038) > threshold(0.0000)? ==> 6.6038
neuronOutput[4]: activation(6.6038) > threshold(0.0000)? ==> 6.6038
neuronOutput[5]: activation(6.6038) > threshold(0.0000)? ==> 6.6038
neuronOutput[6]: activation(34.5556) > threshold(0.0000)? ==> 34.5556
neuronOutput[7]: activation(34.5556) > threshold(0.0000)? ==> 34.5556
neuronOutput[8]: activation(34.5556) > threshold(0.0000)? ==> 34.5556
neuronOutput[9]: activation(34.5556) > threshold(0.0000)? ==> 34.5556
neuronOutput[10]: activation(34.5556) > threshold(0.0000)? ==> 34.5556
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](34.5556)
networkOutput[2] := neuronOutput[10](34.5556)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(6.6038) * weight[3,3](0.1000) => 0.6604
activation[4] = self(6.6038) * weight[4,4](0.1000) => 0.6604
activation[5] = self(6.6038) * weight[5,5](0.1000) => 0.6604
activation[6] = self(34.5556) * weight[6,6](0.1000) => 3.4556
activation[7] = self(34.5556) * weight[7,7](0.1000) => 3.4556
activation[8] = self(34.5556) * weight[8,8](0.1000) => 3.4556
activation[9] = self(34.5556) * weight[9,9](0.1000) => 3.4556
activation[10] = self(34.5556) * weight[10,10](0.1000) => 3.4556
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(0.6604) + output[1](35.5556) * 1.0000 => 36.2159
activation[3] = self(36.2159) + output[7](34.5556) * -0.5000 => 18.9382
activation[3] = self(18.9382) + output[8](34.5556) * -0.5000 => 1.6604
activation[4] = self(0.6604) + output[1](35.5556) * 0.5000 => 18.4382
activation[4] = self(18.4382) + output[2](35.5556) * 0.5000 => 36.2159
activation[4] = self(36.2159) + output[6](34.5556) * -0.5000 => 18.9382
activation[4] = self(18.9382) + output[8](34.5556) * -0.5000 => 1.6604
activation[5] = self(0.6604) + output[2](35.5556) * 1.0000 => 36.2159
activation[5] = self(36.2159) + output[6](34.5556) * -0.5000 => 18.9382
activation[5] = self(18.9382) + output[7](34.5556) * -0.5000 => 1.6604
activation[6] = self(3.4556) + output[3](6.6038) * 1.0000 => 10.0594
activation[7] = self(3.4556) + output[4](6.6038) * 1.0000 => 10.0594
activation[8] = self(3.4556) + output[5](6.6038) * 1.0000 => 10.0594
activation[9] = self(3.4556) + output[3](6.6038) * 0.7500 => 8.4084
activation[9] = self(8.4084) + output[4](6.6038) * 0.2500 => 10.0594
activation[10] = self(3.4556) + output[4](6.6038) * 0.2500 => 5.1065
activation[10] = self(5.1065) + output[5](6.6038) * 0.7500 => 10.0594
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(1.6604) > threshold(0.0000)? ==> 1.6604
neuronOutput[4]: activation(1.6604) > threshold(0.0000)? ==> 1.6604
neuronOutput[5]: activation(1.6604) > threshold(0.0000)? ==> 1.6604
neuronOutput[6]: activation(10.0594) > threshold(0.0000)? ==> 10.0594
neuronOutput[7]: activation(10.0594) > threshold(0.0000)? ==> 10.0594
neuronOutput[8]: activation(10.0594) > threshold(0.0000)? ==> 10.0594
neuronOutput[9]: activation(10.0594) > threshold(0.0000)? ==> 10.0594
neuronOutput[10]: activation(10.0594) > threshold(0.0000)? ==> 10.0594
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](10.0594)
networkOutput[2] := neuronOutput[10](10.0594)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(1.6604) * weight[3,3](0.1000) => 0.1660
activation[4] = self(1.6604) * weight[4,4](0.1000) => 0.1660
activation[5] = self(1.6604) * weight[5,5](0.1000) => 0.1660
activation[6] = self(10.0594) * weight[6,6](0.1000) => 1.0059
activation[7] = self(10.0594) * weight[7,7](0.1000) => 1.0059
activation[8] = self(10.0594) * weight[8,8](0.1000) => 1.0059
activation[9] = self(10.0594) * weight[9,9](0.1000) => 1.0059
activation[10] = self(10.0594) * weight[10,10](0.1000) => 1.0059
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(0.1660) + output[1](35.5556) * 1.0000 => 35.7216
activation[3] = self(35.7216) + output[7](10.0594) * -0.5000 => 30.6919
activation[3] = self(30.6919) + output[8](10.0594) * -0.5000 => 25.6623
activation[4] = self(0.1660) + output[1](35.5556) * 0.5000 => 17.9438
activation[4] = self(17.9438) + output[2](35.5556) * 0.5000 => 35.7216
activation[4] = self(35.7216) + output[6](10.0594) * -0.5000 => 30.6919
activation[4] = self(30.6919) + output[8](10.0594) * -0.5000 => 25.6623
activation[5] = self(0.1660) + output[2](35.5556) * 1.0000 => 35.7216
activation[5] = self(35.7216) + output[6](10.0594) * -0.5000 => 30.6919
activation[5] = self(30.6919) + output[7](10.0594) * -0.5000 => 25.6623
activation[6] = self(1.0059) + output[3](1.6604) * 1.0000 => 2.6663
activation[7] = self(1.0059) + output[4](1.6604) * 1.0000 => 2.6663
activation[8] = self(1.0059) + output[5](1.6604) * 1.0000 => 2.6663
activation[9] = self(1.0059) + output[3](1.6604) * 0.7500 => 2.2512
activation[9] = self(2.2512) + output[4](1.6604) * 0.2500 => 2.6663
activation[10] = self(1.0059) + output[4](1.6604) * 0.2500 => 1.4210
activation[10] = self(1.4210) + output[5](1.6604) * 0.7500 => 2.6663
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(25.6623) > threshold(0.0000)? ==> 25.6623
neuronOutput[4]: activation(25.6623) > threshold(0.0000)? ==> 25.6623
neuronOutput[5]: activation(25.6623) > threshold(0.0000)? ==> 25.6623
neuronOutput[6]: activation(2.6663) > threshold(0.0000)? ==> 2.6663
neuronOutput[7]: activation(2.6663) > threshold(0.0000)? ==> 2.6663
neuronOutput[8]: activation(2.6663) > threshold(0.0000)? ==> 2.6663
neuronOutput[9]: activation(2.6663) > threshold(0.0000)? ==> 2.6663
neuronOutput[10]: activation(2.6663) > threshold(0.0000)? ==> 2.6663
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](2.6663)
networkOutput[2] := neuronOutput[10](2.6663)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(25.6623) * weight[3,3](0.1000) => 2.5662
activation[4] = self(25.6623) * weight[4,4](0.1000) => 2.5662
activation[5] = self(25.6623) * weight[5,5](0.1000) => 2.5662
activation[6] = self(2.6663) * weight[6,6](0.1000) => 0.2666
activation[7] = self(2.6663) * weight[7,7](0.1000) => 0.2666
activation[8] = self(2.6663) * weight[8,8](0.1000) => 0.2666
activation[9] = self(2.6663) * weight[9,9](0.1000) => 0.2666
activation[10] = self(2.6663) * weight[10,10](0.1000) => 0.2666
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(2.5662) + output[1](35.5556) * 1.0000 => 38.1218
activation[3] = self(38.1218) + output[7](2.6663) * -0.5000 => 36.7886
activation[3] = self(36.7886) + output[8](2.6663) * -0.5000 => 35.4555
activation[4] = self(2.5662) + output[1](35.5556) * 0.5000 => 20.3440
activation[4] = self(20.3440) + output[2](35.5556) * 0.5000 => 38.1218
activation[4] = self(38.1218) + output[6](2.6663) * -0.5000 => 36.7886
activation[4] = self(36.7886) + output[8](2.6663) * -0.5000 => 35.4555
activation[5] = self(2.5662) + output[2](35.5556) * 1.0000 => 38.1218
activation[5] = self(38.1218) + output[6](2.6663) * -0.5000 => 36.7886
activation[5] = self(36.7886) + output[7](2.6663) * -0.5000 => 35.4555
activation[6] = self(0.2666) + output[3](25.6623) * 1.0000 => 25.9289
activation[7] = self(0.2666) + output[4](25.6623) * 1.0000 => 25.9289
activation[8] = self(0.2666) + output[5](25.6623) * 1.0000 => 25.9289
activation[9] = self(0.2666) + output[3](25.6623) * 0.7500 => 19.5133
activation[9] = self(19.5133) + output[4](25.6623) * 0.2500 => 25.9289
activation[10] = self(0.2666) + output[4](25.6623) * 0.2500 => 6.6822
activation[10] = self(6.6822) + output[5](25.6623) * 0.7500 => 25.9289
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(35.4555) > threshold(0.0000)? ==> 35.4555
neuronOutput[4]: activation(35.4555) > threshold(0.0000)? ==> 35.4555
neuronOutput[5]: activation(35.4555) > threshold(0.0000)? ==> 35.4555
neuronOutput[6]: activation(25.9289) > threshold(0.0000)? ==> 25.9289
neuronOutput[7]: activation(25.9289) > threshold(0.0000)? ==> 25.9289
neuronOutput[8]: activation(25.9289) > threshold(0.0000)? ==> 25.9289
neuronOutput[9]: activation(25.9289) > threshold(0.0000)? ==> 25.9289
neuronOutput[10]: activation(25.9289) > threshold(0.0000)? ==> 25.9289
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](25.9289)
networkOutput[2] := neuronOutput[10](25.9289)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(35.4555) * weight[3,3](0.1000) => 3.5455
activation[4] = self(35.4555) * weight[4,4](0.1000) => 3.5455
activation[5] = self(35.4555) * weight[5,5](0.1000) => 3.5455
activation[6] = self(25.9289) * weight[6,6](0.1000) => 2.5929
activation[7] = self(25.9289) * weight[7,7](0.1000) => 2.5929
activation[8] = self(25.9289) * weight[8,8](0.1000) => 2.5929
activation[9] = self(25.9289) * weight[9,9](0.1000) => 2.5929
activation[10] = self(25.9289) * weight[10,10](0.1000) => 2.5929
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(3.5455) + output[1](35.5556) * 1.0000 => 39.1011
activation[3] = self(39.1011) + output[7](25.9289) * -0.5000 => 26.1367
activation[3] = self(26.1367) + output[8](25.9289) * -0.5000 => 13.1722
activation[4] = self(3.5455) + output[1](35.5556) * 0.5000 => 21.3233
activation[4] = self(21.3233) + output[2](35.5556) * 0.5000 => 39.1011
activation[4] = self(39.1011) + output[6](25.9289) * -0.5000 => 26.1367
activation[4] = self(26.1367) + output[8](25.9289) * -0.5000 => 13.1722
activation[5] = self(3.5455) + output[2](35.5556) * 1.0000 => 39.1011
activation[5] = self(39.1011) + output[6](25.9289) * -0.5000 => 26.1367
activation[5] = self(26.1367) + output[7](25.9289) * -0.5000 => 13.1722
activation[6] = self(2.5929) + output[3](35.4555) * 1.0000 => 38.0484
activation[7] = self(2.5929) + output[4](35.4555) * 1.0000 => 38.0484
activation[8] = self(2.5929) + output[5](35.4555) * 1.0000 => 38.0484
activation[9] = self(2.5929) + output[3](35.4555) * 0.7500 => 29.1845
activation[9] = self(29.1845) + output[4](35.4555) * 0.2500 => 38.0484
activation[10] = self(2.5929) + output[4](35.4555) * 0.2500 => 11.4568
activation[10] = self(11.4568) + output[5](35.4555) * 0.7500 => 38.0484
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(13.1722) > threshold(0.0000)? ==> 13.1722
neuronOutput[4]: activation(13.1722) > threshold(0.0000)? ==> 13.1722
neuronOutput[5]: activation(13.1722) > threshold(0.0000)? ==> 13.1722
neuronOutput[6]: activation(38.0484) > threshold(0.0000)? ==> 38.0484
neuronOutput[7]: activation(38.0484) > threshold(0.0000)? ==> 38.0484
neuronOutput[8]: activation(38.0484) > threshold(0.0000)? ==> 38.0484
neuronOutput[9]: activation(38.0484) > threshold(0.0000)? ==> 38.0484
neuronOutput[10]: activation(38.0484) > threshold(0.0000)? ==> 38.0484
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](38.0484)
networkOutput[2] := neuronOutput[10](38.0484)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(13.1722) * weight[3,3](0.1000) => 1.3172
activation[4] = self(13.1722) * weight[4,4](0.1000) => 1.3172
activation[5] = self(13.1722) * weight[5,5](0.1000) => 1.3172
activation[6] = self(38.0484) * weight[6,6](0.1000) => 3.8048
activation[7] = self(38.0484) * weight[7,7](0.1000) => 3.8048
activation[8] = self(38.0484) * weight[8,8](0.1000) => 3.8048
activation[9] = self(38.0484) * weight[9,9](0.1000) => 3.8048
activation[10] = self(38.0484) * weight[10,10](0.1000) => 3.8048
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(1.3172) + output[1](35.5556) * 1.0000 => 36.8728
activation[3] = self(36.8728) + output[7](38.0484) * -0.5000 => 17.8486
activation[3] = self(17.8486) + output[8](38.0484) * -0.5000 => -1.1756
activation[4] = self(1.3172) + output[1](35.5556) * 0.5000 => 19.0950
activation[4] = self(19.0950) + output[2](35.5556) * 0.5000 => 36.8728
activation[4] = self(36.8728) + output[6](38.0484) * -0.5000 => 17.8486
activation[4] = self(17.8486) + output[8](38.0484) * -0.5000 => -1.1756
activation[5] = self(1.3172) + output[2](35.5556) * 1.0000 => 36.8728
activation[5] = self(36.8728) + output[6](38.0484) * -0.5000 => 17.8486
activation[5] = self(17.8486) + output[7](38.0484) * -0.5000 => -1.1756
activation[6] = self(3.8048) + output[3](13.1722) * 1.0000 => 16.9771
activation[7] = self(3.8048) + output[4](13.1722) * 1.0000 => 16.9771
activation[8] = self(3.8048) + output[5](13.1722) * 1.0000 => 16.9771
activation[9] = self(3.8048) + output[3](13.1722) * 0.7500 => 13.6840
activation[9] = self(13.6840) + output[4](13.1722) * 0.2500 => 16.9771
activation[10] = self(3.8048) + output[4](13.1722) * 0.2500 => 7.0979
activation[10] = self(7.0979) + output[5](13.1722) * 0.7500 => 16.9771
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(-1.1756) > threshold(0.0000)? ==> 0.0000
neuronOutput[4]: activation(-1.1756) > threshold(0.0000)? ==> 0.0000
neuronOutput[5]: activation(-1.1756) > threshold(0.0000)? ==> 0.0000
neuronOutput[6]: activation(16.9771) > threshold(0.0000)? ==> 16.9771
neuronOutput[7]: activation(16.9771) > threshold(0.0000)? ==> 16.9771
neuronOutput[8]: activation(16.9771) > threshold(0.0000)? ==> 16.9771
neuronOutput[9]: activation(16.9771) > threshold(0.0000)? ==> 16.9771
neuronOutput[10]: activation(16.9771) > threshold(0.0000)? ==> 16.9771
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](16.9771)
networkOutput[2] := neuronOutput[10](16.9771)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(-1.1756) * weight[3,3](0.1000) => -0.1176
activation[4] = self(-1.1756) * weight[4,4](0.1000) => -0.1176
activation[5] = self(-1.1756) * weight[5,5](0.1000) => -0.1176
activation[6] = self(16.9771) * weight[6,6](0.1000) => 1.6977
activation[7] = self(16.9771) * weight[7,7](0.1000) => 1.6977
activation[8] = self(16.9771) * weight[8,8](0.1000) => 1.6977
activation[9] = self(16.9771) * weight[9,9](0.1000) => 1.6977
activation[10] = self(16.9771) * weight[10,10](0.1000) => 1.6977
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(-0.1176) + output[1](35.5556) * 1.0000 => 35.4380
activation[3] = self(35.4380) + output[7](16.9771) * -0.5000 => 26.9495
activation[3] = self(26.9495) + output[8](16.9771) * -0.5000 => 18.4609
activation[4] = self(-0.1176) + output[1](35.5556) * 0.5000 => 17.6602
activation[4] = self(17.6602) + output[2](35.5556) * 0.5000 => 35.4380
activation[4] = self(35.4380) + output[6](16.9771) * -0.5000 => 26.9495
activation[4] = self(26.9495) + output[8](16.9771) * -0.5000 => 18.4609
activation[5] = self(-0.1176) + output[2](35.5556) * 1.0000 => 35.4380
activation[5] = self(35.4380) + output[6](16.9771) * -0.5000 => 26.9495
activation[5] = self(26.9495) + output[7](16.9771) * -0.5000 => 18.4609
activation[6] = self(1.6977) + output[3](0.0000) * 1.0000 => 1.6977
activation[7] = self(1.6977) + output[4](0.0000) * 1.0000 => 1.6977
activation[8] = self(1.6977) + output[5](0.0000) * 1.0000 => 1.6977
activation[9] = self(1.6977) + output[3](0.0000) * 0.7500 => 1.6977
activation[9] = self(1.6977) + output[4](0.0000) * 0.2500 => 1.6977
activation[10] = self(1.6977) + output[4](0.0000) * 0.2500 => 1.6977
activation[10] = self(1.6977) + output[5](0.0000) * 0.7500 => 1.6977
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(18.4609) > threshold(0.0000)? ==> 18.4609
neuronOutput[4]: activation(18.4609) > threshold(0.0000)? ==> 18.4609
neuronOutput[5]: activation(18.4609) > threshold(0.0000)? ==> 18.4609
neuronOutput[6]: activation(1.6977) > threshold(0.0000)? ==> 1.6977
neuronOutput[7]: activation(1.6977) > threshold(0.0000)? ==> 1.6977
neuronOutput[8]: activation(1.6977) > threshold(0.0000)? ==> 1.6977
neuronOutput[9]: activation(1.6977) > threshold(0.0000)? ==> 1.6977
neuronOutput[10]: activation(1.6977) > threshold(0.0000)? ==> 1.6977
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](1.6977)
networkOutput[2] := neuronOutput[10](1.6977)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(18.4609) * weight[3,3](0.1000) => 1.8461
activation[4] = self(18.4609) * weight[4,4](0.1000) => 1.8461
activation[5] = self(18.4609) * weight[5,5](0.1000) => 1.8461
activation[6] = self(1.6977) * weight[6,6](0.1000) => 0.1698
activation[7] = self(1.6977) * weight[7,7](0.1000) => 0.1698
activation[8] = self(1.6977) * weight[8,8](0.1000) => 0.1698
activation[9] = self(1.6977) * weight[9,9](0.1000) => 0.1698
activation[10] = self(1.6977) * weight[10,10](0.1000) => 0.1698
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(1.8461) + output[1](35.5556) * 1.0000 => 37.4017
activation[3] = self(37.4017) + output[7](1.6977) * -0.5000 => 36.5528
activation[3] = self(36.5528) + output[8](1.6977) * -0.5000 => 35.7040
activation[4] = self(1.8461) + output[1](35.5556) * 0.5000 => 19.6239
activation[4] = self(19.6239) + output[2](35.5556) * 0.5000 => 37.4017
activation[4] = self(37.4017) + output[6](1.6977) * -0.5000 => 36.5528
activation[4] = self(36.5528) + output[8](1.6977) * -0.5000 => 35.7040
activation[5] = self(1.8461) + output[2](35.5556) * 1.0000 => 37.4017
activation[5] = self(37.4017) + output[6](1.6977) * -0.5000 => 36.5528
activation[5] = self(36.5528) + output[7](1.6977) * -0.5000 => 35.7040
activation[6] = self(0.1698) + output[3](18.4609) * 1.0000 => 18.6307
activation[7] = self(0.1698) + output[4](18.4609) * 1.0000 => 18.6307
activation[8] = self(0.1698) + output[5](18.4609) * 1.0000 => 18.6307
activation[9] = self(0.1698) + output[3](18.4609) * 0.7500 => 14.0155
activation[9] = self(14.0155) + output[4](18.4609) * 0.2500 => 18.6307
activation[10] = self(0.1698) + output[4](18.4609) * 0.2500 => 4.7850
activation[10] = self(4.7850) + output[5](18.4609) * 0.7500 => 18.6307
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(35.7040) > threshold(0.0000)? ==> 35.7040
neuronOutput[4]: activation(35.7040) > threshold(0.0000)? ==> 35.7040
neuronOutput[5]: activation(35.7040) > threshold(0.0000)? ==> 35.7040
neuronOutput[6]: activation(18.6307) > threshold(0.0000)? ==> 18.6307
neuronOutput[7]: activation(18.6307) > threshold(0.0000)? ==> 18.6307
neuronOutput[8]: activation(18.6307) > threshold(0.0000)? ==> 18.6307
neuronOutput[9]: activation(18.6307) > threshold(0.0000)? ==> 18.6307
neuronOutput[10]: activation(18.6307) > threshold(0.0000)? ==> 18.6307
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](18.6307)
networkOutput[2] := neuronOutput[10](18.6307)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(35.7040) * weight[3,3](0.1000) => 3.5704
activation[4] = self(35.7040) * weight[4,4](0.1000) => 3.5704
activation[5] = self(35.7040) * weight[5,5](0.1000) => 3.5704
activation[6] = self(18.6307) * weight[6,6](0.1000) => 1.8631
activation[7] = self(18.6307) * weight[7,7](0.1000) => 1.8631
activation[8] = self(18.6307) * weight[8,8](0.1000) => 1.8631
activation[9] = self(18.6307) * weight[9,9](0.1000) => 1.8631
activation[10] = self(18.6307) * weight[10,10](0.1000) => 1.8631
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(3.5704) + output[1](35.5556) * 1.0000 => 39.1260
activation[3] = self(39.1260) + output[7](18.6307) * -0.5000 => 29.8106
activation[3] = self(29.8106) + output[8](18.6307) * -0.5000 => 20.4953
activation[4] = self(3.5704) + output[1](35.5556) * 0.5000 => 21.3482
activation[4] = self(21.3482) + output[2](35.5556) * 0.5000 => 39.1260
activation[4] = self(39.1260) + output[6](18.6307) * -0.5000 => 29.8106
activation[4] = self(29.8106) + output[8](18.6307) * -0.5000 => 20.4953
activation[5] = self(3.5704) + output[2](35.5556) * 1.0000 => 39.1260
activation[5] = self(39.1260) + output[6](18.6307) * -0.5000 => 29.8106
activation[5] = self(29.8106) + output[7](18.6307) * -0.5000 => 20.4953
activation[6] = self(1.8631) + output[3](35.7040) * 1.0000 => 37.5670
activation[7] = self(1.8631) + output[4](35.7040) * 1.0000 => 37.5670
activation[8] = self(1.8631) + output[5](35.7040) * 1.0000 => 37.5670
activation[9] = self(1.8631) + output[3](35.7040) * 0.7500 => 28.6410
activation[9] = self(28.6410) + output[4](35.7040) * 0.2500 => 37.5670
activation[10] = self(1.8631) + output[4](35.7040) * 0.2500 => 10.7891
activation[10] = self(10.7891) + output[5](35.7040) * 0.7500 => 37.5670
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(20.4953) > threshold(0.0000)? ==> 20.4953
neuronOutput[4]: activation(20.4953) > threshold(0.0000)? ==> 20.4953
neuronOutput[5]: activation(20.4953) > threshold(0.0000)? ==> 20.4953
neuronOutput[6]: activation(37.5670) > threshold(0.0000)? ==> 37.5670
neuronOutput[7]: activation(37.5670) > threshold(0.0000)? ==> 37.5670
neuronOutput[8]: activation(37.5670) > threshold(0.0000)? ==> 37.5670
neuronOutput[9]: activation(37.5670) > threshold(0.0000)? ==> 37.5670
neuronOutput[10]: activation(37.5670) > threshold(0.0000)? ==> 37.5670
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](37.5670)
networkOutput[2] := neuronOutput[10](37.5670)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(20.4953) * weight[3,3](0.1000) => 2.0495
activation[4] = self(20.4953) * weight[4,4](0.1000) => 2.0495
activation[5] = self(20.4953) * weight[5,5](0.1000) => 2.0495
activation[6] = self(37.5670) * weight[6,6](0.1000) => 3.7567
activation[7] = self(37.5670) * weight[7,7](0.1000) => 3.7567
activation[8] = self(37.5670) * weight[8,8](0.1000) => 3.7567
activation[9] = self(37.5670) * weight[9,9](0.1000) => 3.7567
activation[10] = self(37.5670) * weight[10,10](0.1000) => 3.7567
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(2.0495) + output[1](35.5556) * 1.0000 => 37.6051
activation[3] = self(37.6051) + output[7](37.5670) * -0.5000 => 18.8216
activation[3] = self(18.8216) + output[8](37.5670) * -0.5000 => 0.0381
activation[4] = self(2.0495) + output[1](35.5556) * 0.5000 => 19.8273
activation[4] = self(19.8273) + output[2](35.5556) * 0.5000 => 37.6051
activation[4] = self(37.6051) + output[6](37.5670) * -0.5000 => 18.8216
activation[4] = self(18.8216) + output[8](37.5670) * -0.5000 => 0.0381
activation[5] = self(2.0495) + output[2](35.5556) * 1.0000 => 37.6051
activation[5] = self(37.6051) + output[6](37.5670) * -0.5000 => 18.8216
activation[5] = self(18.8216) + output[7](37.5670) * -0.5000 => 0.0381
activation[6] = self(3.7567) + output[3](20.4953) * 1.0000 => 24.2520
activation[7] = self(3.7567) + output[4](20.4953) * 1.0000 => 24.2520
activation[8] = self(3.7567) + output[5](20.4953) * 1.0000 => 24.2520
activation[9] = self(3.7567) + output[3](20.4953) * 0.7500 => 19.1281
activation[9] = self(19.1281) + output[4](20.4953) * 0.2500 => 24.2520
activation[10] = self(3.7567) + output[4](20.4953) * 0.2500 => 8.8805
activation[10] = self(8.8805) + output[5](20.4953) * 0.7500 => 24.2520
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(0.0381) > threshold(0.0000)? ==> 0.0381
neuronOutput[4]: activation(0.0381) > threshold(0.0000)? ==> 0.0381
neuronOutput[5]: activation(0.0381) > threshold(0.0000)? ==> 0.0381
neuronOutput[6]: activation(24.2520) > threshold(0.0000)? ==> 24.2520
neuronOutput[7]: activation(24.2520) > threshold(0.0000)? ==> 24.2520
neuronOutput[8]: activation(24.2520) > threshold(0.0000)? ==> 24.2520
neuronOutput[9]: activation(24.2520) > threshold(0.0000)? ==> 24.2520
neuronOutput[10]: activation(24.2520) > threshold(0.0000)? ==> 24.2520
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](24.2520)
networkOutput[2] := neuronOutput[10](24.2520)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(0.0381) * weight[3,3](0.1000) => 0.0038
activation[4] = self(0.0381) * weight[4,4](0.1000) => 0.0038
activation[5] = self(0.0381) * weight[5,5](0.1000) => 0.0038
activation[6] = self(24.2520) * weight[6,6](0.1000) => 2.4252
activation[7] = self(24.2520) * weight[7,7](0.1000) => 2.4252
activation[8] = self(24.2520) * weight[8,8](0.1000) => 2.4252
activation[9] = self(24.2520) * weight[9,9](0.1000) => 2.4252
activation[10] = self(24.2520) * weight[10,10](0.1000) => 2.4252
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(0.0038) + output[1](35.5556) * 1.0000 => 35.5594
activation[3] = self(35.5594) + output[7](24.2520) * -0.5000 => 23.4334
activation[3] = self(23.4334) + output[8](24.2520) * -0.5000 => 11.3074
activation[4] = self(0.0038) + output[1](35.5556) * 0.5000 => 17.7816
activation[4] = self(17.7816) + output[2](35.5556) * 0.5000 => 35.5594
activation[4] = self(35.5594) + output[6](24.2520) * -0.5000 => 23.4334
activation[4] = self(23.4334) + output[8](24.2520) * -0.5000 => 11.3074
activation[5] = self(0.0038) + output[2](35.5556) * 1.0000 => 35.5594
activation[5] = self(35.5594) + output[6](24.2520) * -0.5000 => 23.4334
activation[5] = self(23.4334) + output[7](24.2520) * -0.5000 => 11.3074
activation[6] = self(2.4252) + output[3](0.0381) * 1.0000 => 2.4633
activation[7] = self(2.4252) + output[4](0.0381) * 1.0000 => 2.4633
activation[8] = self(2.4252) + output[5](0.0381) * 1.0000 => 2.4633
activation[9] = self(2.4252) + output[3](0.0381) * 0.7500 => 2.4537
activation[9] = self(2.4537) + output[4](0.0381) * 0.2500 => 2.4633
activation[10] = self(2.4252) + output[4](0.0381) * 0.2500 => 2.4347
activation[10] = self(2.4347) + output[5](0.0381) * 0.7500 => 2.4633
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(11.3074) > threshold(0.0000)? ==> 11.3074
neuronOutput[4]: activation(11.3074) > threshold(0.0000)? ==> 11.3074
neuronOutput[5]: activation(11.3074) > threshold(0.0000)? ==> 11.3074
neuronOutput[6]: activation(2.4633) > threshold(0.0000)? ==> 2.4633
neuronOutput[7]: activation(2.4633) > threshold(0.0000)? ==> 2.4633
neuronOutput[8]: activation(2.4633) > threshold(0.0000)? ==> 2.4633
neuronOutput[9]: activation(2.4633) > threshold(0.0000)? ==> 2.4633
neuronOutput[10]: activation(2.4633) > threshold(0.0000)? ==> 2.4633
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](2.4633)
networkOutput[2] := neuronOutput[10](2.4633)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(11.3074) * weight[3,3](0.1000) => 1.1307
activation[4] = self(11.3074) * weight[4,4](0.1000) => 1.1307
activation[5] = self(11.3074) * weight[5,5](0.1000) => 1.1307
activation[6] = self(2.4633) * weight[6,6](0.1000) => 0.2463
activation[7] = self(2.4633) * weight[7,7](0.1000) => 0.2463
activation[8] = self(2.4633) * weight[8,8](0.1000) => 0.2463
activation[9] = self(2.4633) * weight[9,9](0.1000) => 0.2463
activation[10] = self(2.4633) * weight[10,10](0.1000) => 0.2463
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(1.1307) + output[1](35.5556) * 1.0000 => 36.6863
activation[3] = self(36.6863) + output[7](2.4633) * -0.5000 => 35.4547
activation[3] = self(35.4547) + output[8](2.4633) * -0.5000 => 34.2230
activation[4] = self(1.1307) + output[1](35.5556) * 0.5000 => 18.9085
activation[4] = self(18.9085) + output[2](35.5556) * 0.5000 => 36.6863
activation[4] = self(36.6863) + output[6](2.4633) * -0.5000 => 35.4547
activation[4] = self(35.4547) + output[8](2.4633) * -0.5000 => 34.2230
activation[5] = self(1.1307) + output[2](35.5556) * 1.0000 => 36.6863
activation[5] = self(36.6863) + output[6](2.4633) * -0.5000 => 35.4547
activation[5] = self(35.4547) + output[7](2.4633) * -0.5000 => 34.2230
activation[6] = self(0.2463) + output[3](11.3074) * 1.0000 => 11.5537
activation[7] = self(0.2463) + output[4](11.3074) * 1.0000 => 11.5537
activation[8] = self(0.2463) + output[5](11.3074) * 1.0000 => 11.5537
activation[9] = self(0.2463) + output[3](11.3074) * 0.7500 => 8.7269
activation[9] = self(8.7269) + output[4](11.3074) * 0.2500 => 11.5537
activation[10] = self(0.2463) + output[4](11.3074) * 0.2500 => 3.0732
activation[10] = self(3.0732) + output[5](11.3074) * 0.7500 => 11.5537
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(34.2230) > threshold(0.0000)? ==> 34.2230
neuronOutput[4]: activation(34.2230) > threshold(0.0000)? ==> 34.2230
neuronOutput[5]: activation(34.2230) > threshold(0.0000)? ==> 34.2230
neuronOutput[6]: activation(11.5537) > threshold(0.0000)? ==> 11.5537
neuronOutput[7]: activation(11.5537) > threshold(0.0000)? ==> 11.5537
neuronOutput[8]: activation(11.5537) > threshold(0.0000)? ==> 11.5537
neuronOutput[9]: activation(11.5537) > threshold(0.0000)? ==> 11.5537
neuronOutput[10]: activation(11.5537) > threshold(0.0000)? ==> 11.5537
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](11.5537)
networkOutput[2] := neuronOutput[10](11.5537)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(34.2230) * weight[3,3](0.1000) => 3.4223
activation[4] = self(34.2230) * weight[4,4](0.1000) => 3.4223
activation[5] = self(34.2230) * weight[5,5](0.1000) => 3.4223
activation[6] = self(11.5537) * weight[6,6](0.1000) => 1.1554
activation[7] = self(11.5537) * weight[7,7](0.1000) => 1.1554
activation[8] = self(11.5537) * weight[8,8](0.1000) => 1.1554
activation[9] = self(11.5537) * weight[9,9](0.1000) => 1.1554
activation[10] = self(11.5537) * weight[10,10](0.1000) => 1.1554
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(3.4223) + output[1](35.5556) * 1.0000 => 38.9779
activation[3] = self(38.9779) + output[7](11.5537) * -0.5000 => 33.2010
activation[3] = self(33.2010) + output[8](11.5537) * -0.5000 => 27.4241
activation[4] = self(3.4223) + output[1](35.5556) * 0.5000 => 21.2001
activation[4] = self(21.2001) + output[2](35.5556) * 0.5000 => 38.9779
activation[4] = self(38.9779) + output[6](11.5537) * -0.5000 => 33.2010
activation[4] = self(33.2010) + output[8](11.5537) * -0.5000 => 27.4241
activation[5] = self(3.4223) + output[2](35.5556) * 1.0000 => 38.9779
activation[5] = self(38.9779) + output[6](11.5537) * -0.5000 => 33.2010
activation[5] = self(33.2010) + output[7](11.5537) * -0.5000 => 27.4241
activation[6] = self(1.1554) + output[3](34.2230) * 1.0000 => 35.3784
activation[7] = self(1.1554) + output[4](34.2230) * 1.0000 => 35.3784
activation[8] = self(1.1554) + output[5](34.2230) * 1.0000 => 35.3784
activation[9] = self(1.1554) + output[3](34.2230) * 0.7500 => 26.8227
activation[9] = self(26.8227) + output[4](34.2230) * 0.2500 => 35.3784
activation[10] = self(1.1554) + output[4](34.2230) * 0.2500 => 9.7111
activation[10] = self(9.7111) + output[5](34.2230) * 0.7500 => 35.3784
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(27.4241) > threshold(0.0000)? ==> 27.4241
neuronOutput[4]: activation(27.4241) > threshold(0.0000)? ==> 27.4241
neuronOutput[5]: activation(27.4241) > threshold(0.0000)? ==> 27.4241
neuronOutput[6]: activation(35.3784) > threshold(0.0000)? ==> 35.3784
neuronOutput[7]: activation(35.3784) > threshold(0.0000)? ==> 35.3784
neuronOutput[8]: activation(35.3784) > threshold(0.0000)? ==> 35.3784
neuronOutput[9]: activation(35.3784) > threshold(0.0000)? ==> 35.3784
neuronOutput[10]: activation(35.3784) > threshold(0.0000)? ==> 35.3784
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](35.3784)
networkOutput[2] := neuronOutput[10](35.3784)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(27.4241) * weight[3,3](0.1000) => 2.7424
activation[4] = self(27.4241) * weight[4,4](0.1000) => 2.7424
activation[5] = self(27.4241) * weight[5,5](0.1000) => 2.7424
activation[6] = self(35.3784) * weight[6,6](0.1000) => 3.5378
activation[7] = self(35.3784) * weight[7,7](0.1000) => 3.5378
activation[8] = self(35.3784) * weight[8,8](0.1000) => 3.5378
activation[9] = self(35.3784) * weight[9,9](0.1000) => 3.5378
activation[10] = self(35.3784) * weight[10,10](0.1000) => 3.5378
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(2.7424) + output[1](35.5556) * 1.0000 => 38.2980
activation[3] = self(38.2980) + output[7](35.3784) * -0.5000 => 20.6088
activation[3] = self(20.6088) + output[8](35.3784) * -0.5000 => 2.9196
activation[4] = self(2.7424) + output[1](35.5556) * 0.5000 => 20.5202
activation[4] = self(20.5202) + output[2](35.5556) * 0.5000 => 38.2980
activation[4] = self(38.2980) + output[6](35.3784) * -0.5000 => 20.6088
activation[4] = self(20.6088) + output[8](35.3784) * -0.5000 => 2.9196
activation[5] = self(2.7424) + output[2](35.5556) * 1.0000 => 38.2980
activation[5] = self(38.2980) + output[6](35.3784) * -0.5000 => 20.6088
activation[5] = self(20.6088) + output[7](35.3784) * -0.5000 => 2.9196
activation[6] = self(3.5378) + output[3](27.4241) * 1.0000 => 30.9620
activation[7] = self(3.5378) + output[4](27.4241) * 1.0000 => 30.9620
activation[8] = self(3.5378) + output[5](27.4241) * 1.0000 => 30.9620
activation[9] = self(3.5378) + output[3](27.4241) * 0.7500 => 24.1059
activation[9] = self(24.1059) + output[4](27.4241) * 0.2500 => 30.9620
activation[10] = self(3.5378) + output[4](27.4241) * 0.2500 => 10.3939
activation[10] = self(10.3939) + output[5](27.4241) * 0.7500 => 30.9620
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(2.9196) > threshold(0.0000)? ==> 2.9196
neuronOutput[4]: activation(2.9196) > threshold(0.0000)? ==> 2.9196
neuronOutput[5]: activation(2.9196) > threshold(0.0000)? ==> 2.9196
neuronOutput[6]: activation(30.9620) > threshold(0.0000)? ==> 30.9620
neuronOutput[7]: activation(30.9620) > threshold(0.0000)? ==> 30.9620
neuronOutput[8]: activation(30.9620) > threshold(0.0000)? ==> 30.9620
neuronOutput[9]: activation(30.9620) > threshold(0.0000)? ==> 30.9620
neuronOutput[10]: activation(30.9620) > threshold(0.0000)? ==> 30.9620
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](30.9620)
networkOutput[2] := neuronOutput[10](30.9620)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(2.9196) * weight[3,3](0.1000) => 0.2920
activation[4] = self(2.9196) * weight[4,4](0.1000) => 0.2920
activation[5] = self(2.9196) * weight[5,5](0.1000) => 0.2920
activation[6] = self(30.9620) * weight[6,6](0.1000) => 3.0962
activation[7] = self(30.9620) * weight[7,7](0.1000) => 3.0962
activation[8] = self(30.9620) * weight[8,8](0.1000) => 3.0962
activation[9] = self(30.9620) * weight[9,9](0.1000) => 3.0962
activation[10] = self(30.9620) * weight[10,10](0.1000) => 3.0962
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(0.2920) + output[1](35.5556) * 1.0000 => 35.8475
activation[3] = self(35.8475) + output[7](30.9620) * -0.5000 => 20.3665
activation[3] = self(20.3665) + output[8](30.9620) * -0.5000 => 4.8856
activation[4] = self(0.2920) + output[1](35.5556) * 0.5000 => 18.0697
activation[4] = self(18.0697) + output[2](35.5556) * 0.5000 => 35.8475
activation[4] = self(35.8475) + output[6](30.9620) * -0.5000 => 20.3665
activation[4] = self(20.3665) + output[8](30.9620) * -0.5000 => 4.8856
activation[5] = self(0.2920) + output[2](35.5556) * 1.0000 => 35.8475
activation[5] = self(35.8475) + output[6](30.9620) * -0.5000 => 20.3665
activation[5] = self(20.3665) + output[7](30.9620) * -0.5000 => 4.8856
activation[6] = self(3.0962) + output[3](2.9196) * 1.0000 => 6.0158
activation[7] = self(3.0962) + output[4](2.9196) * 1.0000 => 6.0158
activation[8] = self(3.0962) + output[5](2.9196) * 1.0000 => 6.0158
activation[9] = self(3.0962) + output[3](2.9196) * 0.7500 => 5.2859
activation[9] = self(5.2859) + output[4](2.9196) * 0.2500 => 6.0158
activation[10] = self(3.0962) + output[4](2.9196) * 0.2500 => 3.8261
activation[10] = self(3.8261) + output[5](2.9196) * 0.7500 => 6.0158
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(4.8856) > threshold(0.0000)? ==> 4.8856
neuronOutput[4]: activation(4.8856) > threshold(0.0000)? ==> 4.8856
neuronOutput[5]: activation(4.8856) > threshold(0.0000)? ==> 4.8856
neuronOutput[6]: activation(6.0158) > threshold(0.0000)? ==> 6.0158
neuronOutput[7]: activation(6.0158) > threshold(0.0000)? ==> 6.0158
neuronOutput[8]: activation(6.0158) > threshold(0.0000)? ==> 6.0158
neuronOutput[9]: activation(6.0158) > threshold(0.0000)? ==> 6.0158
neuronOutput[10]: activation(6.0158) > threshold(0.0000)? ==> 6.0158
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](6.0158)
networkOutput[2] := neuronOutput[10](6.0158)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(4.8856) * weight[3,3](0.1000) => 0.4886
activation[4] = self(4.8856) * weight[4,4](0.1000) => 0.4886
activation[5] = self(4.8856) * weight[5,5](0.1000) => 0.4886
activation[6] = self(6.0158) * weight[6,6](0.1000) => 0.6016
activation[7] = self(6.0158) * weight[7,7](0.1000) => 0.6016
activation[8] = self(6.0158) * weight[8,8](0.1000) => 0.6016
activation[9] = self(6.0158) * weight[9,9](0.1000) => 0.6016
activation[10] = self(6.0158) * weight[10,10](0.1000) => 0.6016
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(0.4886) + output[1](35.5556) * 1.0000 => 36.0441
activation[3] = self(36.0441) + output[7](6.0158) * -0.5000 => 33.0362
activation[3] = self(33.0362) + output[8](6.0158) * -0.5000 => 30.0284
activation[4] = self(0.4886) + output[1](35.5556) * 0.5000 => 18.2663
activation[4] = self(18.2663) + output[2](35.5556) * 0.5000 => 36.0441
activation[4] = self(36.0441) + output[6](6.0158) * -0.5000 => 33.0362
activation[4] = self(33.0362) + output[8](6.0158) * -0.5000 => 30.0284
activation[5] = self(0.4886) + output[2](35.5556) * 1.0000 => 36.0441
activation[5] = self(36.0441) + output[6](6.0158) * -0.5000 => 33.0362
activation[5] = self(33.0362) + output[7](6.0158) * -0.5000 => 30.0284
activation[6] = self(0.6016) + output[3](4.8856) * 1.0000 => 5.4871
activation[7] = self(0.6016) + output[4](4.8856) * 1.0000 => 5.4871
activation[8] = self(0.6016) + output[5](4.8856) * 1.0000 => 5.4871
activation[9] = self(0.6016) + output[3](4.8856) * 0.7500 => 4.2657
activation[9] = self(4.2657) + output[4](4.8856) * 0.2500 => 5.4871
activation[10] = self(0.6016) + output[4](4.8856) * 0.2500 => 1.8230
activation[10] = self(1.8230) + output[5](4.8856) * 0.7500 => 5.4871
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(30.0284) > threshold(0.0000)? ==> 30.0284
neuronOutput[4]: activation(30.0284) > threshold(0.0000)? ==> 30.0284
neuronOutput[5]: activation(30.0284) > threshold(0.0000)? ==> 30.0284
neuronOutput[6]: activation(5.4871) > threshold(0.0000)? ==> 5.4871
neuronOutput[7]: activation(5.4871) > threshold(0.0000)? ==> 5.4871
neuronOutput[8]: activation(5.4871) > threshold(0.0000)? ==> 5.4871
neuronOutput[9]: activation(5.4871) > threshold(0.0000)? ==> 5.4871
neuronOutput[10]: activation(5.4871) > threshold(0.0000)? ==> 5.4871
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](5.4871)
networkOutput[2] := neuronOutput[10](5.4871)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(30.0284) * weight[3,3](0.1000) => 3.0028
activation[4] = self(30.0284) * weight[4,4](0.1000) => 3.0028
activation[5] = self(30.0284) * weight[5,5](0.1000) => 3.0028
activation[6] = self(5.4871) * weight[6,6](0.1000) => 0.5487
activation[7] = self(5.4871) * weight[7,7](0.1000) => 0.5487
activation[8] = self(5.4871) * weight[8,8](0.1000) => 0.5487
activation[9] = self(5.4871) * weight[9,9](0.1000) => 0.5487
activation[10] = self(5.4871) * weight[10,10](0.1000) => 0.5487
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(3.0028) + output[1](35.5556) * 1.0000 => 38.5584
activation[3] = self(38.5584) + output[7](5.4871) * -0.5000 => 35.8148
activation[3] = self(35.8148) + output[8](5.4871) * -0.5000 => 33.0713
activation[4] = self(3.0028) + output[1](35.5556) * 0.5000 => 20.7806
activation[4] = self(20.7806) + output[2](35.5556) * 0.5000 => 38.5584
activation[4] = self(38.5584) + output[6](5.4871) * -0.5000 => 35.8148
activation[4] = self(35.8148) + output[8](5.4871) * -0.5000 => 33.0713
activation[5] = self(3.0028) + output[2](35.5556) * 1.0000 => 38.5584
activation[5] = self(38.5584) + output[6](5.4871) * -0.5000 => 35.8148
activation[5] = self(35.8148) + output[7](5.4871) * -0.5000 => 33.0713
activation[6] = self(0.5487) + output[3](30.0284) * 1.0000 => 30.5771
activation[7] = self(0.5487) + output[4](30.0284) * 1.0000 => 30.5771
activation[8] = self(0.5487) + output[5](30.0284) * 1.0000 => 30.5771
activation[9] = self(0.5487) + output[3](30.0284) * 0.7500 => 23.0700
activation[9] = self(23.0700) + output[4](30.0284) * 0.2500 => 30.5771
activation[10] = self(0.5487) + output[4](30.0284) * 0.2500 => 8.0558
activation[10] = self(8.0558) + output[5](30.0284) * 0.7500 => 30.5771
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(33.0713) > threshold(0.0000)? ==> 33.0713
neuronOutput[4]: activation(33.0713) > threshold(0.0000)? ==> 33.0713
neuronOutput[5]: activation(33.0713) > threshold(0.0000)? ==> 33.0713
neuronOutput[6]: activation(30.5771) > threshold(0.0000)? ==> 30.5771
neuronOutput[7]: activation(30.5771) > threshold(0.0000)? ==> 30.5771
neuronOutput[8]: activation(30.5771) > threshold(0.0000)? ==> 30.5771
neuronOutput[9]: activation(30.5771) > threshold(0.0000)? ==> 30.5771
neuronOutput[10]: activation(30.5771) > threshold(0.0000)? ==> 30.5771
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](30.5771)
networkOutput[2] := neuronOutput[10](30.5771)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(33.0713) * weight[3,3](0.1000) => 3.3071
activation[4] = self(33.0713) * weight[4,4](0.1000) => 3.3071
activation[5] = self(33.0713) * weight[5,5](0.1000) => 3.3071
activation[6] = self(30.5771) * weight[6,6](0.1000) => 3.0577
activation[7] = self(30.5771) * weight[7,7](0.1000) => 3.0577
activation[8] = self(30.5771) * weight[8,8](0.1000) => 3.0577
activation[9] = self(30.5771) * weight[9,9](0.1000) => 3.0577
activation[10] = self(30.5771) * weight[10,10](0.1000) => 3.0577
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(3.3071) + output[1](35.5556) * 1.0000 => 38.8627
activation[3] = self(38.8627) + output[7](30.5771) * -0.5000 => 23.5742
activation[3] = self(23.5742) + output[8](30.5771) * -0.5000 => 8.2856
activation[4] = self(3.3071) + output[1](35.5556) * 0.5000 => 21.0849
activation[4] = self(21.0849) + output[2](35.5556) * 0.5000 => 38.8627
activation[4] = self(38.8627) + output[6](30.5771) * -0.5000 => 23.5742
activation[4] = self(23.5742) + output[8](30.5771) * -0.5000 => 8.2856
activation[5] = self(3.3071) + output[2](35.5556) * 1.0000 => 38.8627
activation[5] = self(38.8627) + output[6](30.5771) * -0.5000 => 23.5742
activation[5] = self(23.5742) + output[7](30.5771) * -0.5000 => 8.2856
activation[6] = self(3.0577) + output[3](33.0713) * 1.0000 => 36.1290
activation[7] = self(3.0577) + output[4](33.0713) * 1.0000 => 36.1290
activation[8] = self(3.0577) + output[5](33.0713) * 1.0000 => 36.1290
activation[9] = self(3.0577) + output[3](33.0713) * 0.7500 => 27.8612
activation[9] = self(27.8612) + output[4](33.0713) * 0.2500 => 36.1290
activation[10] = self(3.0577) + output[4](33.0713) * 0.2500 => 11.3255
activation[10] = self(11.3255) + output[5](33.0713) * 0.7500 => 36.1290
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(8.2856) > threshold(0.0000)? ==> 8.2856
neuronOutput[4]: activation(8.2856) > threshold(0.0000)? ==> 8.2856
neuronOutput[5]: activation(8.2856) > threshold(0.0000)? ==> 8.2856
neuronOutput[6]: activation(36.1290) > threshold(0.0000)? ==> 36.1290
neuronOutput[7]: activation(36.1290) > threshold(0.0000)? ==> 36.1290
neuronOutput[8]: activation(36.1290) > threshold(0.0000)? ==> 36.1290
neuronOutput[9]: activation(36.1290) > threshold(0.0000)? ==> 36.1290
neuronOutput[10]: activation(36.1290) > threshold(0.0000)? ==> 36.1290
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](36.1290)
networkOutput[2] := neuronOutput[10](36.1290)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(8.2856) * weight[3,3](0.1000) => 0.8286
activation[4] = self(8.2856) * weight[4,4](0.1000) => 0.8286
activation[5] = self(8.2856) * weight[5,5](0.1000) => 0.8286
activation[6] = self(36.1290) * weight[6,6](0.1000) => 3.6129
activation[7] = self(36.1290) * weight[7,7](0.1000) => 3.6129
activation[8] = self(36.1290) * weight[8,8](0.1000) => 3.6129
activation[9] = self(36.1290) * weight[9,9](0.1000) => 3.6129
activation[10] = self(36.1290) * weight[10,10](0.1000) => 3.6129
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(0.8286) + output[1](35.5556) * 1.0000 => 36.3841
activation[3] = self(36.3841) + output[7](36.1290) * -0.5000 => 18.3196
activation[3] = self(18.3196) + output[8](36.1290) * -0.5000 => 0.2551
activation[4] = self(0.8286) + output[1](35.5556) * 0.5000 => 18.6063
activation[4] = self(18.6063) + output[2](35.5556) * 0.5000 => 36.3841
activation[4] = self(36.3841) + output[6](36.1290) * -0.5000 => 18.3196
activation[4] = self(18.3196) + output[8](36.1290) * -0.5000 => 0.2551
activation[5] = self(0.8286) + output[2](35.5556) * 1.0000 => 36.3841
activation[5] = self(36.3841) + output[6](36.1290) * -0.5000 => 18.3196
activation[5] = self(18.3196) + output[7](36.1290) * -0.5000 => 0.2551
activation[6] = self(3.6129) + output[3](8.2856) * 1.0000 => 11.8985
activation[7] = self(3.6129) + output[4](8.2856) * 1.0000 => 11.8985
activation[8] = self(3.6129) + output[5](8.2856) * 1.0000 => 11.8985
activation[9] = self(3.6129) + output[3](8.2856) * 0.7500 => 9.8271
activation[9] = self(9.8271) + output[4](8.2856) * 0.2500 => 11.8985
activation[10] = self(3.6129) + output[4](8.2856) * 0.2500 => 5.6843
activation[10] = self(5.6843) + output[5](8.2856) * 0.7500 => 11.8985
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(0.2551) > threshold(0.0000)? ==> 0.2551
neuronOutput[4]: activation(0.2551) > threshold(0.0000)? ==> 0.2551
neuronOutput[5]: activation(0.2551) > threshold(0.0000)? ==> 0.2551
neuronOutput[6]: activation(11.8985) > threshold(0.0000)? ==> 11.8985
neuronOutput[7]: activation(11.8985) > threshold(0.0000)? ==> 11.8985
neuronOutput[8]: activation(11.8985) > threshold(0.0000)? ==> 11.8985
neuronOutput[9]: activation(11.8985) > threshold(0.0000)? ==> 11.8985
neuronOutput[10]: activation(11.8985) > threshold(0.0000)? ==> 11.8985
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](11.8985)
networkOutput[2] := neuronOutput[10](11.8985)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(0.2551) * weight[3,3](0.1000) => 0.0255
activation[4] = self(0.2551) * weight[4,4](0.1000) => 0.0255
activation[5] = self(0.2551) * weight[5,5](0.1000) => 0.0255
activation[6] = self(11.8985) * weight[6,6](0.1000) => 1.1899
activation[7] = self(11.8985) * weight[7,7](0.1000) => 1.1899
activation[8] = self(11.8985) * weight[8,8](0.1000) => 1.1899
activation[9] = self(11.8985) * weight[9,9](0.1000) => 1.1899
activation[10] = self(11.8985) * weight[10,10](0.1000) => 1.1899
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(0.0255) + output[1](35.5556) * 1.0000 => 35.5811
activation[3] = self(35.5811) + output[7](11.8985) * -0.5000 => 29.6318
activation[3] = self(29.6318) + output[8](11.8985) * -0.5000 => 23.6826
activation[4] = self(0.0255) + output[1](35.5556) * 0.5000 => 17.8033
activation[4] = self(17.8033) + output[2](35.5556) * 0.5000 => 35.5811
activation[4] = self(35.5811) + output[6](11.8985) * -0.5000 => 29.6318
activation[4] = self(29.6318) + output[8](11.8985) * -0.5000 => 23.6826
activation[5] = self(0.0255) + output[2](35.5556) * 1.0000 => 35.5811
activation[5] = self(35.5811) + output[6](11.8985) * -0.5000 => 29.6318
activation[5] = self(29.6318) + output[7](11.8985) * -0.5000 => 23.6826
activation[6] = self(1.1899) + output[3](0.2551) * 1.0000 => 1.4450
activation[7] = self(1.1899) + output[4](0.2551) * 1.0000 => 1.4450
activation[8] = self(1.1899) + output[5](0.2551) * 1.0000 => 1.4450
activation[9] = self(1.1899) + output[3](0.2551) * 0.7500 => 1.3812
activation[9] = self(1.3812) + output[4](0.2551) * 0.2500 => 1.4450
activation[10] = self(1.1899) + output[4](0.2551) * 0.2500 => 1.2536
activation[10] = self(1.2536) + output[5](0.2551) * 0.7500 => 1.4450
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(23.6826) > threshold(0.0000)? ==> 23.6826
neuronOutput[4]: activation(23.6826) > threshold(0.0000)? ==> 23.6826
neuronOutput[5]: activation(23.6826) > threshold(0.0000)? ==> 23.6826
neuronOutput[6]: activation(1.4450) > threshold(0.0000)? ==> 1.4450
neuronOutput[7]: activation(1.4450) > threshold(0.0000)? ==> 1.4450
neuronOutput[8]: activation(1.4450) > threshold(0.0000)? ==> 1.4450
neuronOutput[9]: activation(1.4450) > threshold(0.0000)? ==> 1.4450
neuronOutput[10]: activation(1.4450) > threshold(0.0000)? ==> 1.4450
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](1.4450)
networkOutput[2] := neuronOutput[10](1.4450)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(23.6826) * weight[3,3](0.1000) => 2.3683
activation[4] = self(23.6826) * weight[4,4](0.1000) => 2.3683
activation[5] = self(23.6826) * weight[5,5](0.1000) => 2.3683
activation[6] = self(1.4450) * weight[6,6](0.1000) => 0.1445
activation[7] = self(1.4450) * weight[7,7](0.1000) => 0.1445
activation[8] = self(1.4450) * weight[8,8](0.1000) => 0.1445
activation[9] = self(1.4450) * weight[9,9](0.1000) => 0.1445
activation[10] = self(1.4450) * weight[10,10](0.1000) => 0.1445
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(2.3683) + output[1](35.5556) * 1.0000 => 37.9238
activation[3] = self(37.9238) + output[7](1.4450) * -0.5000 => 37.2013
activation[3] = self(37.2013) + output[8](1.4450) * -0.5000 => 36.4788
activation[4] = self(2.3683) + output[1](35.5556) * 0.5000 => 20.1460
activation[4] = self(20.1460) + output[2](35.5556) * 0.5000 => 37.9238
activation[4] = self(37.9238) + output[6](1.4450) * -0.5000 => 37.2013
activation[4] = self(37.2013) + output[8](1.4450) * -0.5000 => 36.4788
activation[5] = self(2.3683) + output[2](35.5556) * 1.0000 => 37.9238
activation[5] = self(37.9238) + output[6](1.4450) * -0.5000 => 37.2013
activation[5] = self(37.2013) + output[7](1.4450) * -0.5000 => 36.4788
activation[6] = self(0.1445) + output[3](23.6826) * 1.0000 => 23.8271
activation[7] = self(0.1445) + output[4](23.6826) * 1.0000 => 23.8271
activation[8] = self(0.1445) + output[5](23.6826) * 1.0000 => 23.8271
activation[9] = self(0.1445) + output[3](23.6826) * 0.7500 => 17.9064
activation[9] = self(17.9064) + output[4](23.6826) * 0.2500 => 23.8271
activation[10] = self(0.1445) + output[4](23.6826) * 0.2500 => 6.0651
activation[10] = self(6.0651) + output[5](23.6826) * 0.7500 => 23.8271
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(36.4788) > threshold(0.0000)? ==> 36.4788
neuronOutput[4]: activation(36.4788) > threshold(0.0000)? ==> 36.4788
neuronOutput[5]: activation(36.4788) > threshold(0.0000)? ==> 36.4788
neuronOutput[6]: activation(23.8271) > threshold(0.0000)? ==> 23.8271
neuronOutput[7]: activation(23.8271) > threshold(0.0000)? ==> 23.8271
neuronOutput[8]: activation(23.8271) > threshold(0.0000)? ==> 23.8271
neuronOutput[9]: activation(23.8271) > threshold(0.0000)? ==> 23.8271
neuronOutput[10]: activation(23.8271) > threshold(0.0000)? ==> 23.8271
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](23.8271)
networkOutput[2] := neuronOutput[10](23.8271)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(36.4788) * weight[3,3](0.1000) => 3.6479
activation[4] = self(36.4788) * weight[4,4](0.1000) => 3.6479
activation[5] = self(36.4788) * weight[5,5](0.1000) => 3.6479
activation[6] = self(23.8271) * weight[6,6](0.1000) => 2.3827
activation[7] = self(23.8271) * weight[7,7](0.1000) => 2.3827
activation[8] = self(23.8271) * weight[8,8](0.1000) => 2.3827
activation[9] = self(23.8271) * weight[9,9](0.1000) => 2.3827
activation[10] = self(23.8271) * weight[10,10](0.1000) => 2.3827
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(3.6479) + output[1](35.5556) * 1.0000 => 39.2034
activation[3] = self(39.2034) + output[7](23.8271) * -0.5000 => 27.2899
activation[3] = self(27.2899) + output[8](23.8271) * -0.5000 => 15.3764
activation[4] = self(3.6479) + output[1](35.5556) * 0.5000 => 21.4257
activation[4] = self(21.4257) + output[2](35.5556) * 0.5000 => 39.2034
activation[4] = self(39.2034) + output[6](23.8271) * -0.5000 => 27.2899
activation[4] = self(27.2899) + output[8](23.8271) * -0.5000 => 15.3764
activation[5] = self(3.6479) + output[2](35.5556) * 1.0000 => 39.2034
activation[5] = self(39.2034) + output[6](23.8271) * -0.5000 => 27.2899
activation[5] = self(27.2899) + output[7](23.8271) * -0.5000 => 15.3764
activation[6] = self(2.3827) + output[3](36.4788) * 1.0000 => 38.8615
activation[7] = self(2.3827) + output[4](36.4788) * 1.0000 => 38.8615
activation[8] = self(2.3827) + output[5](36.4788) * 1.0000 => 38.8615
activation[9] = self(2.3827) + output[3](36.4788) * 0.7500 => 29.7418
activation[9] = self(29.7418) + output[4](36.4788) * 0.2500 => 38.8615
activation[10] = self(2.3827) + output[4](36.4788) * 0.2500 => 11.5024
activation[10] = self(11.5024) + output[5](36.4788) * 0.7500 => 38.8615
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(15.3764) > threshold(0.0000)? ==> 15.3764
neuronOutput[4]: activation(15.3764) > threshold(0.0000)? ==> 15.3764
neuronOutput[5]: activation(15.3764) > threshold(0.0000)? ==> 15.3764
neuronOutput[6]: activation(38.8615) > threshold(0.0000)? ==> 38.8615
neuronOutput[7]: activation(38.8615) > threshold(0.0000)? ==> 38.8615
neuronOutput[8]: activation(38.8615) > threshold(0.0000)? ==> 38.8615
neuronOutput[9]: activation(38.8615) > threshold(0.0000)? ==> 38.8615
neuronOutput[10]: activation(38.8615) > threshold(0.0000)? ==> 38.8615
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](38.8615)
networkOutput[2] := neuronOutput[10](38.8615)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(15.3764) * weight[3,3](0.1000) => 1.5376
activation[4] = self(15.3764) * weight[4,4](0.1000) => 1.5376
activation[5] = self(15.3764) * weight[5,5](0.1000) => 1.5376
activation[6] = self(38.8615) * weight[6,6](0.1000) => 3.8862
activation[7] = self(38.8615) * weight[7,7](0.1000) => 3.8862
activation[8] = self(38.8615) * weight[8,8](0.1000) => 3.8862
activation[9] = self(38.8615) * weight[9,9](0.1000) => 3.8862
activation[10] = self(38.8615) * weight[10,10](0.1000) => 3.8862
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(1.5376) + output[1](35.5556) * 1.0000 => 37.0932
activation[3] = self(37.0932) + output[7](38.8615) * -0.5000 => 17.6624
activation[3] = self(17.6624) + output[8](38.8615) * -0.5000 => -1.7683
activation[4] = self(1.5376) + output[1](35.5556) * 0.5000 => 19.3154
activation[4] = self(19.3154) + output[2](35.5556) * 0.5000 => 37.0932
activation[4] = self(37.0932) + output[6](38.8615) * -0.5000 => 17.6624
activation[4] = self(17.6624) + output[8](38.8615) * -0.5000 => -1.7683
activation[5] = self(1.5376) + output[2](35.5556) * 1.0000 => 37.0932
activation[5] = self(37.0932) + output[6](38.8615) * -0.5000 => 17.6624
activation[5] = self(17.6624) + output[7](38.8615) * -0.5000 => -1.7683
activation[6] = self(3.8862) + output[3](15.3764) * 1.0000 => 19.2625
activation[7] = self(3.8862) + output[4](15.3764) * 1.0000 => 19.2625
activation[8] = self(3.8862) + output[5](15.3764) * 1.0000 => 19.2625
activation[9] = self(3.8862) + output[3](15.3764) * 0.7500 => 15.4184
activation[9] = self(15.4184) + output[4](15.3764) * 0.2500 => 19.2625
activation[10] = self(3.8862) + output[4](15.3764) * 0.2500 => 7.7302
activation[10] = self(7.7302) + output[5](15.3764) * 0.7500 => 19.2625
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(-1.7683) > threshold(0.0000)? ==> 0.0000
neuronOutput[4]: activation(-1.7683) > threshold(0.0000)? ==> 0.0000
neuronOutput[5]: activation(-1.7683) > threshold(0.0000)? ==> 0.0000
neuronOutput[6]: activation(19.2625) > threshold(0.0000)? ==> 19.2625
neuronOutput[7]: activation(19.2625) > threshold(0.0000)? ==> 19.2625
neuronOutput[8]: activation(19.2625) > threshold(0.0000)? ==> 19.2625
neuronOutput[9]: activation(19.2625) > threshold(0.0000)? ==> 19.2625
neuronOutput[10]: activation(19.2625) > threshold(0.0000)? ==> 19.2625
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](19.2625)
networkOutput[2] := neuronOutput[10](19.2625)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(-1.7683) * weight[3,3](0.1000) => -0.1768
activation[4] = self(-1.7683) * weight[4,4](0.1000) => -0.1768
activation[5] = self(-1.7683) * weight[5,5](0.1000) => -0.1768
activation[6] = self(19.2625) * weight[6,6](0.1000) => 1.9263
activation[7] = self(19.2625) * weight[7,7](0.1000) => 1.9263
activation[8] = self(19.2625) * weight[8,8](0.1000) => 1.9263
activation[9] = self(19.2625) * weight[9,9](0.1000) => 1.9263
activation[10] = self(19.2625) * weight[10,10](0.1000) => 1.9263
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(-0.1768) + output[1](35.5556) * 1.0000 => 35.3787
activation[3] = self(35.3787) + output[7](19.2625) * -0.5000 => 25.7475
activation[3] = self(25.7475) + output[8](19.2625) * -0.5000 => 16.1162
activation[4] = self(-0.1768) + output[1](35.5556) * 0.5000 => 17.6009
activation[4] = self(17.6009) + output[2](35.5556) * 0.5000 => 35.3787
activation[4] = self(35.3787) + output[6](19.2625) * -0.5000 => 25.7475
activation[4] = self(25.7475) + output[8](19.2625) * -0.5000 => 16.1162
activation[5] = self(-0.1768) + output[2](35.5556) * 1.0000 => 35.3787
activation[5] = self(35.3787) + output[6](19.2625) * -0.5000 => 25.7475
activation[5] = self(25.7475) + output[7](19.2625) * -0.5000 => 16.1162
activation[6] = self(1.9263) + output[3](0.0000) * 1.0000 => 1.9263
activation[7] = self(1.9263) + output[4](0.0000) * 1.0000 => 1.9263
activation[8] = self(1.9263) + output[5](0.0000) * 1.0000 => 1.9263
activation[9] = self(1.9263) + output[3](0.0000) * 0.7500 => 1.9263
activation[9] = self(1.9263) + output[4](0.0000) * 0.2500 => 1.9263
activation[10] = self(1.9263) + output[4](0.0000) * 0.2500 => 1.9263
activation[10] = self(1.9263) + output[5](0.0000) * 0.7500 => 1.9263
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(16.1162) > threshold(0.0000)? ==> 16.1162
neuronOutput[4]: activation(16.1162) > threshold(0.0000)? ==> 16.1162
neuronOutput[5]: activation(16.1162) > threshold(0.0000)? ==> 16.1162
neuronOutput[6]: activation(1.9263) > threshold(0.0000)? ==> 1.9263
neuronOutput[7]: activation(1.9263) > threshold(0.0000)? ==> 1.9263
neuronOutput[8]: activation(1.9263) > threshold(0.0000)? ==> 1.9263
neuronOutput[9]: activation(1.9263) > threshold(0.0000)? ==> 1.9263
neuronOutput[10]: activation(1.9263) > threshold(0.0000)? ==> 1.9263
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](1.9263)
networkOutput[2] := neuronOutput[10](1.9263)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(16.1162) * weight[3,3](0.1000) => 1.6116
activation[4] = self(16.1162) * weight[4,4](0.1000) => 1.6116
activation[5] = self(16.1162) * weight[5,5](0.1000) => 1.6116
activation[6] = self(1.9263) * weight[6,6](0.1000) => 0.1926
activation[7] = self(1.9263) * weight[7,7](0.1000) => 0.1926
activation[8] = self(1.9263) * weight[8,8](0.1000) => 0.1926
activation[9] = self(1.9263) * weight[9,9](0.1000) => 0.1926
activation[10] = self(1.9263) * weight[10,10](0.1000) => 0.1926
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(1.6116) + output[1](35.5556) * 1.0000 => 37.1672
activation[3] = self(37.1672) + output[7](1.9263) * -0.5000 => 36.2041
activation[3] = self(36.2041) + output[8](1.9263) * -0.5000 => 35.2409
activation[4] = self(1.6116) + output[1](35.5556) * 0.5000 => 19.3894
activation[4] = self(19.3894) + output[2](35.5556) * 0.5000 => 37.1672
activation[4] = self(37.1672) + output[6](1.9263) * -0.5000 => 36.2041
activation[4] = self(36.2041) + output[8](1.9263) * -0.5000 => 35.2409
activation[5] = self(1.6116) + output[2](35.5556) * 1.0000 => 37.1672
activation[5] = self(37.1672) + output[6](1.9263) * -0.5000 => 36.2041
activation[5] = self(36.2041) + output[7](1.9263) * -0.5000 => 35.2409
activation[6] = self(0.1926) + output[3](16.1162) * 1.0000 => 16.3088
activation[7] = self(0.1926) + output[4](16.1162) * 1.0000 => 16.3088
activation[8] = self(0.1926) + output[5](16.1162) * 1.0000 => 16.3088
activation[9] = self(0.1926) + output[3](16.1162) * 0.7500 => 12.2798
activation[9] = self(12.2798) + output[4](16.1162) * 0.2500 => 16.3088
activation[10] = self(0.1926) + output[4](16.1162) * 0.2500 => 4.2217
activation[10] = self(4.2217) + output[5](16.1162) * 0.7500 => 16.3088
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(35.2409) > threshold(0.0000)? ==> 35.2409
neuronOutput[4]: activation(35.2409) > threshold(0.0000)? ==> 35.2409
neuronOutput[5]: activation(35.2409) > threshold(0.0000)? ==> 35.2409
neuronOutput[6]: activation(16.3088) > threshold(0.0000)? ==> 16.3088
neuronOutput[7]: activation(16.3088) > threshold(0.0000)? ==> 16.3088
neuronOutput[8]: activation(16.3088) > threshold(0.0000)? ==> 16.3088
neuronOutput[9]: activation(16.3088) > threshold(0.0000)? ==> 16.3088
neuronOutput[10]: activation(16.3088) > threshold(0.0000)? ==> 16.3088
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](16.3088)
networkOutput[2] := neuronOutput[10](16.3088)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(35.2409) * weight[3,3](0.1000) => 3.5241
activation[4] = self(35.2409) * weight[4,4](0.1000) => 3.5241
activation[5] = self(35.2409) * weight[5,5](0.1000) => 3.5241
activation[6] = self(16.3088) * weight[6,6](0.1000) => 1.6309
activation[7] = self(16.3088) * weight[7,7](0.1000) => 1.6309
activation[8] = self(16.3088) * weight[8,8](0.1000) => 1.6309
activation[9] = self(16.3088) * weight[9,9](0.1000) => 1.6309
activation[10] = self(16.3088) * weight[10,10](0.1000) => 1.6309
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(3.5241) + output[1](35.5556) * 1.0000 => 39.0797
activation[3] = self(39.0797) + output[7](16.3088) * -0.5000 => 30.9252
activation[3] = self(30.9252) + output[8](16.3088) * -0.5000 => 22.7708
activation[4] = self(3.5241) + output[1](35.5556) * 0.5000 => 21.3019
activation[4] = self(21.3019) + output[2](35.5556) * 0.5000 => 39.0797
activation[4] = self(39.0797) + output[6](16.3088) * -0.5000 => 30.9252
activation[4] = self(30.9252) + output[8](16.3088) * -0.5000 => 22.7708
activation[5] = self(3.5241) + output[2](35.5556) * 1.0000 => 39.0797
activation[5] = self(39.0797) + output[6](16.3088) * -0.5000 => 30.9252
activation[5] = self(30.9252) + output[7](16.3088) * -0.5000 => 22.7708
activation[6] = self(1.6309) + output[3](35.2409) * 1.0000 => 36.8718
activation[7] = self(1.6309) + output[4](35.2409) * 1.0000 => 36.8718
activation[8] = self(1.6309) + output[5](35.2409) * 1.0000 => 36.8718
activation[9] = self(1.6309) + output[3](35.2409) * 0.7500 => 28.0616
activation[9] = self(28.0616) + output[4](35.2409) * 0.2500 => 36.8718
activation[10] = self(1.6309) + output[4](35.2409) * 0.2500 => 10.4411
activation[10] = self(10.4411) + output[5](35.2409) * 0.7500 => 36.8718
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(22.7708) > threshold(0.0000)? ==> 22.7708
neuronOutput[4]: activation(22.7708) > threshold(0.0000)? ==> 22.7708
neuronOutput[5]: activation(22.7708) > threshold(0.0000)? ==> 22.7708
neuronOutput[6]: activation(36.8718) > threshold(0.0000)? ==> 36.8718
neuronOutput[7]: activation(36.8718) > threshold(0.0000)? ==> 36.8718
neuronOutput[8]: activation(36.8718) > threshold(0.0000)? ==> 36.8718
neuronOutput[9]: activation(36.8718) > threshold(0.0000)? ==> 36.8718
neuronOutput[10]: activation(36.8718) > threshold(0.0000)? ==> 36.8718
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](36.8718)
networkOutput[2] := neuronOutput[10](36.8718)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(22.7708) * weight[3,3](0.1000) => 2.2771
activation[4] = self(22.7708) * weight[4,4](0.1000) => 2.2771
activation[5] = self(22.7708) * weight[5,5](0.1000) => 2.2771
activation[6] = self(36.8718) * weight[6,6](0.1000) => 3.6872
activation[7] = self(36.8718) * weight[7,7](0.1000) => 3.6872
activation[8] = self(36.8718) * weight[8,8](0.1000) => 3.6872
activation[9] = self(36.8718) * weight[9,9](0.1000) => 3.6872
activation[10] = self(36.8718) * weight[10,10](0.1000) => 3.6872
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(2.2771) + output[1](35.5556) * 1.0000 => 37.8326
activation[3] = self(37.8326) + output[7](36.8718) * -0.5000 => 19.3967
activation[3] = self(19.3967) + output[8](36.8718) * -0.5000 => 0.9608
activation[4] = self(2.2771) + output[1](35.5556) * 0.5000 => 20.0549
activation[4] = self(20.0549) + output[2](35.5556) * 0.5000 => 37.8326
activation[4] = self(37.8326) + output[6](36.8718) * -0.5000 => 19.3967
activation[4] = self(19.3967) + output[8](36.8718) * -0.5000 => 0.9608
activation[5] = self(2.2771) + output[2](35.5556) * 1.0000 => 37.8326
activation[5] = self(37.8326) + output[6](36.8718) * -0.5000 => 19.3967
activation[5] = self(19.3967) + output[7](36.8718) * -0.5000 => 0.9608
activation[6] = self(3.6872) + output[3](22.7708) * 1.0000 => 26.4580
activation[7] = self(3.6872) + output[4](22.7708) * 1.0000 => 26.4580
activation[8] = self(3.6872) + output[5](22.7708) * 1.0000 => 26.4580
activation[9] = self(3.6872) + output[3](22.7708) * 0.7500 => 20.7653
activation[9] = self(20.7653) + output[4](22.7708) * 0.2500 => 26.4580
activation[10] = self(3.6872) + output[4](22.7708) * 0.2500 => 9.3799
activation[10] = self(9.3799) + output[5](22.7708) * 0.7500 => 26.4580
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(0.9608) > threshold(0.0000)? ==> 0.9608
neuronOutput[4]: activation(0.9608) > threshold(0.0000)? ==> 0.9608
neuronOutput[5]: activation(0.9608) > threshold(0.0000)? ==> 0.9608
neuronOutput[6]: activation(26.4580) > threshold(0.0000)? ==> 26.4580
neuronOutput[7]: activation(26.4580) > threshold(0.0000)? ==> 26.4580
neuronOutput[8]: activation(26.4580) > threshold(0.0000)? ==> 26.4580
neuronOutput[9]: activation(26.4580) > threshold(0.0000)? ==> 26.4580
neuronOutput[10]: activation(26.4580) > threshold(0.0000)? ==> 26.4580
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](26.4580)
networkOutput[2] := neuronOutput[10](26.4580)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(0.9608) * weight[3,3](0.1000) => 0.0961
activation[4] = self(0.9608) * weight[4,4](0.1000) => 0.0961
activation[5] = self(0.9608) * weight[5,5](0.1000) => 0.0961
activation[6] = self(26.4580) * weight[6,6](0.1000) => 2.6458
activation[7] = self(26.4580) * weight[7,7](0.1000) => 2.6458
activation[8] = self(26.4580) * weight[8,8](0.1000) => 2.6458
activation[9] = self(26.4580) * weight[9,9](0.1000) => 2.6458
activation[10] = self(26.4580) * weight[10,10](0.1000) => 2.6458
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(0.0961) + output[1](35.5556) * 1.0000 => 35.6516
activation[3] = self(35.6516) + output[7](26.4580) * -0.5000 => 22.4226
activation[3] = self(22.4226) + output[8](26.4580) * -0.5000 => 9.1936
activation[4] = self(0.0961) + output[1](35.5556) * 0.5000 => 17.8739
activation[4] = self(17.8739) + output[2](35.5556) * 0.5000 => 35.6516
activation[4] = self(35.6516) + output[6](26.4580) * -0.5000 => 22.4226
activation[4] = self(22.4226) + output[8](26.4580) * -0.5000 => 9.1936
activation[5] = self(0.0961) + output[2](35.5556) * 1.0000 => 35.6516
activation[5] = self(35.6516) + output[6](26.4580) * -0.5000 => 22.4226
activation[5] = self(22.4226) + output[7](26.4580) * -0.5000 => 9.1936
activation[6] = self(2.6458) + output[3](0.9608) * 1.0000 => 3.6066
activation[7] = self(2.6458) + output[4](0.9608) * 1.0000 => 3.6066
activation[8] = self(2.6458) + output[5](0.9608) * 1.0000 => 3.6066
activation[9] = self(2.6458) + output[3](0.9608) * 0.7500 => 3.3664
activation[9] = self(3.3664) + output[4](0.9608) * 0.2500 => 3.6066
activation[10] = self(2.6458) + output[4](0.9608) * 0.2500 => 2.8860
activation[10] = self(2.8860) + output[5](0.9608) * 0.7500 => 3.6066
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(9.1936) > threshold(0.0000)? ==> 9.1936
neuronOutput[4]: activation(9.1936) > threshold(0.0000)? ==> 9.1936
neuronOutput[5]: activation(9.1936) > threshold(0.0000)? ==> 9.1936
neuronOutput[6]: activation(3.6066) > threshold(0.0000)? ==> 3.6066
neuronOutput[7]: activation(3.6066) > threshold(0.0000)? ==> 3.6066
neuronOutput[8]: activation(3.6066) > threshold(0.0000)? ==> 3.6066
neuronOutput[9]: activation(3.6066) > threshold(0.0000)? ==> 3.6066
neuronOutput[10]: activation(3.6066) > threshold(0.0000)? ==> 3.6066
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](3.6066)
networkOutput[2] := neuronOutput[10](3.6066)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(9.1936) * weight[3,3](0.1000) => 0.9194
activation[4] = self(9.1936) * weight[4,4](0.1000) => 0.9194
activation[5] = self(9.1936) * weight[5,5](0.1000) => 0.9194
activation[6] = self(3.6066) * weight[6,6](0.1000) => 0.3607
activation[7] = self(3.6066) * weight[7,7](0.1000) => 0.3607
activation[8] = self(3.6066) * weight[8,8](0.1000) => 0.3607
activation[9] = self(3.6066) * weight[9,9](0.1000) => 0.3607
activation[10] = self(3.6066) * weight[10,10](0.1000) => 0.3607
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(0.9194) + output[1](35.5556) * 1.0000 => 36.4749
activation[3] = self(36.4749) + output[7](3.6066) * -0.5000 => 34.6716
activation[3] = self(34.6716) + output[8](3.6066) * -0.5000 => 32.8683
activation[4] = self(0.9194) + output[1](35.5556) * 0.5000 => 18.6971
activation[4] = self(18.6971) + output[2](35.5556) * 0.5000 => 36.4749
activation[4] = self(36.4749) + output[6](3.6066) * -0.5000 => 34.6716
activation[4] = self(34.6716) + output[8](3.6066) * -0.5000 => 32.8683
activation[5] = self(0.9194) + output[2](35.5556) * 1.0000 => 36.4749
activation[5] = self(36.4749) + output[6](3.6066) * -0.5000 => 34.6716
activation[5] = self(34.6716) + output[7](3.6066) * -0.5000 => 32.8683
activation[6] = self(0.3607) + output[3](9.1936) * 1.0000 => 9.5543
activation[7] = self(0.3607) + output[4](9.1936) * 1.0000 => 9.5543
activation[8] = self(0.3607) + output[5](9.1936) * 1.0000 => 9.5543
activation[9] = self(0.3607) + output[3](9.1936) * 0.7500 => 7.2559
activation[9] = self(7.2559) + output[4](9.1936) * 0.2500 => 9.5543
activation[10] = self(0.3607) + output[4](9.1936) * 0.2500 => 2.6591
activation[10] = self(2.6591) + output[5](9.1936) * 0.7500 => 9.5543
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(32.8683) > threshold(0.0000)? ==> 32.8683
neuronOutput[4]: activation(32.8683) > threshold(0.0000)? ==> 32.8683
neuronOutput[5]: activation(32.8683) > threshold(0.0000)? ==> 32.8683
neuronOutput[6]: activation(9.5543) > threshold(0.0000)? ==> 9.5543
neuronOutput[7]: activation(9.5543) > threshold(0.0000)? ==> 9.5543
neuronOutput[8]: activation(9.5543) > threshold(0.0000)? ==> 9.5543
neuronOutput[9]: activation(9.5543) > threshold(0.0000)? ==> 9.5543
neuronOutput[10]: activation(9.5543) > threshold(0.0000)? ==> 9.5543
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](9.5543)
networkOutput[2] := neuronOutput[10](9.5543)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(32.8683) * weight[3,3](0.1000) => 3.2868
activation[4] = self(32.8683) * weight[4,4](0.1000) => 3.2868
activation[5] = self(32.8683) * weight[5,5](0.1000) => 3.2868
activation[6] = self(9.5543) * weight[6,6](0.1000) => 0.9554
activation[7] = self(9.5543) * weight[7,7](0.1000) => 0.9554
activation[8] = self(9.5543) * weight[8,8](0.1000) => 0.9554
activation[9] = self(9.5543) * weight[9,9](0.1000) => 0.9554
activation[10] = self(9.5543) * weight[10,10](0.1000) => 0.9554
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(3.2868) + output[1](35.5556) * 1.0000 => 38.8424
activation[3] = self(38.8424) + output[7](9.5543) * -0.5000 => 34.0652
activation[3] = self(34.0652) + output[8](9.5543) * -0.5000 => 29.2881
activation[4] = self(3.2868) + output[1](35.5556) * 0.5000 => 21.0646
activation[4] = self(21.0646) + output[2](35.5556) * 0.5000 => 38.8424
activation[4] = self(38.8424) + output[6](9.5543) * -0.5000 => 34.0652
activation[4] = self(34.0652) + output[8](9.5543) * -0.5000 => 29.2881
activation[5] = self(3.2868) + output[2](35.5556) * 1.0000 => 38.8424
activation[5] = self(38.8424) + output[6](9.5543) * -0.5000 => 34.0652
activation[5] = self(34.0652) + output[7](9.5543) * -0.5000 => 29.2881
activation[6] = self(0.9554) + output[3](32.8683) * 1.0000 => 33.8237
activation[7] = self(0.9554) + output[4](32.8683) * 1.0000 => 33.8237
activation[8] = self(0.9554) + output[5](32.8683) * 1.0000 => 33.8237
activation[9] = self(0.9554) + output[3](32.8683) * 0.7500 => 25.6066
activation[9] = self(25.6066) + output[4](32.8683) * 0.2500 => 33.8237
activation[10] = self(0.9554) + output[4](32.8683) * 0.2500 => 9.1725
activation[10] = self(9.1725) + output[5](32.8683) * 0.7500 => 33.8237
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(29.2881) > threshold(0.0000)? ==> 29.2881
neuronOutput[4]: activation(29.2881) > threshold(0.0000)? ==> 29.2881
neuronOutput[5]: activation(29.2881) > threshold(0.0000)? ==> 29.2881
neuronOutput[6]: activation(33.8237) > threshold(0.0000)? ==> 33.8237
neuronOutput[7]: activation(33.8237) > threshold(0.0000)? ==> 33.8237
neuronOutput[8]: activation(33.8237) > threshold(0.0000)? ==> 33.8237
neuronOutput[9]: activation(33.8237) > threshold(0.0000)? ==> 33.8237
neuronOutput[10]: activation(33.8237) > threshold(0.0000)? ==> 33.8237
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](33.8237)
networkOutput[2] := neuronOutput[10](33.8237)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(29.2881) * weight[3,3](0.1000) => 2.9288
activation[4] = self(29.2881) * weight[4,4](0.1000) => 2.9288
activation[5] = self(29.2881) * weight[5,5](0.1000) => 2.9288
activation[6] = self(33.8237) * weight[6,6](0.1000) => 3.3824
activation[7] = self(33.8237) * weight[7,7](0.1000) => 3.3824
activation[8] = self(33.8237) * weight[8,8](0.1000) => 3.3824
activation[9] = self(33.8237) * weight[9,9](0.1000) => 3.3824
activation[10] = self(33.8237) * weight[10,10](0.1000) => 3.3824
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(2.9288) + output[1](35.5556) * 1.0000 => 38.4844
activation[3] = self(38.4844) + output[7](33.8237) * -0.5000 => 21.5725
activation[3] = self(21.5725) + output[8](33.8237) * -0.5000 => 4.6607
activation[4] = self(2.9288) + output[1](35.5556) * 0.5000 => 20.7066
activation[4] = self(20.7066) + output[2](35.5556) * 0.5000 => 38.4844
activation[4] = self(38.4844) + output[6](33.8237) * -0.5000 => 21.5725
activation[4] = self(21.5725) + output[8](33.8237) * -0.5000 => 4.6607
activation[5] = self(2.9288) + output[2](35.5556) * 1.0000 => 38.4844
activation[5] = self(38.4844) + output[6](33.8237) * -0.5000 => 21.5725
activation[5] = self(21.5725) + output[7](33.8237) * -0.5000 => 4.6607
activation[6] = self(3.3824) + output[3](29.2881) * 1.0000 => 32.6705
activation[7] = self(3.3824) + output[4](29.2881) * 1.0000 => 32.6705
activation[8] = self(3.3824) + output[5](29.2881) * 1.0000 => 32.6705
activation[9] = self(3.3824) + output[3](29.2881) * 0.7500 => 25.3484
activation[9] = self(25.3484) + output[4](29.2881) * 0.2500 => 32.6705
activation[10] = self(3.3824) + output[4](29.2881) * 0.2500 => 10.7044
activation[10] = self(10.7044) + output[5](29.2881) * 0.7500 => 32.6705
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(4.6607) > threshold(0.0000)? ==> 4.6607
neuronOutput[4]: activation(4.6607) > threshold(0.0000)? ==> 4.6607
neuronOutput[5]: activation(4.6607) > threshold(0.0000)? ==> 4.6607
neuronOutput[6]: activation(32.6705) > threshold(0.0000)? ==> 32.6705
neuronOutput[7]: activation(32.6705) > threshold(0.0000)? ==> 32.6705
neuronOutput[8]: activation(32.6705) > threshold(0.0000)? ==> 32.6705
neuronOutput[9]: activation(32.6705) > threshold(0.0000)? ==> 32.6705
neuronOutput[10]: activation(32.6705) > threshold(0.0000)? ==> 32.6705
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](32.6705)
networkOutput[2] := neuronOutput[10](32.6705)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(4.6607) * weight[3,3](0.1000) => 0.4661
activation[4] = self(4.6607) * weight[4,4](0.1000) => 0.4661
activation[5] = self(4.6607) * weight[5,5](0.1000) => 0.4661
activation[6] = self(32.6705) * weight[6,6](0.1000) => 3.2670
activation[7] = self(32.6705) * weight[7,7](0.1000) => 3.2670
activation[8] = self(32.6705) * weight[8,8](0.1000) => 3.2670
activation[9] = self(32.6705) * weight[9,9](0.1000) => 3.2670
activation[10] = self(32.6705) * weight[10,10](0.1000) => 3.2670
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(0.4661) + output[1](35.5556) * 1.0000 => 36.0216
activation[3] = self(36.0216) + output[7](32.6705) * -0.5000 => 19.6864
activation[3] = self(19.6864) + output[8](32.6705) * -0.5000 => 3.3512
activation[4] = self(0.4661) + output[1](35.5556) * 0.5000 => 18.2438
activation[4] = self(18.2438) + output[2](35.5556) * 0.5000 => 36.0216
activation[4] = self(36.0216) + output[6](32.6705) * -0.5000 => 19.6864
activation[4] = self(19.6864) + output[8](32.6705) * -0.5000 => 3.3512
activation[5] = self(0.4661) + output[2](35.5556) * 1.0000 => 36.0216
activation[5] = self(36.0216) + output[6](32.6705) * -0.5000 => 19.6864
activation[5] = self(19.6864) + output[7](32.6705) * -0.5000 => 3.3512
activation[6] = self(3.2670) + output[3](4.6607) * 1.0000 => 7.9277
activation[7] = self(3.2670) + output[4](4.6607) * 1.0000 => 7.9277
activation[8] = self(3.2670) + output[5](4.6607) * 1.0000 => 7.9277
activation[9] = self(3.2670) + output[3](4.6607) * 0.7500 => 6.7625
activation[9] = self(6.7625) + output[4](4.6607) * 0.2500 => 7.9277
activation[10] = self(3.2670) + output[4](4.6607) * 0.2500 => 4.4322
activation[10] = self(4.4322) + output[5](4.6607) * 0.7500 => 7.9277
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(3.3512) > threshold(0.0000)? ==> 3.3512
neuronOutput[4]: activation(3.3512) > threshold(0.0000)? ==> 3.3512
neuronOutput[5]: activation(3.3512) > threshold(0.0000)? ==> 3.3512
neuronOutput[6]: activation(7.9277) > threshold(0.0000)? ==> 7.9277
neuronOutput[7]: activation(7.9277) > threshold(0.0000)? ==> 7.9277
neuronOutput[8]: activation(7.9277) > threshold(0.0000)? ==> 7.9277
neuronOutput[9]: activation(7.9277) > threshold(0.0000)? ==> 7.9277
neuronOutput[10]: activation(7.9277) > threshold(0.0000)? ==> 7.9277
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](7.9277)
networkOutput[2] := neuronOutput[10](7.9277)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(3.3512) * weight[3,3](0.1000) => 0.3351
activation[4] = self(3.3512) * weight[4,4](0.1000) => 0.3351
activation[5] = self(3.3512) * weight[5,5](0.1000) => 0.3351
activation[6] = self(7.9277) * weight[6,6](0.1000) => 0.7928
activation[7] = self(7.9277) * weight[7,7](0.1000) => 0.7928
activation[8] = self(7.9277) * weight[8,8](0.1000) => 0.7928
activation[9] = self(7.9277) * weight[9,9](0.1000) => 0.7928
activation[10] = self(7.9277) * weight[10,10](0.1000) => 0.7928
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(0.3351) + output[1](35.5556) * 1.0000 => 35.8907
activation[3] = self(35.8907) + output[7](7.9277) * -0.5000 => 31.9268
activation[3] = self(31.9268) + output[8](7.9277) * -0.5000 => 27.9630
activation[4] = self(0.3351) + output[1](35.5556) * 0.5000 => 18.1129
activation[4] = self(18.1129) + output[2](35.5556) * 0.5000 => 35.8907
activation[4] = self(35.8907) + output[6](7.9277) * -0.5000 => 31.9268
activation[4] = self(31.9268) + output[8](7.9277) * -0.5000 => 27.9630
activation[5] = self(0.3351) + output[2](35.5556) * 1.0000 => 35.8907
activation[5] = self(35.8907) + output[6](7.9277) * -0.5000 => 31.9268
activation[5] = self(31.9268) + output[7](7.9277) * -0.5000 => 27.9630
activation[6] = self(0.7928) + output[3](3.3512) * 1.0000 => 4.1439
activation[7] = self(0.7928) + output[4](3.3512) * 1.0000 => 4.1439
activation[8] = self(0.7928) + output[5](3.3512) * 1.0000 => 4.1439
activation[9] = self(0.7928) + output[3](3.3512) * 0.7500 => 3.3061
activation[9] = self(3.3061) + output[4](3.3512) * 0.2500 => 4.1439
activation[10] = self(0.7928) + output[4](3.3512) * 0.2500 => 1.6306
activation[10] = self(1.6306) + output[5](3.3512) * 0.7500 => 4.1439
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(27.9630) > threshold(0.0000)? ==> 27.9630
neuronOutput[4]: activation(27.9630) > threshold(0.0000)? ==> 27.9630
neuronOutput[5]: activation(27.9630) > threshold(0.0000)? ==> 27.9630
neuronOutput[6]: activation(4.1439) > threshold(0.0000)? ==> 4.1439
neuronOutput[7]: activation(4.1439) > threshold(0.0000)? ==> 4.1439
neuronOutput[8]: activation(4.1439) > threshold(0.0000)? ==> 4.1439
neuronOutput[9]: activation(4.1439) > threshold(0.0000)? ==> 4.1439
neuronOutput[10]: activation(4.1439) > threshold(0.0000)? ==> 4.1439
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](4.1439)
networkOutput[2] := neuronOutput[10](4.1439)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(27.9630) * weight[3,3](0.1000) => 2.7963
activation[4] = self(27.9630) * weight[4,4](0.1000) => 2.7963
activation[5] = self(27.9630) * weight[5,5](0.1000) => 2.7963
activation[6] = self(4.1439) * weight[6,6](0.1000) => 0.4144
activation[7] = self(4.1439) * weight[7,7](0.1000) => 0.4144
activation[8] = self(4.1439) * weight[8,8](0.1000) => 0.4144
activation[9] = self(4.1439) * weight[9,9](0.1000) => 0.4144
activation[10] = self(4.1439) * weight[10,10](0.1000) => 0.4144
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(2.7963) + output[1](35.5556) * 1.0000 => 38.3519
activation[3] = self(38.3519) + output[7](4.1439) * -0.5000 => 36.2799
activation[3] = self(36.2799) + output[8](4.1439) * -0.5000 => 34.2079
activation[4] = self(2.7963) + output[1](35.5556) * 0.5000 => 20.5741
activation[4] = self(20.5741) + output[2](35.5556) * 0.5000 => 38.3519
activation[4] = self(38.3519) + output[6](4.1439) * -0.5000 => 36.2799
activation[4] = self(36.2799) + output[8](4.1439) * -0.5000 => 34.2079
activation[5] = self(2.7963) + output[2](35.5556) * 1.0000 => 38.3519
activation[5] = self(38.3519) + output[6](4.1439) * -0.5000 => 36.2799
activation[5] = self(36.2799) + output[7](4.1439) * -0.5000 => 34.2079
activation[6] = self(0.4144) + output[3](27.9630) * 1.0000 => 28.3774
activation[7] = self(0.4144) + output[4](27.9630) * 1.0000 => 28.3774
activation[8] = self(0.4144) + output[5](27.9630) * 1.0000 => 28.3774
activation[9] = self(0.4144) + output[3](27.9630) * 0.7500 => 21.3866
activation[9] = self(21.3866) + output[4](27.9630) * 0.2500 => 28.3774
activation[10] = self(0.4144) + output[4](27.9630) * 0.2500 => 7.4051
activation[10] = self(7.4051) + output[5](27.9630) * 0.7500 => 28.3774
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(34.2079) > threshold(0.0000)? ==> 34.2079
neuronOutput[4]: activation(34.2079) > threshold(0.0000)? ==> 34.2079
neuronOutput[5]: activation(34.2079) > threshold(0.0000)? ==> 34.2079
neuronOutput[6]: activation(28.3774) > threshold(0.0000)? ==> 28.3774
neuronOutput[7]: activation(28.3774) > threshold(0.0000)? ==> 28.3774
neuronOutput[8]: activation(28.3774) > threshold(0.0000)? ==> 28.3774
neuronOutput[9]: activation(28.3774) > threshold(0.0000)? ==> 28.3774
neuronOutput[10]: activation(28.3774) > threshold(0.0000)? ==> 28.3774
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](28.3774)
networkOutput[2] := neuronOutput[10](28.3774)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(34.2079) * weight[3,3](0.1000) => 3.4208
activation[4] = self(34.2079) * weight[4,4](0.1000) => 3.4208
activation[5] = self(34.2079) * weight[5,5](0.1000) => 3.4208
activation[6] = self(28.3774) * weight[6,6](0.1000) => 2.8377
activation[7] = self(28.3774) * weight[7,7](0.1000) => 2.8377
activation[8] = self(28.3774) * weight[8,8](0.1000) => 2.8377
activation[9] = self(28.3774) * weight[9,9](0.1000) => 2.8377
activation[10] = self(28.3774) * weight[10,10](0.1000) => 2.8377
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(3.4208) + output[1](35.5556) * 1.0000 => 38.9764
activation[3] = self(38.9764) + output[7](28.3774) * -0.5000 => 24.7877
activation[3] = self(24.7877) + output[8](28.3774) * -0.5000 => 10.5990
activation[4] = self(3.4208) + output[1](35.5556) * 0.5000 => 21.1986
activation[4] = self(21.1986) + output[2](35.5556) * 0.5000 => 38.9764
activation[4] = self(38.9764) + output[6](28.3774) * -0.5000 => 24.7877
activation[4] = self(24.7877) + output[8](28.3774) * -0.5000 => 10.5990
activation[5] = self(3.4208) + output[2](35.5556) * 1.0000 => 38.9764
activation[5] = self(38.9764) + output[6](28.3774) * -0.5000 => 24.7877
activation[5] = self(24.7877) + output[7](28.3774) * -0.5000 => 10.5990
activation[6] = self(2.8377) + output[3](34.2079) * 1.0000 => 37.0457
activation[7] = self(2.8377) + output[4](34.2079) * 1.0000 => 37.0457
activation[8] = self(2.8377) + output[5](34.2079) * 1.0000 => 37.0457
activation[9] = self(2.8377) + output[3](34.2079) * 0.7500 => 28.4937
activation[9] = self(28.4937) + output[4](34.2079) * 0.2500 => 37.0457
activation[10] = self(2.8377) + output[4](34.2079) * 0.2500 => 11.3897
activation[10] = self(11.3897) + output[5](34.2079) * 0.7500 => 37.0457
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(10.5990) > threshold(0.0000)? ==> 10.5990
neuronOutput[4]: activation(10.5990) > threshold(0.0000)? ==> 10.5990
neuronOutput[5]: activation(10.5990) > threshold(0.0000)? ==> 10.5990
neuronOutput[6]: activation(37.0457) > threshold(0.0000)? ==> 37.0457
neuronOutput[7]: activation(37.0457) > threshold(0.0000)? ==> 37.0457
neuronOutput[8]: activation(37.0457) > threshold(0.0000)? ==> 37.0457
neuronOutput[9]: activation(37.0457) > threshold(0.0000)? ==> 37.0457
neuronOutput[10]: activation(37.0457) > threshold(0.0000)? ==> 37.0457
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](37.0457)
networkOutput[2] := neuronOutput[10](37.0457)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(10.5990) * weight[3,3](0.1000) => 1.0599
activation[4] = self(10.5990) * weight[4,4](0.1000) => 1.0599
activation[5] = self(10.5990) * weight[5,5](0.1000) => 1.0599
activation[6] = self(37.0457) * weight[6,6](0.1000) => 3.7046
activation[7] = self(37.0457) * weight[7,7](0.1000) => 3.7046
activation[8] = self(37.0457) * weight[8,8](0.1000) => 3.7046
activation[9] = self(37.0457) * weight[9,9](0.1000) => 3.7046
activation[10] = self(37.0457) * weight[10,10](0.1000) => 3.7046
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(1.0599) + output[1](35.5556) * 1.0000 => 36.6155
activation[3] = self(36.6155) + output[7](37.0457) * -0.5000 => 18.0926
activation[3] = self(18.0926) + output[8](37.0457) * -0.5000 => -0.4302
activation[4] = self(1.0599) + output[1](35.5556) * 0.5000 => 18.8377
activation[4] = self(18.8377) + output[2](35.5556) * 0.5000 => 36.6155
activation[4] = self(36.6155) + output[6](37.0457) * -0.5000 => 18.0926
activation[4] = self(18.0926) + output[8](37.0457) * -0.5000 => -0.4302
activation[5] = self(1.0599) + output[2](35.5556) * 1.0000 => 36.6155
activation[5] = self(36.6155) + output[6](37.0457) * -0.5000 => 18.0926
activation[5] = self(18.0926) + output[7](37.0457) * -0.5000 => -0.4302
activation[6] = self(3.7046) + output[3](10.5990) * 1.0000 => 14.3036
activation[7] = self(3.7046) + output[4](10.5990) * 1.0000 => 14.3036
activation[8] = self(3.7046) + output[5](10.5990) * 1.0000 => 14.3036
activation[9] = self(3.7046) + output[3](10.5990) * 0.7500 => 11.6538
activation[9] = self(11.6538) + output[4](10.5990) * 0.2500 => 14.3036
activation[10] = self(3.7046) + output[4](10.5990) * 0.2500 => 6.3543
activation[10] = self(6.3543) + output[5](10.5990) * 0.7500 => 14.3036
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(-0.4302) > threshold(0.0000)? ==> 0.0000
neuronOutput[4]: activation(-0.4302) > threshold(0.0000)? ==> 0.0000
neuronOutput[5]: activation(-0.4302) > threshold(0.0000)? ==> 0.0000
neuronOutput[6]: activation(14.3036) > threshold(0.0000)? ==> 14.3036
neuronOutput[7]: activation(14.3036) > threshold(0.0000)? ==> 14.3036
neuronOutput[8]: activation(14.3036) > threshold(0.0000)? ==> 14.3036
neuronOutput[9]: activation(14.3036) > threshold(0.0000)? ==> 14.3036
neuronOutput[10]: activation(14.3036) > threshold(0.0000)? ==> 14.3036
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](14.3036)
networkOutput[2] := neuronOutput[10](14.3036)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(-0.4302) * weight[3,3](0.1000) => -0.0430
activation[4] = self(-0.4302) * weight[4,4](0.1000) => -0.0430
activation[5] = self(-0.4302) * weight[5,5](0.1000) => -0.0430
activation[6] = self(14.3036) * weight[6,6](0.1000) => 1.4304
activation[7] = self(14.3036) * weight[7,7](0.1000) => 1.4304
activation[8] = self(14.3036) * weight[8,8](0.1000) => 1.4304
activation[9] = self(14.3036) * weight[9,9](0.1000) => 1.4304
activation[10] = self(14.3036) * weight[10,10](0.1000) => 1.4304
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(-0.0430) + output[1](35.5556) * 1.0000 => 35.5125
activation[3] = self(35.5125) + output[7](14.3036) * -0.5000 => 28.3608
activation[3] = self(28.3608) + output[8](14.3036) * -0.5000 => 21.2090
activation[4] = self(-0.0430) + output[1](35.5556) * 0.5000 => 17.7348
activation[4] = self(17.7348) + output[2](35.5556) * 0.5000 => 35.5125
activation[4] = self(35.5125) + output[6](14.3036) * -0.5000 => 28.3608
activation[4] = self(28.3608) + output[8](14.3036) * -0.5000 => 21.2090
activation[5] = self(-0.0430) + output[2](35.5556) * 1.0000 => 35.5125
activation[5] = self(35.5125) + output[6](14.3036) * -0.5000 => 28.3608
activation[5] = self(28.3608) + output[7](14.3036) * -0.5000 => 21.2090
activation[6] = self(1.4304) + output[3](0.0000) * 1.0000 => 1.4304
activation[7] = self(1.4304) + output[4](0.0000) * 1.0000 => 1.4304
activation[8] = self(1.4304) + output[5](0.0000) * 1.0000 => 1.4304
activation[9] = self(1.4304) + output[3](0.0000) * 0.7500 => 1.4304
activation[9] = self(1.4304) + output[4](0.0000) * 0.2500 => 1.4304
activation[10] = self(1.4304) + output[4](0.0000) * 0.2500 => 1.4304
activation[10] = self(1.4304) + output[5](0.0000) * 0.7500 => 1.4304
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(21.2090) > threshold(0.0000)? ==> 21.2090
neuronOutput[4]: activation(21.2090) > threshold(0.0000)? ==> 21.2090
neuronOutput[5]: activation(21.2090) > threshold(0.0000)? ==> 21.2090
neuronOutput[6]: activation(1.4304) > threshold(0.0000)? ==> 1.4304
neuronOutput[7]: activation(1.4304) > threshold(0.0000)? ==> 1.4304
neuronOutput[8]: activation(1.4304) > threshold(0.0000)? ==> 1.4304
neuronOutput[9]: activation(1.4304) > threshold(0.0000)? ==> 1.4304
neuronOutput[10]: activation(1.4304) > threshold(0.0000)? ==> 1.4304
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](1.4304)
networkOutput[2] := neuronOutput[10](1.4304)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(21.2090) * weight[3,3](0.1000) => 2.1209
activation[4] = self(21.2090) * weight[4,4](0.1000) => 2.1209
activation[5] = self(21.2090) * weight[5,5](0.1000) => 2.1209
activation[6] = self(1.4304) * weight[6,6](0.1000) => 0.1430
activation[7] = self(1.4304) * weight[7,7](0.1000) => 0.1430
activation[8] = self(1.4304) * weight[8,8](0.1000) => 0.1430
activation[9] = self(1.4304) * weight[9,9](0.1000) => 0.1430
activation[10] = self(1.4304) * weight[10,10](0.1000) => 0.1430
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(2.1209) + output[1](35.5556) * 1.0000 => 37.6765
activation[3] = self(37.6765) + output[7](1.4304) * -0.5000 => 36.9613
activation[3] = self(36.9613) + output[8](1.4304) * -0.5000 => 36.2461
activation[4] = self(2.1209) + output[1](35.5556) * 0.5000 => 19.8987
activation[4] = self(19.8987) + output[2](35.5556) * 0.5000 => 37.6765
activation[4] = self(37.6765) + output[6](1.4304) * -0.5000 => 36.9613
activation[4] = self(36.9613) + output[8](1.4304) * -0.5000 => 36.2461
activation[5] = self(2.1209) + output[2](35.5556) * 1.0000 => 37.6765
activation[5] = self(37.6765) + output[6](1.4304) * -0.5000 => 36.9613
activation[5] = self(36.9613) + output[7](1.4304) * -0.5000 => 36.2461
activation[6] = self(0.1430) + output[3](21.2090) * 1.0000 => 21.3520
activation[7] = self(0.1430) + output[4](21.2090) * 1.0000 => 21.3520
activation[8] = self(0.1430) + output[5](21.2090) * 1.0000 => 21.3520
activation[9] = self(0.1430) + output[3](21.2090) * 0.7500 => 16.0498
activation[9] = self(16.0498) + output[4](21.2090) * 0.2500 => 21.3520
activation[10] = self(0.1430) + output[4](21.2090) * 0.2500 => 5.4453
activation[10] = self(5.4453) + output[5](21.2090) * 0.7500 => 21.3520
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(36.2461) > threshold(0.0000)? ==> 36.2461
neuronOutput[4]: activation(36.2461) > threshold(0.0000)? ==> 36.2461
neuronOutput[5]: activation(36.2461) > threshold(0.0000)? ==> 36.2461
neuronOutput[6]: activation(21.3520) > threshold(0.0000)? ==> 21.3520
neuronOutput[7]: activation(21.3520) > threshold(0.0000)? ==> 21.3520
neuronOutput[8]: activation(21.3520) > threshold(0.0000)? ==> 21.3520
neuronOutput[9]: activation(21.3520) > threshold(0.0000)? ==> 21.3520
neuronOutput[10]: activation(21.3520) > threshold(0.0000)? ==> 21.3520
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](21.3520)
networkOutput[2] := neuronOutput[10](21.3520)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(36.2461) * weight[3,3](0.1000) => 3.6246
activation[4] = self(36.2461) * weight[4,4](0.1000) => 3.6246
activation[5] = self(36.2461) * weight[5,5](0.1000) => 3.6246
activation[6] = self(21.3520) * weight[6,6](0.1000) => 2.1352
activation[7] = self(21.3520) * weight[7,7](0.1000) => 2.1352
activation[8] = self(21.3520) * weight[8,8](0.1000) => 2.1352
activation[9] = self(21.3520) * weight[9,9](0.1000) => 2.1352
activation[10] = self(21.3520) * weight[10,10](0.1000) => 2.1352
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(3.6246) + output[1](35.5556) * 1.0000 => 39.1802
activation[3] = self(39.1802) + output[7](21.3520) * -0.5000 => 28.5042
activation[3] = self(28.5042) + output[8](21.3520) * -0.5000 => 17.8281
activation[4] = self(3.6246) + output[1](35.5556) * 0.5000 => 21.4024
activation[4] = self(21.4024) + output[2](35.5556) * 0.5000 => 39.1802
activation[4] = self(39.1802) + output[6](21.3520) * -0.5000 => 28.5042
activation[4] = self(28.5042) + output[8](21.3520) * -0.5000 => 17.8281
activation[5] = self(3.6246) + output[2](35.5556) * 1.0000 => 39.1802
activation[5] = self(39.1802) + output[6](21.3520) * -0.5000 => 28.5042
activation[5] = self(28.5042) + output[7](21.3520) * -0.5000 => 17.8281
activation[6] = self(2.1352) + output[3](36.2461) * 1.0000 => 38.3813
activation[7] = self(2.1352) + output[4](36.2461) * 1.0000 => 38.3813
activation[8] = self(2.1352) + output[5](36.2461) * 1.0000 => 38.3813
activation[9] = self(2.1352) + output[3](36.2461) * 0.7500 => 29.3198
activation[9] = self(29.3198) + output[4](36.2461) * 0.2500 => 38.3813
activation[10] = self(2.1352) + output[4](36.2461) * 0.2500 => 11.1967
activation[10] = self(11.1967) + output[5](36.2461) * 0.7500 => 38.3813
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(17.8281) > threshold(0.0000)? ==> 17.8281
neuronOutput[4]: activation(17.8281) > threshold(0.0000)? ==> 17.8281
neuronOutput[5]: activation(17.8281) > threshold(0.0000)? ==> 17.8281
neuronOutput[6]: activation(38.3813) > threshold(0.0000)? ==> 38.3813
neuronOutput[7]: activation(38.3813) > threshold(0.0000)? ==> 38.3813
neuronOutput[8]: activation(38.3813) > threshold(0.0000)? ==> 38.3813
neuronOutput[9]: activation(38.3813) > threshold(0.0000)? ==> 38.3813
neuronOutput[10]: activation(38.3813) > threshold(0.0000)? ==> 38.3813
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](38.3813)
networkOutput[2] := neuronOutput[10](38.3813)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(17.8281) * weight[3,3](0.1000) => 1.7828
activation[4] = self(17.8281) * weight[4,4](0.1000) => 1.7828
activation[5] = self(17.8281) * weight[5,5](0.1000) => 1.7828
activation[6] = self(38.3813) * weight[6,6](0.1000) => 3.8381
activation[7] = self(38.3813) * weight[7,7](0.1000) => 3.8381
activation[8] = self(38.3813) * weight[8,8](0.1000) => 3.8381
activation[9] = self(38.3813) * weight[9,9](0.1000) => 3.8381
activation[10] = self(38.3813) * weight[10,10](0.1000) => 3.8381
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(1.7828) + output[1](35.5556) * 1.0000 => 37.3384
activation[3] = self(37.3384) + output[7](38.3813) * -0.5000 => 18.1477
activation[3] = self(18.1477) + output[8](38.3813) * -0.5000 => -1.0429
activation[4] = self(1.7828) + output[1](35.5556) * 0.5000 => 19.5606
activation[4] = self(19.5606) + output[2](35.5556) * 0.5000 => 37.3384
activation[4] = self(37.3384) + output[6](38.3813) * -0.5000 => 18.1477
activation[4] = self(18.1477) + output[8](38.3813) * -0.5000 => -1.0429
activation[5] = self(1.7828) + output[2](35.5556) * 1.0000 => 37.3384
activation[5] = self(37.3384) + output[6](38.3813) * -0.5000 => 18.1477
activation[5] = self(18.1477) + output[7](38.3813) * -0.5000 => -1.0429
activation[6] = self(3.8381) + output[3](17.8281) * 1.0000 => 21.6663
activation[7] = self(3.8381) + output[4](17.8281) * 1.0000 => 21.6663
activation[8] = self(3.8381) + output[5](17.8281) * 1.0000 => 21.6663
activation[9] = self(3.8381) + output[3](17.8281) * 0.7500 => 17.2092
activation[9] = self(17.2092) + output[4](17.8281) * 0.2500 => 21.6663
activation[10] = self(3.8381) + output[4](17.8281) * 0.2500 => 8.2952
activation[10] = self(8.2952) + output[5](17.8281) * 0.7500 => 21.6663
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(-1.0429) > threshold(0.0000)? ==> 0.0000
neuronOutput[4]: activation(-1.0429) > threshold(0.0000)? ==> 0.0000
neuronOutput[5]: activation(-1.0429) > threshold(0.0000)? ==> 0.0000
neuronOutput[6]: activation(21.6663) > threshold(0.0000)? ==> 21.6663
neuronOutput[7]: activation(21.6663) > threshold(0.0000)? ==> 21.6663
neuronOutput[8]: activation(21.6663) > threshold(0.0000)? ==> 21.6663
neuronOutput[9]: activation(21.6663) > threshold(0.0000)? ==> 21.6663
neuronOutput[10]: activation(21.6663) > threshold(0.0000)? ==> 21.6663
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](21.6663)
networkOutput[2] := neuronOutput[10](21.6663)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(-1.0429) * weight[3,3](0.1000) => -0.1043
activation[4] = self(-1.0429) * weight[4,4](0.1000) => -0.1043
activation[5] = self(-1.0429) * weight[5,5](0.1000) => -0.1043
activation[6] = self(21.6663) * weight[6,6](0.1000) => 2.1666
activation[7] = self(21.6663) * weight[7,7](0.1000) => 2.1666
activation[8] = self(21.6663) * weight[8,8](0.1000) => 2.1666
activation[9] = self(21.6663) * weight[9,9](0.1000) => 2.1666
activation[10] = self(21.6663) * weight[10,10](0.1000) => 2.1666
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(-0.1043) + output[1](35.5556) * 1.0000 => 35.4513
activation[3] = self(35.4513) + output[7](21.6663) * -0.5000 => 24.6181
activation[3] = self(24.6181) + output[8](21.6663) * -0.5000 => 13.7850
activation[4] = self(-0.1043) + output[1](35.5556) * 0.5000 => 17.6735
activation[4] = self(17.6735) + output[2](35.5556) * 0.5000 => 35.4513
activation[4] = self(35.4513) + output[6](21.6663) * -0.5000 => 24.6181
activation[4] = self(24.6181) + output[8](21.6663) * -0.5000 => 13.7850
activation[5] = self(-0.1043) + output[2](35.5556) * 1.0000 => 35.4513
activation[5] = self(35.4513) + output[6](21.6663) * -0.5000 => 24.6181
activation[5] = self(24.6181) + output[7](21.6663) * -0.5000 => 13.7850
activation[6] = self(2.1666) + output[3](0.0000) * 1.0000 => 2.1666
activation[7] = self(2.1666) + output[4](0.0000) * 1.0000 => 2.1666
activation[8] = self(2.1666) + output[5](0.0000) * 1.0000 => 2.1666
activation[9] = self(2.1666) + output[3](0.0000) * 0.7500 => 2.1666
activation[9] = self(2.1666) + output[4](0.0000) * 0.2500 => 2.1666
activation[10] = self(2.1666) + output[4](0.0000) * 0.2500 => 2.1666
activation[10] = self(2.1666) + output[5](0.0000) * 0.7500 => 2.1666
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(13.7850) > threshold(0.0000)? ==> 13.7850
neuronOutput[4]: activation(13.7850) > threshold(0.0000)? ==> 13.7850
neuronOutput[5]: activation(13.7850) > threshold(0.0000)? ==> 13.7850
neuronOutput[6]: activation(2.1666) > threshold(0.0000)? ==> 2.1666
neuronOutput[7]: activation(2.1666) > threshold(0.0000)? ==> 2.1666
neuronOutput[8]: activation(2.1666) > threshold(0.0000)? ==> 2.1666
neuronOutput[9]: activation(2.1666) > threshold(0.0000)? ==> 2.1666
neuronOutput[10]: activation(2.1666) > threshold(0.0000)? ==> 2.1666
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](2.1666)
networkOutput[2] := neuronOutput[10](2.1666)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(13.7850) * weight[3,3](0.1000) => 1.3785
activation[4] = self(13.7850) * weight[4,4](0.1000) => 1.3785
activation[5] = self(13.7850) * weight[5,5](0.1000) => 1.3785
activation[6] = self(2.1666) * weight[6,6](0.1000) => 0.2167
activation[7] = self(2.1666) * weight[7,7](0.1000) => 0.2167
activation[8] = self(2.1666) * weight[8,8](0.1000) => 0.2167
activation[9] = self(2.1666) * weight[9,9](0.1000) => 0.2167
activation[10] = self(2.1666) * weight[10,10](0.1000) => 0.2167
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(1.3785) + output[1](35.5556) * 1.0000 => 36.9341
activation[3] = self(36.9341) + output[7](2.1666) * -0.5000 => 35.8507
activation[3] = self(35.8507) + output[8](2.1666) * -0.5000 => 34.7674
activation[4] = self(1.3785) + output[1](35.5556) * 0.5000 => 19.1563
activation[4] = self(19.1563) + output[2](35.5556) * 0.5000 => 36.9341
activation[4] = self(36.9341) + output[6](2.1666) * -0.5000 => 35.8507
activation[4] = self(35.8507) + output[8](2.1666) * -0.5000 => 34.7674
activation[5] = self(1.3785) + output[2](35.5556) * 1.0000 => 36.9341
activation[5] = self(36.9341) + output[6](2.1666) * -0.5000 => 35.8507
activation[5] = self(35.8507) + output[7](2.1666) * -0.5000 => 34.7674
activation[6] = self(0.2167) + output[3](13.7850) * 1.0000 => 14.0017
activation[7] = self(0.2167) + output[4](13.7850) * 1.0000 => 14.0017
activation[8] = self(0.2167) + output[5](13.7850) * 1.0000 => 14.0017
activation[9] = self(0.2167) + output[3](13.7850) * 0.7500 => 10.5554
activation[9] = self(10.5554) + output[4](13.7850) * 0.2500 => 14.0017
activation[10] = self(0.2167) + output[4](13.7850) * 0.2500 => 3.6629
activation[10] = self(3.6629) + output[5](13.7850) * 0.7500 => 14.0017
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(34.7674) > threshold(0.0000)? ==> 34.7674
neuronOutput[4]: activation(34.7674) > threshold(0.0000)? ==> 34.7674
neuronOutput[5]: activation(34.7674) > threshold(0.0000)? ==> 34.7674
neuronOutput[6]: activation(14.0017) > threshold(0.0000)? ==> 14.0017
neuronOutput[7]: activation(14.0017) > threshold(0.0000)? ==> 14.0017
neuronOutput[8]: activation(14.0017) > threshold(0.0000)? ==> 14.0017
neuronOutput[9]: activation(14.0017) > threshold(0.0000)? ==> 14.0017
neuronOutput[10]: activation(14.0017) > threshold(0.0000)? ==> 14.0017
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](14.0017)
networkOutput[2] := neuronOutput[10](14.0017)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(34.7674) * weight[3,3](0.1000) => 3.4767
activation[4] = self(34.7674) * weight[4,4](0.1000) => 3.4767
activation[5] = self(34.7674) * weight[5,5](0.1000) => 3.4767
activation[6] = self(14.0017) * weight[6,6](0.1000) => 1.4002
activation[7] = self(14.0017) * weight[7,7](0.1000) => 1.4002
activation[8] = self(14.0017) * weight[8,8](0.1000) => 1.4002
activation[9] = self(14.0017) * weight[9,9](0.1000) => 1.4002
activation[10] = self(14.0017) * weight[10,10](0.1000) => 1.4002
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(3.4767) + output[1](35.5556) * 1.0000 => 39.0323
activation[3] = self(39.0323) + output[7](14.0017) * -0.5000 => 32.0315
activation[3] = self(32.0315) + output[8](14.0017) * -0.5000 => 25.0307
activation[4] = self(3.4767) + output[1](35.5556) * 0.5000 => 21.2545
activation[4] = self(21.2545) + output[2](35.5556) * 0.5000 => 39.0323
activation[4] = self(39.0323) + output[6](14.0017) * -0.5000 => 32.0315
activation[4] = self(32.0315) + output[8](14.0017) * -0.5000 => 25.0307
activation[5] = self(3.4767) + output[2](35.5556) * 1.0000 => 39.0323
activation[5] = self(39.0323) + output[6](14.0017) * -0.5000 => 32.0315
activation[5] = self(32.0315) + output[7](14.0017) * -0.5000 => 25.0307
activation[6] = self(1.4002) + output[3](34.7674) * 1.0000 => 36.1676
activation[7] = self(1.4002) + output[4](34.7674) * 1.0000 => 36.1676
activation[8] = self(1.4002) + output[5](34.7674) * 1.0000 => 36.1676
activation[9] = self(1.4002) + output[3](34.7674) * 0.7500 => 27.4757
activation[9] = self(27.4757) + output[4](34.7674) * 0.2500 => 36.1676
activation[10] = self(1.4002) + output[4](34.7674) * 0.2500 => 10.0920
activation[10] = self(10.0920) + output[5](34.7674) * 0.7500 => 36.1676
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(25.0307) > threshold(0.0000)? ==> 25.0307
neuronOutput[4]: activation(25.0307) > threshold(0.0000)? ==> 25.0307
neuronOutput[5]: activation(25.0307) > threshold(0.0000)? ==> 25.0307
neuronOutput[6]: activation(36.1676) > threshold(0.0000)? ==> 36.1676
neuronOutput[7]: activation(36.1676) > threshold(0.0000)? ==> 36.1676
neuronOutput[8]: activation(36.1676) > threshold(0.0000)? ==> 36.1676
neuronOutput[9]: activation(36.1676) > threshold(0.0000)? ==> 36.1676
neuronOutput[10]: activation(36.1676) > threshold(0.0000)? ==> 36.1676
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](36.1676)
networkOutput[2] := neuronOutput[10](36.1676)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(25.0307) * weight[3,3](0.1000) => 2.5031
activation[4] = self(25.0307) * weight[4,4](0.1000) => 2.5031
activation[5] = self(25.0307) * weight[5,5](0.1000) => 2.5031
activation[6] = self(36.1676) * weight[6,6](0.1000) => 3.6168
activation[7] = self(36.1676) * weight[7,7](0.1000) => 3.6168
activation[8] = self(36.1676) * weight[8,8](0.1000) => 3.6168
activation[9] = self(36.1676) * weight[9,9](0.1000) => 3.6168
activation[10] = self(36.1676) * weight[10,10](0.1000) => 3.6168
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(2.5031) + output[1](35.5556) * 1.0000 => 38.0586
activation[3] = self(38.0586) + output[7](36.1676) * -0.5000 => 19.9748
activation[3] = self(19.9748) + output[8](36.1676) * -0.5000 => 1.8910
activation[4] = self(2.5031) + output[1](35.5556) * 0.5000 => 20.2808
activation[4] = self(20.2808) + output[2](35.5556) * 0.5000 => 38.0586
activation[4] = self(38.0586) + output[6](36.1676) * -0.5000 => 19.9748
activation[4] = self(19.9748) + output[8](36.1676) * -0.5000 => 1.8910
activation[5] = self(2.5031) + output[2](35.5556) * 1.0000 => 38.0586
activation[5] = self(38.0586) + output[6](36.1676) * -0.5000 => 19.9748
activation[5] = self(19.9748) + output[7](36.1676) * -0.5000 => 1.8910
activation[6] = self(3.6168) + output[3](25.0307) * 1.0000 => 28.6474
activation[7] = self(3.6168) + output[4](25.0307) * 1.0000 => 28.6474
activation[8] = self(3.6168) + output[5](25.0307) * 1.0000 => 28.6474
activation[9] = self(3.6168) + output[3](25.0307) * 0.7500 => 22.3897
activation[9] = self(22.3897) + output[4](25.0307) * 0.2500 => 28.6474
activation[10] = self(3.6168) + output[4](25.0307) * 0.2500 => 9.8744
activation[10] = self(9.8744) + output[5](25.0307) * 0.7500 => 28.6474
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(1.8910) > threshold(0.0000)? ==> 1.8910
neuronOutput[4]: activation(1.8910) > threshold(0.0000)? ==> 1.8910
neuronOutput[5]: activation(1.8910) > threshold(0.0000)? ==> 1.8910
neuronOutput[6]: activation(28.6474) > threshold(0.0000)? ==> 28.6474
neuronOutput[7]: activation(28.6474) > threshold(0.0000)? ==> 28.6474
neuronOutput[8]: activation(28.6474) > threshold(0.0000)? ==> 28.6474
neuronOutput[9]: activation(28.6474) > threshold(0.0000)? ==> 28.6474
neuronOutput[10]: activation(28.6474) > threshold(0.0000)? ==> 28.6474
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](28.6474)
networkOutput[2] := neuronOutput[10](28.6474)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(1.8910) * weight[3,3](0.1000) => 0.1891
activation[4] = self(1.8910) * weight[4,4](0.1000) => 0.1891
activation[5] = self(1.8910) * weight[5,5](0.1000) => 0.1891
activation[6] = self(28.6474) * weight[6,6](0.1000) => 2.8647
activation[7] = self(28.6474) * weight[7,7](0.1000) => 2.8647
activation[8] = self(28.6474) * weight[8,8](0.1000) => 2.8647
activation[9] = self(28.6474) * weight[9,9](0.1000) => 2.8647
activation[10] = self(28.6474) * weight[10,10](0.1000) => 2.8647
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(0.1891) + output[1](35.5556) * 1.0000 => 35.7447
activation[3] = self(35.7447) + output[7](28.6474) * -0.5000 => 21.4210
activation[3] = self(21.4210) + output[8](28.6474) * -0.5000 => 7.0973
activation[4] = self(0.1891) + output[1](35.5556) * 0.5000 => 17.9669
activation[4] = self(17.9669) + output[2](35.5556) * 0.5000 => 35.7447
activation[4] = self(35.7447) + output[6](28.6474) * -0.5000 => 21.4210
activation[4] = self(21.4210) + output[8](28.6474) * -0.5000 => 7.0973
activation[5] = self(0.1891) + output[2](35.5556) * 1.0000 => 35.7447
activation[5] = self(35.7447) + output[6](28.6474) * -0.5000 => 21.4210
activation[5] = self(21.4210) + output[7](28.6474) * -0.5000 => 7.0973
activation[6] = self(2.8647) + output[3](1.8910) * 1.0000 => 4.7558
activation[7] = self(2.8647) + output[4](1.8910) * 1.0000 => 4.7558
activation[8] = self(2.8647) + output[5](1.8910) * 1.0000 => 4.7558
activation[9] = self(2.8647) + output[3](1.8910) * 0.7500 => 4.2830
activation[9] = self(4.2830) + output[4](1.8910) * 0.2500 => 4.7558
activation[10] = self(2.8647) + output[4](1.8910) * 0.2500 => 3.3375
activation[10] = self(3.3375) + output[5](1.8910) * 0.7500 => 4.7558
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(7.0973) > threshold(0.0000)? ==> 7.0973
neuronOutput[4]: activation(7.0973) > threshold(0.0000)? ==> 7.0973
neuronOutput[5]: activation(7.0973) > threshold(0.0000)? ==> 7.0973
neuronOutput[6]: activation(4.7558) > threshold(0.0000)? ==> 4.7558
neuronOutput[7]: activation(4.7558) > threshold(0.0000)? ==> 4.7558
neuronOutput[8]: activation(4.7558) > threshold(0.0000)? ==> 4.7558
neuronOutput[9]: activation(4.7558) > threshold(0.0000)? ==> 4.7558
neuronOutput[10]: activation(4.7558) > threshold(0.0000)? ==> 4.7558
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](4.7558)
networkOutput[2] := neuronOutput[10](4.7558)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(7.0973) * weight[3,3](0.1000) => 0.7097
activation[4] = self(7.0973) * weight[4,4](0.1000) => 0.7097
activation[5] = self(7.0973) * weight[5,5](0.1000) => 0.7097
activation[6] = self(4.7558) * weight[6,6](0.1000) => 0.4756
activation[7] = self(4.7558) * weight[7,7](0.1000) => 0.4756
activation[8] = self(4.7558) * weight[8,8](0.1000) => 0.4756
activation[9] = self(4.7558) * weight[9,9](0.1000) => 0.4756
activation[10] = self(4.7558) * weight[10,10](0.1000) => 0.4756
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(0.7097) + output[1](35.5556) * 1.0000 => 36.2653
activation[3] = self(36.2653) + output[7](4.7558) * -0.5000 => 33.8874
activation[3] = self(33.8874) + output[8](4.7558) * -0.5000 => 31.5095
activation[4] = self(0.7097) + output[1](35.5556) * 0.5000 => 18.4875
activation[4] = self(18.4875) + output[2](35.5556) * 0.5000 => 36.2653
activation[4] = self(36.2653) + output[6](4.7558) * -0.5000 => 33.8874
activation[4] = self(33.8874) + output[8](4.7558) * -0.5000 => 31.5095
activation[5] = self(0.7097) + output[2](35.5556) * 1.0000 => 36.2653
activation[5] = self(36.2653) + output[6](4.7558) * -0.5000 => 33.8874
activation[5] = self(33.8874) + output[7](4.7558) * -0.5000 => 31.5095
activation[6] = self(0.4756) + output[3](7.0973) * 1.0000 => 7.5728
activation[7] = self(0.4756) + output[4](7.0973) * 1.0000 => 7.5728
activation[8] = self(0.4756) + output[5](7.0973) * 1.0000 => 7.5728
activation[9] = self(0.4756) + output[3](7.0973) * 0.7500 => 5.7985
activation[9] = self(5.7985) + output[4](7.0973) * 0.2500 => 7.5728
activation[10] = self(0.4756) + output[4](7.0973) * 0.2500 => 2.2499
activation[10] = self(2.2499) + output[5](7.0973) * 0.7500 => 7.5728
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(31.5095) > threshold(0.0000)? ==> 31.5095
neuronOutput[4]: activation(31.5095) > threshold(0.0000)? ==> 31.5095
neuronOutput[5]: activation(31.5095) > threshold(0.0000)? ==> 31.5095
neuronOutput[6]: activation(7.5728) > threshold(0.0000)? ==> 7.5728
neuronOutput[7]: activation(7.5728) > threshold(0.0000)? ==> 7.5728
neuronOutput[8]: activation(7.5728) > threshold(0.0000)? ==> 7.5728
neuronOutput[9]: activation(7.5728) > threshold(0.0000)? ==> 7.5728
neuronOutput[10]: activation(7.5728) > threshold(0.0000)? ==> 7.5728
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](7.5728)
networkOutput[2] := neuronOutput[10](7.5728)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(31.5095) * weight[3,3](0.1000) => 3.1510
activation[4] = self(31.5095) * weight[4,4](0.1000) => 3.1510
activation[5] = self(31.5095) * weight[5,5](0.1000) => 3.1510
activation[6] = self(7.5728) * weight[6,6](0.1000) => 0.7573
activation[7] = self(7.5728) * weight[7,7](0.1000) => 0.7573
activation[8] = self(7.5728) * weight[8,8](0.1000) => 0.7573
activation[9] = self(7.5728) * weight[9,9](0.1000) => 0.7573
activation[10] = self(7.5728) * weight[10,10](0.1000) => 0.7573
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(3.1510) + output[1](35.5556) * 1.0000 => 38.7065
activation[3] = self(38.7065) + output[7](7.5728) * -0.5000 => 34.9201
activation[3] = self(34.9201) + output[8](7.5728) * -0.5000 => 31.1337
activation[4] = self(3.1510) + output[1](35.5556) * 0.5000 => 20.9287
activation[4] = self(20.9287) + output[2](35.5556) * 0.5000 => 38.7065
activation[4] = self(38.7065) + output[6](7.5728) * -0.5000 => 34.9201
activation[4] = self(34.9201) + output[8](7.5728) * -0.5000 => 31.1337
activation[5] = self(3.1510) + output[2](35.5556) * 1.0000 => 38.7065
activation[5] = self(38.7065) + output[6](7.5728) * -0.5000 => 34.9201
activation[5] = self(34.9201) + output[7](7.5728) * -0.5000 => 31.1337
activation[6] = self(0.7573) + output[3](31.5095) * 1.0000 => 32.2668
activation[7] = self(0.7573) + output[4](31.5095) * 1.0000 => 32.2668
activation[8] = self(0.7573) + output[5](31.5095) * 1.0000 => 32.2668
activation[9] = self(0.7573) + output[3](31.5095) * 0.7500 => 24.3894
activation[9] = self(24.3894) + output[4](31.5095) * 0.2500 => 32.2668
activation[10] = self(0.7573) + output[4](31.5095) * 0.2500 => 8.6347
activation[10] = self(8.6347) + output[5](31.5095) * 0.7500 => 32.2668
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(31.1337) > threshold(0.0000)? ==> 31.1337
neuronOutput[4]: activation(31.1337) > threshold(0.0000)? ==> 31.1337
neuronOutput[5]: activation(31.1337) > threshold(0.0000)? ==> 31.1337
neuronOutput[6]: activation(32.2668) > threshold(0.0000)? ==> 32.2668
neuronOutput[7]: activation(32.2668) > threshold(0.0000)? ==> 32.2668
neuronOutput[8]: activation(32.2668) > threshold(0.0000)? ==> 32.2668
neuronOutput[9]: activation(32.2668) > threshold(0.0000)? ==> 32.2668
neuronOutput[10]: activation(32.2668) > threshold(0.0000)? ==> 32.2668
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](32.2668)
networkOutput[2] := neuronOutput[10](32.2668)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(31.1337) * weight[3,3](0.1000) => 3.1134
activation[4] = self(31.1337) * weight[4,4](0.1000) => 3.1134
activation[5] = self(31.1337) * weight[5,5](0.1000) => 3.1134
activation[6] = self(32.2668) * weight[6,6](0.1000) => 3.2267
activation[7] = self(32.2668) * weight[7,7](0.1000) => 3.2267
activation[8] = self(32.2668) * weight[8,8](0.1000) => 3.2267
activation[9] = self(32.2668) * weight[9,9](0.1000) => 3.2267
activation[10] = self(32.2668) * weight[10,10](0.1000) => 3.2267
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(3.1134) + output[1](35.5556) * 1.0000 => 38.6689
activation[3] = self(38.6689) + output[7](32.2668) * -0.5000 => 22.5355
activation[3] = self(22.5355) + output[8](32.2668) * -0.5000 => 6.4021
activation[4] = self(3.1134) + output[1](35.5556) * 0.5000 => 20.8912
activation[4] = self(20.8912) + output[2](35.5556) * 0.5000 => 38.6689
activation[4] = self(38.6689) + output[6](32.2668) * -0.5000 => 22.5355
activation[4] = self(22.5355) + output[8](32.2668) * -0.5000 => 6.4021
activation[5] = self(3.1134) + output[2](35.5556) * 1.0000 => 38.6689
activation[5] = self(38.6689) + output[6](32.2668) * -0.5000 => 22.5355
activation[5] = self(22.5355) + output[7](32.2668) * -0.5000 => 6.4021
activation[6] = self(3.2267) + output[3](31.1337) * 1.0000 => 34.3604
activation[7] = self(3.2267) + output[4](31.1337) * 1.0000 => 34.3604
activation[8] = self(3.2267) + output[5](31.1337) * 1.0000 => 34.3604
activation[9] = self(3.2267) + output[3](31.1337) * 0.7500 => 26.5769
activation[9] = self(26.5769) + output[4](31.1337) * 0.2500 => 34.3604
activation[10] = self(3.2267) + output[4](31.1337) * 0.2500 => 11.0101
activation[10] = self(11.0101) + output[5](31.1337) * 0.7500 => 34.3604
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(6.4021) > threshold(0.0000)? ==> 6.4021
neuronOutput[4]: activation(6.4021) > threshold(0.0000)? ==> 6.4021
neuronOutput[5]: activation(6.4021) > threshold(0.0000)? ==> 6.4021
neuronOutput[6]: activation(34.3604) > threshold(0.0000)? ==> 34.3604
neuronOutput[7]: activation(34.3604) > threshold(0.0000)? ==> 34.3604
neuronOutput[8]: activation(34.3604) > threshold(0.0000)? ==> 34.3604
neuronOutput[9]: activation(34.3604) > threshold(0.0000)? ==> 34.3604
neuronOutput[10]: activation(34.3604) > threshold(0.0000)? ==> 34.3604
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](34.3604)
networkOutput[2] := neuronOutput[10](34.3604)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(6.4021) * weight[3,3](0.1000) => 0.6402
activation[4] = self(6.4021) * weight[4,4](0.1000) => 0.6402
activation[5] = self(6.4021) * weight[5,5](0.1000) => 0.6402
activation[6] = self(34.3604) * weight[6,6](0.1000) => 3.4360
activation[7] = self(34.3604) * weight[7,7](0.1000) => 3.4360
activation[8] = self(34.3604) * weight[8,8](0.1000) => 3.4360
activation[9] = self(34.3604) * weight[9,9](0.1000) => 3.4360
activation[10] = self(34.3604) * weight[10,10](0.1000) => 3.4360
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(0.6402) + output[1](35.5556) * 1.0000 => 36.1958
activation[3] = self(36.1958) + output[7](34.3604) * -0.5000 => 19.0156
activation[3] = self(19.0156) + output[8](34.3604) * -0.5000 => 1.8354
activation[4] = self(0.6402) + output[1](35.5556) * 0.5000 => 18.4180
activation[4] = self(18.4180) + output[2](35.5556) * 0.5000 => 36.1958
activation[4] = self(36.1958) + output[6](34.3604) * -0.5000 => 19.0156
activation[4] = self(19.0156) + output[8](34.3604) * -0.5000 => 1.8354
activation[5] = self(0.6402) + output[2](35.5556) * 1.0000 => 36.1958
activation[5] = self(36.1958) + output[6](34.3604) * -0.5000 => 19.0156
activation[5] = self(19.0156) + output[7](34.3604) * -0.5000 => 1.8354
activation[6] = self(3.4360) + output[3](6.4021) * 1.0000 => 9.8382
activation[7] = self(3.4360) + output[4](6.4021) * 1.0000 => 9.8382
activation[8] = self(3.4360) + output[5](6.4021) * 1.0000 => 9.8382
activation[9] = self(3.4360) + output[3](6.4021) * 0.7500 => 8.2376
activation[9] = self(8.2376) + output[4](6.4021) * 0.2500 => 9.8382
activation[10] = self(3.4360) + output[4](6.4021) * 0.2500 => 5.0366
activation[10] = self(5.0366) + output[5](6.4021) * 0.7500 => 9.8382
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(1.8354) > threshold(0.0000)? ==> 1.8354
neuronOutput[4]: activation(1.8354) > threshold(0.0000)? ==> 1.8354
neuronOutput[5]: activation(1.8354) > threshold(0.0000)? ==> 1.8354
neuronOutput[6]: activation(9.8382) > threshold(0.0000)? ==> 9.8382
neuronOutput[7]: activation(9.8382) > threshold(0.0000)? ==> 9.8382
neuronOutput[8]: activation(9.8382) > threshold(0.0000)? ==> 9.8382
neuronOutput[9]: activation(9.8382) > threshold(0.0000)? ==> 9.8382
neuronOutput[10]: activation(9.8382) > threshold(0.0000)? ==> 9.8382
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](9.8382)
networkOutput[2] := neuronOutput[10](9.8382)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(1.8354) * weight[3,3](0.1000) => 0.1835
activation[4] = self(1.8354) * weight[4,4](0.1000) => 0.1835
activation[5] = self(1.8354) * weight[5,5](0.1000) => 0.1835
activation[6] = self(9.8382) * weight[6,6](0.1000) => 0.9838
activation[7] = self(9.8382) * weight[7,7](0.1000) => 0.9838
activation[8] = self(9.8382) * weight[8,8](0.1000) => 0.9838
activation[9] = self(9.8382) * weight[9,9](0.1000) => 0.9838
activation[10] = self(9.8382) * weight[10,10](0.1000) => 0.9838
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(0.1835) + output[1](35.5556) * 1.0000 => 35.7391
activation[3] = self(35.7391) + output[7](9.8382) * -0.5000 => 30.8200
activation[3] = self(30.8200) + output[8](9.8382) * -0.5000 => 25.9009
activation[4] = self(0.1835) + output[1](35.5556) * 0.5000 => 17.9613
activation[4] = self(17.9613) + output[2](35.5556) * 0.5000 => 35.7391
activation[4] = self(35.7391) + output[6](9.8382) * -0.5000 => 30.8200
activation[4] = self(30.8200) + output[8](9.8382) * -0.5000 => 25.9009
activation[5] = self(0.1835) + output[2](35.5556) * 1.0000 => 35.7391
activation[5] = self(35.7391) + output[6](9.8382) * -0.5000 => 30.8200
activation[5] = self(30.8200) + output[7](9.8382) * -0.5000 => 25.9009
activation[6] = self(0.9838) + output[3](1.8354) * 1.0000 => 2.8192
activation[7] = self(0.9838) + output[4](1.8354) * 1.0000 => 2.8192
activation[8] = self(0.9838) + output[5](1.8354) * 1.0000 => 2.8192
activation[9] = self(0.9838) + output[3](1.8354) * 0.7500 => 2.3604
activation[9] = self(2.3604) + output[4](1.8354) * 0.2500 => 2.8192
activation[10] = self(0.9838) + output[4](1.8354) * 0.2500 => 1.4427
activation[10] = self(1.4427) + output[5](1.8354) * 0.7500 => 2.8192
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(25.9009) > threshold(0.0000)? ==> 25.9009
neuronOutput[4]: activation(25.9009) > threshold(0.0000)? ==> 25.9009
neuronOutput[5]: activation(25.9009) > threshold(0.0000)? ==> 25.9009
neuronOutput[6]: activation(2.8192) > threshold(0.0000)? ==> 2.8192
neuronOutput[7]: activation(2.8192) > threshold(0.0000)? ==> 2.8192
neuronOutput[8]: activation(2.8192) > threshold(0.0000)? ==> 2.8192
neuronOutput[9]: activation(2.8192) > threshold(0.0000)? ==> 2.8192
neuronOutput[10]: activation(2.8192) > threshold(0.0000)? ==> 2.8192
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](2.8192)
networkOutput[2] := neuronOutput[10](2.8192)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(25.9009) * weight[3,3](0.1000) => 2.5901
activation[4] = self(25.9009) * weight[4,4](0.1000) => 2.5901
activation[5] = self(25.9009) * weight[5,5](0.1000) => 2.5901
activation[6] = self(2.8192) * weight[6,6](0.1000) => 0.2819
activation[7] = self(2.8192) * weight[7,7](0.1000) => 0.2819
activation[8] = self(2.8192) * weight[8,8](0.1000) => 0.2819
activation[9] = self(2.8192) * weight[9,9](0.1000) => 0.2819
activation[10] = self(2.8192) * weight[10,10](0.1000) => 0.2819
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(2.5901) + output[1](35.5556) * 1.0000 => 38.1457
activation[3] = self(38.1457) + output[7](2.8192) * -0.5000 => 36.7360
activation[3] = self(36.7360) + output[8](2.8192) * -0.5000 => 35.3264
activation[4] = self(2.5901) + output[1](35.5556) * 0.5000 => 20.3679
activation[4] = self(20.3679) + output[2](35.5556) * 0.5000 => 38.1457
activation[4] = self(38.1457) + output[6](2.8192) * -0.5000 => 36.7360
activation[4] = self(36.7360) + output[8](2.8192) * -0.5000 => 35.3264
activation[5] = self(2.5901) + output[2](35.5556) * 1.0000 => 38.1457
activation[5] = self(38.1457) + output[6](2.8192) * -0.5000 => 36.7360
activation[5] = self(36.7360) + output[7](2.8192) * -0.5000 => 35.3264
activation[6] = self(0.2819) + output[3](25.9009) * 1.0000 => 26.1829
activation[7] = self(0.2819) + output[4](25.9009) * 1.0000 => 26.1829
activation[8] = self(0.2819) + output[5](25.9009) * 1.0000 => 26.1829
activation[9] = self(0.2819) + output[3](25.9009) * 0.7500 => 19.7076
activation[9] = self(19.7076) + output[4](25.9009) * 0.2500 => 26.1829
activation[10] = self(0.2819) + output[4](25.9009) * 0.2500 => 6.7572
activation[10] = self(6.7572) + output[5](25.9009) * 0.7500 => 26.1829
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(35.3264) > threshold(0.0000)? ==> 35.3264
neuronOutput[4]: activation(35.3264) > threshold(0.0000)? ==> 35.3264
neuronOutput[5]: activation(35.3264) > threshold(0.0000)? ==> 35.3264
neuronOutput[6]: activation(26.1829) > threshold(0.0000)? ==> 26.1829
neuronOutput[7]: activation(26.1829) > threshold(0.0000)? ==> 26.1829
neuronOutput[8]: activation(26.1829) > threshold(0.0000)? ==> 26.1829
neuronOutput[9]: activation(26.1829) > threshold(0.0000)? ==> 26.1829
neuronOutput[10]: activation(26.1829) > threshold(0.0000)? ==> 26.1829
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](26.1829)
networkOutput[2] := neuronOutput[10](26.1829)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(35.3264) * weight[3,3](0.1000) => 3.5326
activation[4] = self(35.3264) * weight[4,4](0.1000) => 3.5326
activation[5] = self(35.3264) * weight[5,5](0.1000) => 3.5326
activation[6] = self(26.1829) * weight[6,6](0.1000) => 2.6183
activation[7] = self(26.1829) * weight[7,7](0.1000) => 2.6183
activation[8] = self(26.1829) * weight[8,8](0.1000) => 2.6183
activation[9] = self(26.1829) * weight[9,9](0.1000) => 2.6183
activation[10] = self(26.1829) * weight[10,10](0.1000) => 2.6183
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(3.5326) + output[1](35.5556) * 1.0000 => 39.0882
activation[3] = self(39.0882) + output[7](26.1829) * -0.5000 => 25.9968
activation[3] = self(25.9968) + output[8](26.1829) * -0.5000 => 12.9053
activation[4] = self(3.5326) + output[1](35.5556) * 0.5000 => 21.3104
activation[4] = self(21.3104) + output[2](35.5556) * 0.5000 => 39.0882
activation[4] = self(39.0882) + output[6](26.1829) * -0.5000 => 25.9968
activation[4] = self(25.9968) + output[8](26.1829) * -0.5000 => 12.9053
activation[5] = self(3.5326) + output[2](35.5556) * 1.0000 => 39.0882
activation[5] = self(39.0882) + output[6](26.1829) * -0.5000 => 25.9968
activation[5] = self(25.9968) + output[7](26.1829) * -0.5000 => 12.9053
activation[6] = self(2.6183) + output[3](35.3264) * 1.0000 => 37.9447
activation[7] = self(2.6183) + output[4](35.3264) * 1.0000 => 37.9447
activation[8] = self(2.6183) + output[5](35.3264) * 1.0000 => 37.9447
activation[9] = self(2.6183) + output[3](35.3264) * 0.7500 => 29.1131
activation[9] = self(29.1131) + output[4](35.3264) * 0.2500 => 37.9447
activation[10] = self(2.6183) + output[4](35.3264) * 0.2500 => 11.4499
activation[10] = self(11.4499) + output[5](35.3264) * 0.7500 => 37.9447
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(12.9053) > threshold(0.0000)? ==> 12.9053
neuronOutput[4]: activation(12.9053) > threshold(0.0000)? ==> 12.9053
neuronOutput[5]: activation(12.9053) > threshold(0.0000)? ==> 12.9053
neuronOutput[6]: activation(37.9447) > threshold(0.0000)? ==> 37.9447
neuronOutput[7]: activation(37.9447) > threshold(0.0000)? ==> 37.9447
neuronOutput[8]: activation(37.9447) > threshold(0.0000)? ==> 37.9447
neuronOutput[9]: activation(37.9447) > threshold(0.0000)? ==> 37.9447
neuronOutput[10]: activation(37.9447) > threshold(0.0000)? ==> 37.9447
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](37.9447)
networkOutput[2] := neuronOutput[10](37.9447)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(12.9053) * weight[3,3](0.1000) => 1.2905
activation[4] = self(12.9053) * weight[4,4](0.1000) => 1.2905
activation[5] = self(12.9053) * weight[5,5](0.1000) => 1.2905
activation[6] = self(37.9447) * weight[6,6](0.1000) => 3.7945
activation[7] = self(37.9447) * weight[7,7](0.1000) => 3.7945
activation[8] = self(37.9447) * weight[8,8](0.1000) => 3.7945
activation[9] = self(37.9447) * weight[9,9](0.1000) => 3.7945
activation[10] = self(37.9447) * weight[10,10](0.1000) => 3.7945
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(1.2905) + output[1](35.5556) * 1.0000 => 36.8461
activation[3] = self(36.8461) + output[7](37.9447) * -0.5000 => 17.8737
activation[3] = self(17.8737) + output[8](37.9447) * -0.5000 => -1.0986
activation[4] = self(1.2905) + output[1](35.5556) * 0.5000 => 19.0683
activation[4] = self(19.0683) + output[2](35.5556) * 0.5000 => 36.8461
activation[4] = self(36.8461) + output[6](37.9447) * -0.5000 => 17.8737
activation[4] = self(17.8737) + output[8](37.9447) * -0.5000 => -1.0986
activation[5] = self(1.2905) + output[2](35.5556) * 1.0000 => 36.8461
activation[5] = self(36.8461) + output[6](37.9447) * -0.5000 => 17.8737
activation[5] = self(17.8737) + output[7](37.9447) * -0.5000 => -1.0986
activation[6] = self(3.7945) + output[3](12.9053) * 1.0000 => 16.6998
activation[7] = self(3.7945) + output[4](12.9053) * 1.0000 => 16.6998
activation[8] = self(3.7945) + output[5](12.9053) * 1.0000 => 16.6998
activation[9] = self(3.7945) + output[3](12.9053) * 0.7500 => 13.4735
activation[9] = self(13.4735) + output[4](12.9053) * 0.2500 => 16.6998
activation[10] = self(3.7945) + output[4](12.9053) * 0.2500 => 7.0208
activation[10] = self(7.0208) + output[5](12.9053) * 0.7500 => 16.6998
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(-1.0986) > threshold(0.0000)? ==> 0.0000
neuronOutput[4]: activation(-1.0986) > threshold(0.0000)? ==> 0.0000
neuronOutput[5]: activation(-1.0986) > threshold(0.0000)? ==> 0.0000
neuronOutput[6]: activation(16.6998) > threshold(0.0000)? ==> 16.6998
neuronOutput[7]: activation(16.6998) > threshold(0.0000)? ==> 16.6998
neuronOutput[8]: activation(16.6998) > threshold(0.0000)? ==> 16.6998
neuronOutput[9]: activation(16.6998) > threshold(0.0000)? ==> 16.6998
neuronOutput[10]: activation(16.6998) > threshold(0.0000)? ==> 16.6998
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](16.6998)
networkOutput[2] := neuronOutput[10](16.6998)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(-1.0986) * weight[3,3](0.1000) => -0.1099
activation[4] = self(-1.0986) * weight[4,4](0.1000) => -0.1099
activation[5] = self(-1.0986) * weight[5,5](0.1000) => -0.1099
activation[6] = self(16.6998) * weight[6,6](0.1000) => 1.6700
activation[7] = self(16.6998) * weight[7,7](0.1000) => 1.6700
activation[8] = self(16.6998) * weight[8,8](0.1000) => 1.6700
activation[9] = self(16.6998) * weight[9,9](0.1000) => 1.6700
activation[10] = self(16.6998) * weight[10,10](0.1000) => 1.6700
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(-0.1099) + output[1](35.5556) * 1.0000 => 35.4457
activation[3] = self(35.4457) + output[7](16.6998) * -0.5000 => 27.0958
activation[3] = self(27.0958) + output[8](16.6998) * -0.5000 => 18.7459
activation[4] = self(-0.1099) + output[1](35.5556) * 0.5000 => 17.6679
activation[4] = self(17.6679) + output[2](35.5556) * 0.5000 => 35.4457
activation[4] = self(35.4457) + output[6](16.6998) * -0.5000 => 27.0958
activation[4] = self(27.0958) + output[8](16.6998) * -0.5000 => 18.7459
activation[5] = self(-0.1099) + output[2](35.5556) * 1.0000 => 35.4457
activation[5] = self(35.4457) + output[6](16.6998) * -0.5000 => 27.0958
activation[5] = self(27.0958) + output[7](16.6998) * -0.5000 => 18.7459
activation[6] = self(1.6700) + output[3](0.0000) * 1.0000 => 1.6700
activation[7] = self(1.6700) + output[4](0.0000) * 1.0000 => 1.6700
activation[8] = self(1.6700) + output[5](0.0000) * 1.0000 => 1.6700
activation[9] = self(1.6700) + output[3](0.0000) * 0.7500 => 1.6700
activation[9] = self(1.6700) + output[4](0.0000) * 0.2500 => 1.6700
activation[10] = self(1.6700) + output[4](0.0000) * 0.2500 => 1.6700
activation[10] = self(1.6700) + output[5](0.0000) * 0.7500 => 1.6700
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(18.7459) > threshold(0.0000)? ==> 18.7459
neuronOutput[4]: activation(18.7459) > threshold(0.0000)? ==> 18.7459
neuronOutput[5]: activation(18.7459) > threshold(0.0000)? ==> 18.7459
neuronOutput[6]: activation(1.6700) > threshold(0.0000)? ==> 1.6700
neuronOutput[7]: activation(1.6700) > threshold(0.0000)? ==> 1.6700
neuronOutput[8]: activation(1.6700) > threshold(0.0000)? ==> 1.6700
neuronOutput[9]: activation(1.6700) > threshold(0.0000)? ==> 1.6700
neuronOutput[10]: activation(1.6700) > threshold(0.0000)? ==> 1.6700
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](1.6700)
networkOutput[2] := neuronOutput[10](1.6700)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(18.7459) * weight[3,3](0.1000) => 1.8746
activation[4] = self(18.7459) * weight[4,4](0.1000) => 1.8746
activation[5] = self(18.7459) * weight[5,5](0.1000) => 1.8746
activation[6] = self(1.6700) * weight[6,6](0.1000) => 0.1670
activation[7] = self(1.6700) * weight[7,7](0.1000) => 0.1670
activation[8] = self(1.6700) * weight[8,8](0.1000) => 0.1670
activation[9] = self(1.6700) * weight[9,9](0.1000) => 0.1670
activation[10] = self(1.6700) * weight[10,10](0.1000) => 0.1670
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(1.8746) + output[1](35.5556) * 1.0000 => 37.4302
activation[3] = self(37.4302) + output[7](1.6700) * -0.5000 => 36.5952
activation[3] = self(36.5952) + output[8](1.6700) * -0.5000 => 35.7602
activation[4] = self(1.8746) + output[1](35.5556) * 0.5000 => 19.6524
activation[4] = self(19.6524) + output[2](35.5556) * 0.5000 => 37.4302
activation[4] = self(37.4302) + output[6](1.6700) * -0.5000 => 36.5952
activation[4] = self(36.5952) + output[8](1.6700) * -0.5000 => 35.7602
activation[5] = self(1.8746) + output[2](35.5556) * 1.0000 => 37.4302
activation[5] = self(37.4302) + output[6](1.6700) * -0.5000 => 36.5952
activation[5] = self(36.5952) + output[7](1.6700) * -0.5000 => 35.7602
activation[6] = self(0.1670) + output[3](18.7459) * 1.0000 => 18.9129
activation[7] = self(0.1670) + output[4](18.7459) * 1.0000 => 18.9129
activation[8] = self(0.1670) + output[5](18.7459) * 1.0000 => 18.9129
activation[9] = self(0.1670) + output[3](18.7459) * 0.7500 => 14.2264
activation[9] = self(14.2264) + output[4](18.7459) * 0.2500 => 18.9129
activation[10] = self(0.1670) + output[4](18.7459) * 0.2500 => 4.8535
activation[10] = self(4.8535) + output[5](18.7459) * 0.7500 => 18.9129
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(35.7602) > threshold(0.0000)? ==> 35.7602
neuronOutput[4]: activation(35.7602) > threshold(0.0000)? ==> 35.7602
neuronOutput[5]: activation(35.7602) > threshold(0.0000)? ==> 35.7602
neuronOutput[6]: activation(18.9129) > threshold(0.0000)? ==> 18.9129
neuronOutput[7]: activation(18.9129) > threshold(0.0000)? ==> 18.9129
neuronOutput[8]: activation(18.9129) > threshold(0.0000)? ==> 18.9129
neuronOutput[9]: activation(18.9129) > threshold(0.0000)? ==> 18.9129
neuronOutput[10]: activation(18.9129) > threshold(0.0000)? ==> 18.9129
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](18.9129)
networkOutput[2] := neuronOutput[10](18.9129)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(35.7602) * weight[3,3](0.1000) => 3.5760
activation[4] = self(35.7602) * weight[4,4](0.1000) => 3.5760
activation[5] = self(35.7602) * weight[5,5](0.1000) => 3.5760
activation[6] = self(18.9129) * weight[6,6](0.1000) => 1.8913
activation[7] = self(18.9129) * weight[7,7](0.1000) => 1.8913
activation[8] = self(18.9129) * weight[8,8](0.1000) => 1.8913
activation[9] = self(18.9129) * weight[9,9](0.1000) => 1.8913
activation[10] = self(18.9129) * weight[10,10](0.1000) => 1.8913
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(3.5760) + output[1](35.5556) * 1.0000 => 39.1316
activation[3] = self(39.1316) + output[7](18.9129) * -0.5000 => 29.6751
activation[3] = self(29.6751) + output[8](18.9129) * -0.5000 => 20.2187
activation[4] = self(3.5760) + output[1](35.5556) * 0.5000 => 21.3538
activation[4] = self(21.3538) + output[2](35.5556) * 0.5000 => 39.1316
activation[4] = self(39.1316) + output[6](18.9129) * -0.5000 => 29.6751
activation[4] = self(29.6751) + output[8](18.9129) * -0.5000 => 20.2187
activation[5] = self(3.5760) + output[2](35.5556) * 1.0000 => 39.1316
activation[5] = self(39.1316) + output[6](18.9129) * -0.5000 => 29.6751
activation[5] = self(29.6751) + output[7](18.9129) * -0.5000 => 20.2187
activation[6] = self(1.8913) + output[3](35.7602) * 1.0000 => 37.6515
activation[7] = self(1.8913) + output[4](35.7602) * 1.0000 => 37.6515
activation[8] = self(1.8913) + output[5](35.7602) * 1.0000 => 37.6515
activation[9] = self(1.8913) + output[3](35.7602) * 0.7500 => 28.7114
activation[9] = self(28.7114) + output[4](35.7602) * 0.2500 => 37.6515
activation[10] = self(1.8913) + output[4](35.7602) * 0.2500 => 10.8313
activation[10] = self(10.8313) + output[5](35.7602) * 0.7500 => 37.6515
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(20.2187) > threshold(0.0000)? ==> 20.2187
neuronOutput[4]: activation(20.2187) > threshold(0.0000)? ==> 20.2187
neuronOutput[5]: activation(20.2187) > threshold(0.0000)? ==> 20.2187
neuronOutput[6]: activation(37.6515) > threshold(0.0000)? ==> 37.6515
neuronOutput[7]: activation(37.6515) > threshold(0.0000)? ==> 37.6515
neuronOutput[8]: activation(37.6515) > threshold(0.0000)? ==> 37.6515
neuronOutput[9]: activation(37.6515) > threshold(0.0000)? ==> 37.6515
neuronOutput[10]: activation(37.6515) > threshold(0.0000)? ==> 37.6515
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](37.6515)
networkOutput[2] := neuronOutput[10](37.6515)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(20.2187) * weight[3,3](0.1000) => 2.0219
activation[4] = self(20.2187) * weight[4,4](0.1000) => 2.0219
activation[5] = self(20.2187) * weight[5,5](0.1000) => 2.0219
activation[6] = self(37.6515) * weight[6,6](0.1000) => 3.7651
activation[7] = self(37.6515) * weight[7,7](0.1000) => 3.7651
activation[8] = self(37.6515) * weight[8,8](0.1000) => 3.7651
activation[9] = self(37.6515) * weight[9,9](0.1000) => 3.7651
activation[10] = self(37.6515) * weight[10,10](0.1000) => 3.7651
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(2.0219) + output[1](35.5556) * 1.0000 => 37.5774
activation[3] = self(37.5774) + output[7](37.6515) * -0.5000 => 18.7517
activation[3] = self(18.7517) + output[8](37.6515) * -0.5000 => -0.0740
activation[4] = self(2.0219) + output[1](35.5556) * 0.5000 => 19.7997
activation[4] = self(19.7997) + output[2](35.5556) * 0.5000 => 37.5774
activation[4] = self(37.5774) + output[6](37.6515) * -0.5000 => 18.7517
activation[4] = self(18.7517) + output[8](37.6515) * -0.5000 => -0.0740
activation[5] = self(2.0219) + output[2](35.5556) * 1.0000 => 37.5774
activation[5] = self(37.5774) + output[6](37.6515) * -0.5000 => 18.7517
activation[5] = self(18.7517) + output[7](37.6515) * -0.5000 => -0.0740
activation[6] = self(3.7651) + output[3](20.2187) * 1.0000 => 23.9838
activation[7] = self(3.7651) + output[4](20.2187) * 1.0000 => 23.9838
activation[8] = self(3.7651) + output[5](20.2187) * 1.0000 => 23.9838
activation[9] = self(3.7651) + output[3](20.2187) * 0.7500 => 18.9292
activation[9] = self(18.9292) + output[4](20.2187) * 0.2500 => 23.9838
activation[10] = self(3.7651) + output[4](20.2187) * 0.2500 => 8.8198
activation[10] = self(8.8198) + output[5](20.2187) * 0.7500 => 23.9838
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(-0.0740) > threshold(0.0000)? ==> 0.0000
neuronOutput[4]: activation(-0.0740) > threshold(0.0000)? ==> 0.0000
neuronOutput[5]: activation(-0.0740) > threshold(0.0000)? ==> 0.0000
neuronOutput[6]: activation(23.9838) > threshold(0.0000)? ==> 23.9838
neuronOutput[7]: activation(23.9838) > threshold(0.0000)? ==> 23.9838
neuronOutput[8]: activation(23.9838) > threshold(0.0000)? ==> 23.9838
neuronOutput[9]: activation(23.9838) > threshold(0.0000)? ==> 23.9838
neuronOutput[10]: activation(23.9838) > threshold(0.0000)? ==> 23.9838
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](23.9838)
networkOutput[2] := neuronOutput[10](23.9838)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(-0.0740) * weight[3,3](0.1000) => -0.0074
activation[4] = self(-0.0740) * weight[4,4](0.1000) => -0.0074
activation[5] = self(-0.0740) * weight[5,5](0.1000) => -0.0074
activation[6] = self(23.9838) * weight[6,6](0.1000) => 2.3984
activation[7] = self(23.9838) * weight[7,7](0.1000) => 2.3984
activation[8] = self(23.9838) * weight[8,8](0.1000) => 2.3984
activation[9] = self(23.9838) * weight[9,9](0.1000) => 2.3984
activation[10] = self(23.9838) * weight[10,10](0.1000) => 2.3984
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(-0.0074) + output[1](35.5556) * 1.0000 => 35.5482
activation[3] = self(35.5482) + output[7](23.9838) * -0.5000 => 23.5562
activation[3] = self(23.5562) + output[8](23.9838) * -0.5000 => 11.5643
activation[4] = self(-0.0074) + output[1](35.5556) * 0.5000 => 17.7704
activation[4] = self(17.7704) + output[2](35.5556) * 0.5000 => 35.5482
activation[4] = self(35.5482) + output[6](23.9838) * -0.5000 => 23.5562
activation[4] = self(23.5562) + output[8](23.9838) * -0.5000 => 11.5643
activation[5] = self(-0.0074) + output[2](35.5556) * 1.0000 => 35.5482
activation[5] = self(35.5482) + output[6](23.9838) * -0.5000 => 23.5562
activation[5] = self(23.5562) + output[7](23.9838) * -0.5000 => 11.5643
activation[6] = self(2.3984) + output[3](0.0000) * 1.0000 => 2.3984
activation[7] = self(2.3984) + output[4](0.0000) * 1.0000 => 2.3984
activation[8] = self(2.3984) + output[5](0.0000) * 1.0000 => 2.3984
activation[9] = self(2.3984) + output[3](0.0000) * 0.7500 => 2.3984
activation[9] = self(2.3984) + output[4](0.0000) * 0.2500 => 2.3984
activation[10] = self(2.3984) + output[4](0.0000) * 0.2500 => 2.3984
activation[10] = self(2.3984) + output[5](0.0000) * 0.7500 => 2.3984
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(11.5643) > threshold(0.0000)? ==> 11.5643
neuronOutput[4]: activation(11.5643) > threshold(0.0000)? ==> 11.5643
neuronOutput[5]: activation(11.5643) > threshold(0.0000)? ==> 11.5643
neuronOutput[6]: activation(2.3984) > threshold(0.0000)? ==> 2.3984
neuronOutput[7]: activation(2.3984) > threshold(0.0000)? ==> 2.3984
neuronOutput[8]: activation(2.3984) > threshold(0.0000)? ==> 2.3984
neuronOutput[9]: activation(2.3984) > threshold(0.0000)? ==> 2.3984
neuronOutput[10]: activation(2.3984) > threshold(0.0000)? ==> 2.3984
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](2.3984)
networkOutput[2] := neuronOutput[10](2.3984)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(11.5643) * weight[3,3](0.1000) => 1.1564
activation[4] = self(11.5643) * weight[4,4](0.1000) => 1.1564
activation[5] = self(11.5643) * weight[5,5](0.1000) => 1.1564
activation[6] = self(2.3984) * weight[6,6](0.1000) => 0.2398
activation[7] = self(2.3984) * weight[7,7](0.1000) => 0.2398
activation[8] = self(2.3984) * weight[8,8](0.1000) => 0.2398
activation[9] = self(2.3984) * weight[9,9](0.1000) => 0.2398
activation[10] = self(2.3984) * weight[10,10](0.1000) => 0.2398
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(1.1564) + output[1](35.5556) * 1.0000 => 36.7120
activation[3] = self(36.7120) + output[7](2.3984) * -0.5000 => 35.5128
activation[3] = self(35.5128) + output[8](2.3984) * -0.5000 => 34.3136
activation[4] = self(1.1564) + output[1](35.5556) * 0.5000 => 18.9342
activation[4] = self(18.9342) + output[2](35.5556) * 0.5000 => 36.7120
activation[4] = self(36.7120) + output[6](2.3984) * -0.5000 => 35.5128
activation[4] = self(35.5128) + output[8](2.3984) * -0.5000 => 34.3136
activation[5] = self(1.1564) + output[2](35.5556) * 1.0000 => 36.7120
activation[5] = self(36.7120) + output[6](2.3984) * -0.5000 => 35.5128
activation[5] = self(35.5128) + output[7](2.3984) * -0.5000 => 34.3136
activation[6] = self(0.2398) + output[3](11.5643) * 1.0000 => 11.8042
activation[7] = self(0.2398) + output[4](11.5643) * 1.0000 => 11.8042
activation[8] = self(0.2398) + output[5](11.5643) * 1.0000 => 11.8042
activation[9] = self(0.2398) + output[3](11.5643) * 0.7500 => 8.9131
activation[9] = self(8.9131) + output[4](11.5643) * 0.2500 => 11.8042
activation[10] = self(0.2398) + output[4](11.5643) * 0.2500 => 3.1309
activation[10] = self(3.1309) + output[5](11.5643) * 0.7500 => 11.8042
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(34.3136) > threshold(0.0000)? ==> 34.3136
neuronOutput[4]: activation(34.3136) > threshold(0.0000)? ==> 34.3136
neuronOutput[5]: activation(34.3136) > threshold(0.0000)? ==> 34.3136
neuronOutput[6]: activation(11.8042) > threshold(0.0000)? ==> 11.8042
neuronOutput[7]: activation(11.8042) > threshold(0.0000)? ==> 11.8042
neuronOutput[8]: activation(11.8042) > threshold(0.0000)? ==> 11.8042
neuronOutput[9]: activation(11.8042) > threshold(0.0000)? ==> 11.8042
neuronOutput[10]: activation(11.8042) > threshold(0.0000)? ==> 11.8042
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](11.8042)
networkOutput[2] := neuronOutput[10](11.8042)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(34.3136) * weight[3,3](0.1000) => 3.4314
activation[4] = self(34.3136) * weight[4,4](0.1000) => 3.4314
activation[5] = self(34.3136) * weight[5,5](0.1000) => 3.4314
activation[6] = self(11.8042) * weight[6,6](0.1000) => 1.1804
activation[7] = self(11.8042) * weight[7,7](0.1000) => 1.1804
activation[8] = self(11.8042) * weight[8,8](0.1000) => 1.1804
activation[9] = self(11.8042) * weight[9,9](0.1000) => 1.1804
activation[10] = self(11.8042) * weight[10,10](0.1000) => 1.1804
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(3.4314) + output[1](35.5556) * 1.0000 => 38.9869
activation[3] = self(38.9869) + output[7](11.8042) * -0.5000 => 33.0848
activation[3] = self(33.0848) + output[8](11.8042) * -0.5000 => 27.1828
activation[4] = self(3.4314) + output[1](35.5556) * 0.5000 => 21.2091
activation[4] = self(21.2091) + output[2](35.5556) * 0.5000 => 38.9869
activation[4] = self(38.9869) + output[6](11.8042) * -0.5000 => 33.0848
activation[4] = self(33.0848) + output[8](11.8042) * -0.5000 => 27.1828
activation[5] = self(3.4314) + output[2](35.5556) * 1.0000 => 38.9869
activation[5] = self(38.9869) + output[6](11.8042) * -0.5000 => 33.0848
activation[5] = self(33.0848) + output[7](11.8042) * -0.5000 => 27.1828
activation[6] = self(1.1804) + output[3](34.3136) * 1.0000 => 35.4940
activation[7] = self(1.1804) + output[4](34.3136) * 1.0000 => 35.4940
activation[8] = self(1.1804) + output[5](34.3136) * 1.0000 => 35.4940
activation[9] = self(1.1804) + output[3](34.3136) * 0.7500 => 26.9156
activation[9] = self(26.9156) + output[4](34.3136) * 0.2500 => 35.4940
activation[10] = self(1.1804) + output[4](34.3136) * 0.2500 => 9.7588
activation[10] = self(9.7588) + output[5](34.3136) * 0.7500 => 35.4940
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(27.1828) > threshold(0.0000)? ==> 27.1828
neuronOutput[4]: activation(27.1828) > threshold(0.0000)? ==> 27.1828
neuronOutput[5]: activation(27.1828) > threshold(0.0000)? ==> 27.1828
neuronOutput[6]: activation(35.4940) > threshold(0.0000)? ==> 35.4940
neuronOutput[7]: activation(35.4940) > threshold(0.0000)? ==> 35.4940
neuronOutput[8]: activation(35.4940) > threshold(0.0000)? ==> 35.4940
neuronOutput[9]: activation(35.4940) > threshold(0.0000)? ==> 35.4940
neuronOutput[10]: activation(35.4940) > threshold(0.0000)? ==> 35.4940
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](35.4940)
networkOutput[2] := neuronOutput[10](35.4940)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(27.1828) * weight[3,3](0.1000) => 2.7183
activation[4] = self(27.1828) * weight[4,4](0.1000) => 2.7183
activation[5] = self(27.1828) * weight[5,5](0.1000) => 2.7183
activation[6] = self(35.4940) * weight[6,6](0.1000) => 3.5494
activation[7] = self(35.4940) * weight[7,7](0.1000) => 3.5494
activation[8] = self(35.4940) * weight[8,8](0.1000) => 3.5494
activation[9] = self(35.4940) * weight[9,9](0.1000) => 3.5494
activation[10] = self(35.4940) * weight[10,10](0.1000) => 3.5494
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(2.7183) + output[1](35.5556) * 1.0000 => 38.2738
activation[3] = self(38.2738) + output[7](35.4940) * -0.5000 => 20.5268
activation[3] = self(20.5268) + output[8](35.4940) * -0.5000 => 2.7798
activation[4] = self(2.7183) + output[1](35.5556) * 0.5000 => 20.4961
activation[4] = self(20.4961) + output[2](35.5556) * 0.5000 => 38.2738
activation[4] = self(38.2738) + output[6](35.4940) * -0.5000 => 20.5268
activation[4] = self(20.5268) + output[8](35.4940) * -0.5000 => 2.7798
activation[5] = self(2.7183) + output[2](35.5556) * 1.0000 => 38.2738
activation[5] = self(38.2738) + output[6](35.4940) * -0.5000 => 20.5268
activation[5] = self(20.5268) + output[7](35.4940) * -0.5000 => 2.7798
activation[6] = self(3.5494) + output[3](27.1828) * 1.0000 => 30.7322
activation[7] = self(3.5494) + output[4](27.1828) * 1.0000 => 30.7322
activation[8] = self(3.5494) + output[5](27.1828) * 1.0000 => 30.7322
activation[9] = self(3.5494) + output[3](27.1828) * 0.7500 => 23.9365
activation[9] = self(23.9365) + output[4](27.1828) * 0.2500 => 30.7322
activation[10] = self(3.5494) + output[4](27.1828) * 0.2500 => 10.3451
activation[10] = self(10.3451) + output[5](27.1828) * 0.7500 => 30.7322
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(2.7798) > threshold(0.0000)? ==> 2.7798
neuronOutput[4]: activation(2.7798) > threshold(0.0000)? ==> 2.7798
neuronOutput[5]: activation(2.7798) > threshold(0.0000)? ==> 2.7798
neuronOutput[6]: activation(30.7322) > threshold(0.0000)? ==> 30.7322
neuronOutput[7]: activation(30.7322) > threshold(0.0000)? ==> 30.7322
neuronOutput[8]: activation(30.7322) > threshold(0.0000)? ==> 30.7322
neuronOutput[9]: activation(30.7322) > threshold(0.0000)? ==> 30.7322
neuronOutput[10]: activation(30.7322) > threshold(0.0000)? ==> 30.7322
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](30.7322)
networkOutput[2] := neuronOutput[10](30.7322)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(2.7798) * weight[3,3](0.1000) => 0.2780
activation[4] = self(2.7798) * weight[4,4](0.1000) => 0.2780
activation[5] = self(2.7798) * weight[5,5](0.1000) => 0.2780
activation[6] = self(30.7322) * weight[6,6](0.1000) => 3.0732
activation[7] = self(30.7322) * weight[7,7](0.1000) => 3.0732
activation[8] = self(30.7322) * weight[8,8](0.1000) => 3.0732
activation[9] = self(30.7322) * weight[9,9](0.1000) => 3.0732
activation[10] = self(30.7322) * weight[10,10](0.1000) => 3.0732
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(0.2780) + output[1](35.5556) * 1.0000 => 35.8335
activation[3] = self(35.8335) + output[7](30.7322) * -0.5000 => 20.4675
activation[3] = self(20.4675) + output[8](30.7322) * -0.5000 => 5.1014
activation[4] = self(0.2780) + output[1](35.5556) * 0.5000 => 18.0558
activation[4] = self(18.0558) + output[2](35.5556) * 0.5000 => 35.8335
activation[4] = self(35.8335) + output[6](30.7322) * -0.5000 => 20.4675
activation[4] = self(20.4675) + output[8](30.7322) * -0.5000 => 5.1014
activation[5] = self(0.2780) + output[2](35.5556) * 1.0000 => 35.8335
activation[5] = self(35.8335) + output[6](30.7322) * -0.5000 => 20.4675
activation[5] = self(20.4675) + output[7](30.7322) * -0.5000 => 5.1014
activation[6] = self(3.0732) + output[3](2.7798) * 1.0000 => 5.8530
activation[7] = self(3.0732) + output[4](2.7798) * 1.0000 => 5.8530
activation[8] = self(3.0732) + output[5](2.7798) * 1.0000 => 5.8530
activation[9] = self(3.0732) + output[3](2.7798) * 0.7500 => 5.1581
activation[9] = self(5.1581) + output[4](2.7798) * 0.2500 => 5.8530
activation[10] = self(3.0732) + output[4](2.7798) * 0.2500 => 3.7682
activation[10] = self(3.7682) + output[5](2.7798) * 0.7500 => 5.8530
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(5.1014) > threshold(0.0000)? ==> 5.1014
neuronOutput[4]: activation(5.1014) > threshold(0.0000)? ==> 5.1014
neuronOutput[5]: activation(5.1014) > threshold(0.0000)? ==> 5.1014
neuronOutput[6]: activation(5.8530) > threshold(0.0000)? ==> 5.8530
neuronOutput[7]: activation(5.8530) > threshold(0.0000)? ==> 5.8530
neuronOutput[8]: activation(5.8530) > threshold(0.0000)? ==> 5.8530
neuronOutput[9]: activation(5.8530) > threshold(0.0000)? ==> 5.8530
neuronOutput[10]: activation(5.8530) > threshold(0.0000)? ==> 5.8530
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](5.8530)
networkOutput[2] := neuronOutput[10](5.8530)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(5.1014) * weight[3,3](0.1000) => 0.5101
activation[4] = self(5.1014) * weight[4,4](0.1000) => 0.5101
activation[5] = self(5.1014) * weight[5,5](0.1000) => 0.5101
activation[6] = self(5.8530) * weight[6,6](0.1000) => 0.5853
activation[7] = self(5.8530) * weight[7,7](0.1000) => 0.5853
activation[8] = self(5.8530) * weight[8,8](0.1000) => 0.5853
activation[9] = self(5.8530) * weight[9,9](0.1000) => 0.5853
activation[10] = self(5.8530) * weight[10,10](0.1000) => 0.5853
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(0.5101) + output[1](35.5556) * 1.0000 => 36.0657
activation[3] = self(36.0657) + output[7](5.8530) * -0.5000 => 33.1392
activation[3] = self(33.1392) + output[8](5.8530) * -0.5000 => 30.2127
activation[4] = self(0.5101) + output[1](35.5556) * 0.5000 => 18.2879
activation[4] = self(18.2879) + output[2](35.5556) * 0.5000 => 36.0657
activation[4] = self(36.0657) + output[6](5.8530) * -0.5000 => 33.1392
activation[4] = self(33.1392) + output[8](5.8530) * -0.5000 => 30.2127
activation[5] = self(0.5101) + output[2](35.5556) * 1.0000 => 36.0657
activation[5] = self(36.0657) + output[6](5.8530) * -0.5000 => 33.1392
activation[5] = self(33.1392) + output[7](5.8530) * -0.5000 => 30.2127
activation[6] = self(0.5853) + output[3](5.1014) * 1.0000 => 5.6867
activation[7] = self(0.5853) + output[4](5.1014) * 1.0000 => 5.6867
activation[8] = self(0.5853) + output[5](5.1014) * 1.0000 => 5.6867
activation[9] = self(0.5853) + output[3](5.1014) * 0.7500 => 4.4113
activation[9] = self(4.4113) + output[4](5.1014) * 0.2500 => 5.6867
activation[10] = self(0.5853) + output[4](5.1014) * 0.2500 => 1.8606
activation[10] = self(1.8606) + output[5](5.1014) * 0.7500 => 5.6867
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(30.2127) > threshold(0.0000)? ==> 30.2127
neuronOutput[4]: activation(30.2127) > threshold(0.0000)? ==> 30.2127
neuronOutput[5]: activation(30.2127) > threshold(0.0000)? ==> 30.2127
neuronOutput[6]: activation(5.6867) > threshold(0.0000)? ==> 5.6867
neuronOutput[7]: activation(5.6867) > threshold(0.0000)? ==> 5.6867
neuronOutput[8]: activation(5.6867) > threshold(0.0000)? ==> 5.6867
neuronOutput[9]: activation(5.6867) > threshold(0.0000)? ==> 5.6867
neuronOutput[10]: activation(5.6867) > threshold(0.0000)? ==> 5.6867
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](5.6867)
networkOutput[2] := neuronOutput[10](5.6867)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(30.2127) * weight[3,3](0.1000) => 3.0213
activation[4] = self(30.2127) * weight[4,4](0.1000) => 3.0213
activation[5] = self(30.2127) * weight[5,5](0.1000) => 3.0213
activation[6] = self(5.6867) * weight[6,6](0.1000) => 0.5687
activation[7] = self(5.6867) * weight[7,7](0.1000) => 0.5687
activation[8] = self(5.6867) * weight[8,8](0.1000) => 0.5687
activation[9] = self(5.6867) * weight[9,9](0.1000) => 0.5687
activation[10] = self(5.6867) * weight[10,10](0.1000) => 0.5687
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(3.0213) + output[1](35.5556) * 1.0000 => 38.5768
activation[3] = self(38.5768) + output[7](5.6867) * -0.5000 => 35.7335
activation[3] = self(35.7335) + output[8](5.6867) * -0.5000 => 32.8902
activation[4] = self(3.0213) + output[1](35.5556) * 0.5000 => 20.7990
activation[4] = self(20.7990) + output[2](35.5556) * 0.5000 => 38.5768
activation[4] = self(38.5768) + output[6](5.6867) * -0.5000 => 35.7335
activation[4] = self(35.7335) + output[8](5.6867) * -0.5000 => 32.8902
activation[5] = self(3.0213) + output[2](35.5556) * 1.0000 => 38.5768
activation[5] = self(38.5768) + output[6](5.6867) * -0.5000 => 35.7335
activation[5] = self(35.7335) + output[7](5.6867) * -0.5000 => 32.8902
activation[6] = self(0.5687) + output[3](30.2127) * 1.0000 => 30.7813
activation[7] = self(0.5687) + output[4](30.2127) * 1.0000 => 30.7813
activation[8] = self(0.5687) + output[5](30.2127) * 1.0000 => 30.7813
activation[9] = self(0.5687) + output[3](30.2127) * 0.7500 => 23.2282
activation[9] = self(23.2282) + output[4](30.2127) * 0.2500 => 30.7813
activation[10] = self(0.5687) + output[4](30.2127) * 0.2500 => 8.1218
activation[10] = self(8.1218) + output[5](30.2127) * 0.7500 => 30.7813
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(32.8902) > threshold(0.0000)? ==> 32.8902
neuronOutput[4]: activation(32.8902) > threshold(0.0000)? ==> 32.8902
neuronOutput[5]: activation(32.8902) > threshold(0.0000)? ==> 32.8902
neuronOutput[6]: activation(30.7813) > threshold(0.0000)? ==> 30.7813
neuronOutput[7]: activation(30.7813) > threshold(0.0000)? ==> 30.7813
neuronOutput[8]: activation(30.7813) > threshold(0.0000)? ==> 30.7813
neuronOutput[9]: activation(30.7813) > threshold(0.0000)? ==> 30.7813
neuronOutput[10]: activation(30.7813) > threshold(0.0000)? ==> 30.7813
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](30.7813)
networkOutput[2] := neuronOutput[10](30.7813)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(32.8902) * weight[3,3](0.1000) => 3.2890
activation[4] = self(32.8902) * weight[4,4](0.1000) => 3.2890
activation[5] = self(32.8902) * weight[5,5](0.1000) => 3.2890
activation[6] = self(30.7813) * weight[6,6](0.1000) => 3.0781
activation[7] = self(30.7813) * weight[7,7](0.1000) => 3.0781
activation[8] = self(30.7813) * weight[8,8](0.1000) => 3.0781
activation[9] = self(30.7813) * weight[9,9](0.1000) => 3.0781
activation[10] = self(30.7813) * weight[10,10](0.1000) => 3.0781
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(3.2890) + output[1](35.5556) * 1.0000 => 38.8446
activation[3] = self(38.8446) + output[7](30.7813) * -0.5000 => 23.4539
activation[3] = self(23.4539) + output[8](30.7813) * -0.5000 => 8.0632
activation[4] = self(3.2890) + output[1](35.5556) * 0.5000 => 21.0668
activation[4] = self(21.0668) + output[2](35.5556) * 0.5000 => 38.8446
activation[4] = self(38.8446) + output[6](30.7813) * -0.5000 => 23.4539
activation[4] = self(23.4539) + output[8](30.7813) * -0.5000 => 8.0632
activation[5] = self(3.2890) + output[2](35.5556) * 1.0000 => 38.8446
activation[5] = self(38.8446) + output[6](30.7813) * -0.5000 => 23.4539
activation[5] = self(23.4539) + output[7](30.7813) * -0.5000 => 8.0632
activation[6] = self(3.0781) + output[3](32.8902) * 1.0000 => 35.9683
activation[7] = self(3.0781) + output[4](32.8902) * 1.0000 => 35.9683
activation[8] = self(3.0781) + output[5](32.8902) * 1.0000 => 35.9683
activation[9] = self(3.0781) + output[3](32.8902) * 0.7500 => 27.7457
activation[9] = self(27.7457) + output[4](32.8902) * 0.2500 => 35.9683
activation[10] = self(3.0781) + output[4](32.8902) * 0.2500 => 11.3007
activation[10] = self(11.3007) + output[5](32.8902) * 0.7500 => 35.9683
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(8.0632) > threshold(0.0000)? ==> 8.0632
neuronOutput[4]: activation(8.0632) > threshold(0.0000)? ==> 8.0632
neuronOutput[5]: activation(8.0632) > threshold(0.0000)? ==> 8.0632
neuronOutput[6]: activation(35.9683) > threshold(0.0000)? ==> 35.9683
neuronOutput[7]: activation(35.9683) > threshold(0.0000)? ==> 35.9683
neuronOutput[8]: activation(35.9683) > threshold(0.0000)? ==> 35.9683
neuronOutput[9]: activation(35.9683) > threshold(0.0000)? ==> 35.9683
neuronOutput[10]: activation(35.9683) > threshold(0.0000)? ==> 35.9683
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](35.9683)
networkOutput[2] := neuronOutput[10](35.9683)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(8.0632) * weight[3,3](0.1000) => 0.8063
activation[4] = self(8.0632) * weight[4,4](0.1000) => 0.8063
activation[5] = self(8.0632) * weight[5,5](0.1000) => 0.8063
activation[6] = self(35.9683) * weight[6,6](0.1000) => 3.5968
activation[7] = self(35.9683) * weight[7,7](0.1000) => 3.5968
activation[8] = self(35.9683) * weight[8,8](0.1000) => 3.5968
activation[9] = self(35.9683) * weight[9,9](0.1000) => 3.5968
activation[10] = self(35.9683) * weight[10,10](0.1000) => 3.5968
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(0.8063) + output[1](35.5556) * 1.0000 => 36.3619
activation[3] = self(36.3619) + output[7](35.9683) * -0.5000 => 18.3777
activation[3] = self(18.3777) + output[8](35.9683) * -0.5000 => 0.3936
activation[4] = self(0.8063) + output[1](35.5556) * 0.5000 => 18.5841
activation[4] = self(18.5841) + output[2](35.5556) * 0.5000 => 36.3619
activation[4] = self(36.3619) + output[6](35.9683) * -0.5000 => 18.3777
activation[4] = self(18.3777) + output[8](35.9683) * -0.5000 => 0.3936
activation[5] = self(0.8063) + output[2](35.5556) * 1.0000 => 36.3619
activation[5] = self(36.3619) + output[6](35.9683) * -0.5000 => 18.3777
activation[5] = self(18.3777) + output[7](35.9683) * -0.5000 => 0.3936
activation[6] = self(3.5968) + output[3](8.0632) * 1.0000 => 11.6601
activation[7] = self(3.5968) + output[4](8.0632) * 1.0000 => 11.6601
activation[8] = self(3.5968) + output[5](8.0632) * 1.0000 => 11.6601
activation[9] = self(3.5968) + output[3](8.0632) * 0.7500 => 9.6443
activation[9] = self(9.6443) + output[4](8.0632) * 0.2500 => 11.6601
activation[10] = self(3.5968) + output[4](8.0632) * 0.2500 => 5.6126
activation[10] = self(5.6126) + output[5](8.0632) * 0.7500 => 11.6601
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(0.3936) > threshold(0.0000)? ==> 0.3936
neuronOutput[4]: activation(0.3936) > threshold(0.0000)? ==> 0.3936
neuronOutput[5]: activation(0.3936) > threshold(0.0000)? ==> 0.3936
neuronOutput[6]: activation(11.6601) > threshold(0.0000)? ==> 11.6601
neuronOutput[7]: activation(11.6601) > threshold(0.0000)? ==> 11.6601
neuronOutput[8]: activation(11.6601) > threshold(0.0000)? ==> 11.6601
neuronOutput[9]: activation(11.6601) > threshold(0.0000)? ==> 11.6601
neuronOutput[10]: activation(11.6601) > threshold(0.0000)? ==> 11.6601
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](11.6601)
networkOutput[2] := neuronOutput[10](11.6601)
***** cycleNetwork
1. networkActivation()
  a. Update autapses
activation[1] = self(35.5556) * weight[1,1](0.1000) => 3.5556
activation[2] = self(35.5556) * weight[2,2](0.1000) => 3.5556
activation[3] = self(0.3936) * weight[3,3](0.1000) => 0.0394
activation[4] = self(0.3936) * weight[4,4](0.1000) => 0.0394
activation[5] = self(0.3936) * weight[5,5](0.1000) => 0.0394
activation[6] = self(11.6601) * weight[6,6](0.1000) => 1.1660
activation[7] = self(11.6601) * weight[7,7](0.1000) => 1.1660
activation[8] = self(11.6601) * weight[8,8](0.1000) => 1.1660
activation[9] = self(11.6601) * weight[9,9](0.1000) => 1.1660
activation[10] = self(11.6601) * weight[10,10](0.1000) => 1.1660
  b. Update inputs from other neurons
activation[1] = self(3.5556) + network_input[1]=32.0000 => 35.5556
activation[2] = self(3.5556) + network_input[2]=32.0000 => 35.5556
activation[3] = self(0.0394) + output[1](35.5556) * 1.0000 => 35.5949
activation[3] = self(35.5949) + output[7](11.6601) * -0.5000 => 29.7649
activation[3] = self(29.7649) + output[8](11.6601) * -0.5000 => 23.9349
activation[4] = self(0.0394) + output[1](35.5556) * 0.5000 => 17.8171
activation[4] = self(17.8171) + output[2](35.5556) * 0.5000 => 35.5949
activation[4] = self(35.5949) + output[6](11.6601) * -0.5000 => 29.7649
activation[4] = self(29.7649) + output[8](11.6601) * -0.5000 => 23.9349
activation[5] = self(0.0394) + output[2](35.5556) * 1.0000 => 35.5949
activation[5] = self(35.5949) + output[6](11.6601) * -0.5000 => 29.7649
activation[5] = self(29.7649) + output[7](11.6601) * -0.5000 => 23.9349
activation[6] = self(1.1660) + output[3](0.3936) * 1.0000 => 1.5596
activation[7] = self(1.1660) + output[4](0.3936) * 1.0000 => 1.5596
activation[8] = self(1.1660) + output[5](0.3936) * 1.0000 => 1.5596
activation[9] = self(1.1660) + output[3](0.3936) * 0.7500 => 1.4612
activation[9] = self(1.4612) + output[4](0.3936) * 0.2500 => 1.5596
activation[10] = self(1.1660) + output[4](0.3936) * 0.2500 => 1.2644
activation[10] = self(1.2644) + output[5](0.3936) * 0.7500 => 1.5596
2. copyNeuronActivationsToNeuronOutputs() (WARN) does nothing
3. thresholdNeuronOutputs()
neuronOutput[1]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[2]: activation(35.5556) > threshold(0.0000)? ==> 35.5556
neuronOutput[3]: activation(23.9349) > threshold(0.0000)? ==> 23.9349
neuronOutput[4]: activation(23.9349) > threshold(0.0000)? ==> 23.9349
neuronOutput[5]: activation(23.9349) > threshold(0.0000)? ==> 23.9349
neuronOutput[6]: activation(1.5596) > threshold(0.0000)? ==> 1.5596
neuronOutput[7]: activation(1.5596) > threshold(0.0000)? ==> 1.5596
neuronOutput[8]: activation(1.5596) > threshold(0.0000)? ==> 1.5596
neuronOutput[9]: activation(1.5596) > threshold(0.0000)? ==> 1.5596
neuronOutput[10]: activation(1.5596) > threshold(0.0000)? ==> 1.5596
4. setNetworkOutput()
networkOutput[1] := neuronOutput[9](1.5596)
networkOutput[2] := neuronOutput[10](1.5596)
